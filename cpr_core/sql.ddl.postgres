--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: cpr; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE cpr WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.UTF-8' LC_CTYPE = 'en_US.UTF-8';


ALTER DATABASE cpr OWNER TO postgres;

\connect cpr

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: cpr; Type: SCHEMA; Schema: -; Owner: cpruser
--

CREATE SCHEMA cpr;


ALTER SCHEMA cpr OWNER TO cpruser;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = cpr, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: academic_college_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE academic_college_cs (
    college_code character varying(2) NOT NULL,
    college_name character varying(100) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT academic_college_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.academic_college_cs OWNER TO cpruser;

--
-- Name: academic_department_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE academic_department_cs (
    department_code character varying(5) NOT NULL,
    department_name character varying(100) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT academic_department_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.academic_department_cs OWNER TO cpruser;

--
-- Name: seq_address_staging; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_address_staging
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_address_staging OWNER TO cpruser;

--
-- Name: address_staging; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE address_staging (
    address_staging_key integer DEFAULT nextval('seq_address_staging'::regclass) NOT NULL,
    person_id integer NOT NULL,
    data_type_key integer NOT NULL,
    campus_code_key integer,
    campus_code character varying(2),
    country_key integer,
    country_code_two character varying(2),
    country_code_three character varying(3),
    province character varying(40),
    address1 character varying(100),
    address2 character varying(100),
    address3 character varying(100),
    city character varying(40),
    state character varying(2),
    postal_code character varying(20),
    address_match_code character varying(60),
    city_match_code character varying(60),
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.address_staging OWNER TO cpruser;

--
-- Name: seq_addresses; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_addresses
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_addresses OWNER TO cpruser;

--
-- Name: addresses; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE addresses (
    address_key integer DEFAULT nextval('seq_addresses'::regclass) NOT NULL,
    address1 character varying(60),
    address2 character varying(60),
    address3 character varying(60),
    address_match_code character varying(60),
    campus_code_key integer,
    city character varying(40),
    city_match_code character varying(60),
    country_key integer,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    document_type_key integer,
    end_date timestamp without time zone,
    group_id integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    postal_code character varying(20),
    primary_flag character varying(1) NOT NULL,
    province character varying(40),
    start_date timestamp without time zone NOT NULL,
    state character varying(2),
    validate_attempted_on timestamp without time zone,
    verified_flag character varying(1) NOT NULL,
    do_not_verify_flag character varying(1) NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.addresses OWNER TO cpruser;

--
-- Name: seq_aff_transition_rules; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_aff_transition_rules
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_aff_transition_rules OWNER TO cpruser;

--
-- Name: aff_transition_rules; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE aff_transition_rules (
    aff_transition_rule_key integer DEFAULT nextval('seq_aff_transition_rules'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    current_affiliation_key integer,
    expire_flag character varying(1) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    request_affiliation_key integer NOT NULL,
    result_affiliation_key integer NOT NULL
);


ALTER TABLE cpr.aff_transition_rules OWNER TO cpruser;

--
-- Name: seq_affiliations; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_affiliations
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_affiliations OWNER TO cpruser;

--
-- Name: affiliations; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE affiliations (
    affiliation_key integer DEFAULT nextval('seq_affiliations'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    affiliation character varying(40) NOT NULL,
    affiliation_desc character varying(200) NOT NULL,
    can_assign_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    enum_string character varying(200),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    parent_affiliation_key integer
);


ALTER TABLE cpr.affiliations OWNER TO cpruser;

--
-- Name: allowed_char_part; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE allowed_char_part (
    char_part character varying(30) NOT NULL
);


ALTER TABLE cpr.allowed_char_part OWNER TO cpruser;

--
-- Name: allowed_num_part; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE allowed_num_part (
    num_part integer NOT NULL
);


ALTER TABLE cpr.allowed_num_part OWNER TO cpruser;

--
-- Name: seq_answer_group; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_answer_group
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_answer_group OWNER TO cpruser;

--
-- Name: answer_group; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE answer_group (
    answer_group_key integer DEFAULT nextval('seq_answer_group'::regclass) NOT NULL,
    answer_method character varying(30) NOT NULL,
    default_selection character varying(100),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.answer_group OWNER TO cpruser;

--
-- Name: application_properties; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE application_properties (
    ui_application_key integer NOT NULL,
    key_name character varying(200) NOT NULL,
    key_value character varying(200) NOT NULL,
    active_flag character varying(1) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.application_properties OWNER TO cpruser;

--
-- Name: appointment_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE appointment_cs (
    appt_code character varying(3) NOT NULL,
    appt_desc character varying(40),
    appt_source character varying(4) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT appointment_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT appointment_cs_appt_source_check CHECK (((appt_source)::text = ANY ((ARRAY['HMC'::character varying, 'IBIS'::character varying])::text[])))
);


ALTER TABLE cpr.appointment_cs OWNER TO cpruser;

--
-- Name: bad_prefixes; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE bad_prefixes (
    char_part character varying(3) NOT NULL
);


ALTER TABLE cpr.bad_prefixes OWNER TO cpruser;

--
-- Name: seq_campus_cs; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_campus_cs
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_campus_cs OWNER TO cpruser;

--
-- Name: campus_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE campus_cs (
    campus_code_key integer DEFAULT nextval('seq_campus_cs'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    campus character varying(60) NOT NULL,
    campus_code character varying(2) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.campus_cs OWNER TO cpruser;

--
-- Name: seq_change_notification_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_change_notification_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_change_notification_types OWNER TO cpruser;

--
-- Name: change_notification_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE change_notification_types (
    change_notification_types_key integer DEFAULT nextval('seq_change_notification_types'::regclass) NOT NULL,
    notification_type character varying(60) NOT NULL,
    notification_desc character varying(100) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT change_notification_types_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.change_notification_types OWNER TO cpruser;

--
-- Name: seq_change_notifications; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_change_notifications
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_change_notifications OWNER TO cpruser;

--
-- Name: change_notifications; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE change_notifications (
    change_notifications_key integer DEFAULT nextval('seq_change_notifications'::regclass) NOT NULL,
    message_consumer_key integer NOT NULL,
    change_notification_types_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.change_notifications OWNER TO cpruser;

--
-- Name: seq_citizenship_cs; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_citizenship_cs
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_citizenship_cs OWNER TO cpruser;

--
-- Name: citizenship_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE citizenship_cs (
    citizenship integer DEFAULT nextval('seq_citizenship_cs'::regclass) NOT NULL,
    description character varying(128) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT citizenship_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.citizenship_cs OWNER TO cpruser;

--
-- Name: seq_confidentiality; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_confidentiality
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_confidentiality OWNER TO cpruser;

--
-- Name: confidentiality; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE confidentiality (
    confidentiality_key integer DEFAULT nextval('seq_confidentiality'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.confidentiality OWNER TO cpruser;

--
-- Name: seq_country; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_country
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_country OWNER TO cpruser;

--
-- Name: country; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE country (
    country_key integer DEFAULT nextval('seq_country'::regclass) NOT NULL,
    country character varying(60) NOT NULL,
    country_code_four character varying(4),
    country_code_three character varying(3) NOT NULL,
    country_code_two character varying(2) NOT NULL,
    country_full_name character varying(100) NOT NULL,
    country_numeric_code character varying(3),
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    remarks text,
    start_date timestamp without time zone,
    us_territory_flag character varying(1) NOT NULL
);


ALTER TABLE cpr.country OWNER TO cpruser;

--
-- Name: country_map; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE country_map (
    country_key integer NOT NULL,
    alpha2 character varying(2),
    alpha3 character varying(3),
    code2 character varying(2),
    code3 character varying(3),
    country character varying(50),
    country_map_key integer,
    iso_key integer,
    short_name character varying(50)
);


ALTER TABLE cpr.country_map OWNER TO cpruser;

--
-- Name: seq_cpr_access_groups; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_cpr_access_groups
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_cpr_access_groups OWNER TO cpruser;

--
-- Name: cpr_access_groups; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE cpr_access_groups (
    cpr_access_groups_key integer DEFAULT nextval('seq_cpr_access_groups'::regclass) NOT NULL,
    ra_server_principal_key integer NOT NULL,
    access_group character varying(60) NOT NULL,
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT cpr_access_groups_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.cpr_access_groups OWNER TO cpruser;

--
-- Name: seq_cpr_component_status; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_cpr_component_status
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_cpr_component_status OWNER TO cpruser;

--
-- Name: cpr_component_status; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE cpr_component_status (
    cpr_component_status_key integer DEFAULT nextval('seq_cpr_component_status'::regclass) NOT NULL,
    active_flag character varying(1),
    cpr_component character varying(60),
    cpr_component_desc character varying(200) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.cpr_component_status OWNER TO cpruser;

--
-- Name: seq_credential; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_credential
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_credential OWNER TO cpruser;

--
-- Name: credential; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE credential (
    credential_key integer DEFAULT nextval('seq_credential'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    credential_data character varying(100) NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.credential OWNER TO cpruser;

--
-- Name: seq_data_element_doc_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_data_element_doc_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_data_element_doc_types OWNER TO cpruser;

--
-- Name: data_element_doc_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE data_element_doc_types (
    data_element_doc_type_key integer DEFAULT nextval('seq_data_element_doc_types'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_element_type_key integer NOT NULL,
    document_type_key integer,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.data_element_doc_types OWNER TO cpruser;

--
-- Name: seq_data_element_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_data_element_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_data_element_types OWNER TO cpruser;

--
-- Name: data_element_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE data_element_types (
    data_element_type_key integer DEFAULT nextval('seq_data_element_types'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    iap_data_element_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.data_element_types OWNER TO cpruser;

--
-- Name: seq_data_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_data_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_data_types OWNER TO cpruser;

--
-- Name: data_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE data_types (
    data_type_key integer DEFAULT nextval('seq_data_types'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    can_assign_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type character varying(50) NOT NULL,
    data_type_desc character varying(200),
    enum_string character varying(200),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    parent_data_type_key integer
);


ALTER TABLE cpr.data_types OWNER TO cpruser;

--
-- Name: seq_database_log; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_database_log
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_database_log OWNER TO cpruser;

--
-- Name: database_log; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE database_log (
    database_log_key integer DEFAULT nextval('seq_database_log'::regclass) NOT NULL,
    entry_timestamp timestamp without time zone NOT NULL,
    entry_type character varying(5) NOT NULL,
    instance_number integer,
    output_string character varying(1000),
    package_name character varying(30) NOT NULL,
    program_name character varying(30) NOT NULL,
    request_duration integer,
    request_userid character varying(30)
);


ALTER TABLE cpr.database_log OWNER TO cpruser;

--
-- Name: seq_date_of_birth; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_date_of_birth
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_date_of_birth OWNER TO cpruser;

--
-- Name: date_of_birth; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE date_of_birth (
    date_of_birth_key integer DEFAULT nextval('seq_date_of_birth'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    dob timestamp without time zone,
    dob_char character varying(8),
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.date_of_birth OWNER TO cpruser;

--
-- Name: seq_email_address; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_email_address
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_email_address OWNER TO cpruser;

--
-- Name: email_address; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE email_address (
    email_address_key integer DEFAULT nextval('seq_email_address'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    email_address character varying(256) NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.email_address OWNER TO cpruser;

--
-- Name: seq_email_notification; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_email_notification
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_email_notification OWNER TO cpruser;

--
-- Name: email_notification; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE email_notification (
    mail_notification_key integer DEFAULT nextval('seq_email_notification'::regclass) NOT NULL,
    email_subject character varying(100) NOT NULL,
    text_body character varying(1500) NOT NULL,
    html_body character varying(1500) NOT NULL,
    notification_process character varying(100) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.email_notification OWNER TO cpruser;

--
-- Name: seq_employee; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_employee
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_employee OWNER TO cpruser;

--
-- Name: employee; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE employee (
    employee_key integer DEFAULT nextval('seq_employee'::regclass) NOT NULL,
    person_id integer NOT NULL,
    appt_code character varying(3),
    campus_code_key integer,
    status_code character varying(3),
    class_code character varying(4),
    primary_appt_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    show_in_directory_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    visa_type character varying(6),
    benefits_rate character varying(1),
    hire_date timestamp without time zone,
    terminated_date timestamp without time zone,
    last_date_paid timestamp without time zone,
    pay_freq_code character varying(4),
    layoff_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    department character varying(80),
    admin_area character varying(50),
    admin_area_code character varying(10),
    student_status character varying(1),
    special_status character varying(1),
    job_title character varying(80),
    alternate_job_title character varying(128),
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT employee_layoff_flag_check CHECK (((layoff_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT employee_primary_appt_flag_check CHECK (((primary_appt_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT employee_show_in_directory_flag_check CHECK (((show_in_directory_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.employee OWNER TO cpruser;

--
-- Name: employee_class_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE employee_class_cs (
    class_code character varying(4) NOT NULL,
    class_desc character varying(40),
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT employee_class_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.employee_class_cs OWNER TO cpruser;

--
-- Name: employee_hist; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE employee_hist (
    employee_key integer NOT NULL,
    person_id integer NOT NULL,
    appt_code character varying(3),
    campus_code_key integer,
    status_code character varying(3),
    class_code character varying(4),
    primary_appt_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    show_in_directory_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    visa_type character varying(6),
    benefits_rate character varying(1),
    hire_date timestamp without time zone,
    terminated_date timestamp without time zone,
    last_date_paid timestamp without time zone,
    pay_freq_code character varying(4),
    layoff_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    department character varying(80),
    admin_area character varying(50),
    admin_area_code character varying(10),
    student_status character varying(1),
    special_status character varying(1),
    job_title character varying(80),
    alternate_job_title character varying(128),
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.employee_hist OWNER TO cpruser;

--
-- Name: employee_status_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE employee_status_cs (
    status_code character varying(3) NOT NULL,
    status_desc character varying(40),
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT employee_status_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.employee_status_cs OWNER TO cpruser;

--
-- Name: seq_event_triggers; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_event_triggers
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_event_triggers OWNER TO cpruser;

--
-- Name: event_triggers; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE event_triggers (
    event_trigger_key integer DEFAULT nextval('seq_event_triggers'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    enum_string character varying(30) NOT NULL,
    event_trigger character varying(30) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.event_triggers OWNER TO cpruser;

--
-- Name: seq_ext_affiliation; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ext_affiliation
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ext_affiliation OWNER TO cpruser;

--
-- Name: ext_affiliation; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ext_affiliation (
    ext_affiliation_key integer DEFAULT nextval('seq_ext_affiliation'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    ext_affiliation character varying(30) NOT NULL,
    ext_affiliation_desc character varying(150) NOT NULL,
    ext_affiliation_type_key integer NOT NULL,
    last_update_by character varying(30),
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ext_affiliation OWNER TO cpruser;

--
-- Name: seq_ext_affiliation_mapping; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ext_affiliation_mapping
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ext_affiliation_mapping OWNER TO cpruser;

--
-- Name: ext_affiliation_mapping; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ext_affiliation_mapping (
    ext_affiliation_mapping_key integer DEFAULT nextval('seq_ext_affiliation_mapping'::regclass) NOT NULL,
    affiliation_key integer NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    ext_affiliation_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ext_affiliation_mapping OWNER TO cpruser;

--
-- Name: seq_ext_affiliation_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ext_affiliation_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ext_affiliation_types OWNER TO cpruser;

--
-- Name: ext_affiliation_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ext_affiliation_types (
    ext_affiliation_type_key integer DEFAULT nextval('seq_ext_affiliation_types'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    ext_affiliation_type character varying(30) NOT NULL,
    ext_affiliation_type_desc character varying(300) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ext_affiliation_types OWNER TO cpruser;

--
-- Name: seq_external_iap; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_external_iap
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_external_iap OWNER TO cpruser;

--
-- Name: external_iap; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE external_iap (
    external_iap_key integer DEFAULT nextval('seq_external_iap'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    external_iap character varying(30) NOT NULL,
    external_iap_desc character varying(150) NOT NULL,
    external_iap_url character varying(200),
    federation_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.external_iap OWNER TO cpruser;

--
-- Name: seq_federation; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_federation
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_federation OWNER TO cpruser;

--
-- Name: federation; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE federation (
    federation_key integer DEFAULT nextval('seq_federation'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    federation character varying(30) NOT NULL,
    federation_desc character varying(100) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.federation OWNER TO cpruser;

--
-- Name: seq_generated_identity; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_generated_identity
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_generated_identity OWNER TO cpruser;

--
-- Name: generated_identity; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE generated_identity (
    generated_identity_key integer DEFAULT nextval('seq_generated_identity'::regclass) NOT NULL,
    char_part character varying(30),
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    generated_identity character varying(30) NOT NULL,
    num_part integer,
    person_id integer NOT NULL,
    set_id integer NOT NULL
);


ALTER TABLE cpr.generated_identity OWNER TO cpruser;

--
-- Name: seq_group_data_type_access; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_group_data_type_access
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_group_data_type_access OWNER TO cpruser;

--
-- Name: group_data_type_access; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE group_data_type_access (
    group_data_type_access_key integer DEFAULT nextval('seq_group_data_type_access'::regclass) NOT NULL,
    cpr_access_groups_key integer NOT NULL,
    data_type_key integer NOT NULL,
    read_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    write_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    archive_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT group_data_type_access_archive_flag_check CHECK (((archive_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT group_data_type_access_read_flag_check CHECK (((read_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT group_data_type_access_write_flag_check CHECK (((write_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.group_data_type_access OWNER TO cpruser;

--
-- Name: seq_group_member_comments; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_group_member_comments
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_group_member_comments OWNER TO cpruser;

--
-- Name: group_member_comments; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE group_member_comments (
    group_member_comment_key integer DEFAULT nextval('seq_group_member_comments'::regclass) NOT NULL,
    comments character varying(2000) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    group_member_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.group_member_comments OWNER TO cpruser;

--
-- Name: seq_group_members; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_group_members
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_group_members OWNER TO cpruser;

--
-- Name: group_members; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE group_members (
    group_member_key integer DEFAULT nextval('seq_group_members'::regclass) NOT NULL,
    person_id integer NOT NULL,
    userid character varying(30) NOT NULL,
    cpr_access_groups_key integer NOT NULL,
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT group_members_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.group_members OWNER TO cpruser;

--
-- Name: seq_iap; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_iap
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_iap OWNER TO cpruser;

--
-- Name: iap; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE iap (
    iap_key integer DEFAULT nextval('seq_iap'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    iap character varying(30) NOT NULL,
    iap_desc character varying(100) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.iap OWNER TO cpruser;

--
-- Name: seq_iap_data_element; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_iap_data_element
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_iap_data_element OWNER TO cpruser;

--
-- Name: iap_data_element; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE iap_data_element (
    iap_data_element_key integer DEFAULT nextval('seq_iap_data_element'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    iap_data_element character varying(60) NOT NULL,
    iap_data_element_desc character varying(300) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.iap_data_element OWNER TO cpruser;

--
-- Name: seq_iap_document; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_iap_document
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_iap_document OWNER TO cpruser;

--
-- Name: iap_document; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE iap_document (
    iap_document_key integer DEFAULT nextval('seq_iap_document'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    document_type_key integer NOT NULL,
    end_date timestamp without time zone,
    iap_document_issuer character varying(100) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.iap_document OWNER TO cpruser;

--
-- Name: seq_iap_ext_mapping; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_iap_ext_mapping
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_iap_ext_mapping OWNER TO cpruser;

--
-- Name: iap_ext_mapping; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE iap_ext_mapping (
    iap_ext_mapping_key integer DEFAULT nextval('seq_iap_ext_mapping'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    external_iap_key integer NOT NULL,
    iap_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    mapping_url character varying(200),
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.iap_ext_mapping OWNER TO cpruser;

--
-- Name: seq_iap_rules; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_iap_rules
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_iap_rules OWNER TO cpruser;

--
-- Name: iap_rules; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE iap_rules (
    iap_rule_key integer DEFAULT nextval('seq_iap_rules'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    iap_data_element_key integer NOT NULL,
    iap_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    required_flag character varying(1) NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.iap_rules OWNER TO cpruser;

--
-- Name: seq_id_card_print_log; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_id_card_print_log
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_id_card_print_log OWNER TO cpruser;

--
-- Name: id_card_print_log; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE id_card_print_log (
    id_card_print_log_key integer DEFAULT nextval('seq_id_card_print_log'::regclass) NOT NULL,
    person_id_card_key integer NOT NULL,
    printed_by character varying(30) NOT NULL,
    printed_on timestamp without time zone NOT NULL,
    work_station_ip_address character varying(50) NOT NULL,
    work_station_name character varying(30) NOT NULL
);


ALTER TABLE cpr.id_card_print_log OWNER TO cpruser;

--
-- Name: seq_identifier_type; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_identifier_type
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_identifier_type OWNER TO cpruser;

--
-- Name: identifier_type; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE identifier_type (
    type_key integer DEFAULT nextval('seq_identifier_type'::regclass) NOT NULL,
    type_name character varying(50) NOT NULL,
    type_desc character varying(200),
    can_assign_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.identifier_type OWNER TO cpruser;

--
-- Name: seq_irs_country; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_irs_country
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_irs_country OWNER TO cpruser;

--
-- Name: irs_country; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE irs_country (
    irs_country_key integer DEFAULT nextval('seq_irs_country'::regclass) NOT NULL,
    country_key integer NOT NULL,
    irs_country_code character varying(2) NOT NULL,
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.irs_country OWNER TO cpruser;

--
-- Name: seq_java_exceptions; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_java_exceptions
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_java_exceptions OWNER TO cpruser;

--
-- Name: java_exceptions; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE java_exceptions (
    java_exception_key integer DEFAULT nextval('seq_java_exceptions'::regclass) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    java_exception_enum character varying(50) NOT NULL,
    java_exception_text character varying(100) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.java_exceptions OWNER TO cpruser;

--
-- Name: major_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE major_cs (
    major_code character varying(20) NOT NULL,
    major_name character varying(100),
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT major_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.major_cs OWNER TO cpruser;

--
-- Name: seq_match_results; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_match_results
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_match_results OWNER TO cpruser;

--
-- Name: match_results; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE match_results (
    match_set_key integer DEFAULT nextval('seq_match_results'::regclass) NOT NULL,
    person_id integer NOT NULL,
    score integer NOT NULL
);


ALTER TABLE cpr.match_results OWNER TO cpruser;

--
-- Name: seq_mc_warning_notifications; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_mc_warning_notifications
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_mc_warning_notifications OWNER TO cpruser;

--
-- Name: mc_warning_notifications; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE mc_warning_notifications (
    mc_warning_notification_key integer DEFAULT nextval('seq_mc_warning_notifications'::regclass) NOT NULL,
    message_consumer_key integer NOT NULL,
    event_trigger_key integer NOT NULL,
    entry_timestamp timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone
);


ALTER TABLE cpr.mc_warning_notifications OWNER TO cpruser;

--
-- Name: seq_message_consumer; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_message_consumer
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_message_consumer OWNER TO cpruser;

--
-- Name: message_consumer; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE message_consumer (
    message_consumer_key integer DEFAULT nextval('seq_message_consumer'::regclass) NOT NULL,
    consumer character varying(50) NOT NULL,
    consumer_reg_date timestamp without time zone NOT NULL,
    consumer_email character varying(256),
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    consumer_destination character varying(128),
    destination_type character varying(30),
    maximum_retries integer,
    retry_interval integer,
    maximum_failure integer,
    maximum_destination_size integer,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT message_consumer_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.message_consumer OWNER TO cpruser;

--
-- Name: seq_message_consumer_mapping; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_message_consumer_mapping
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_message_consumer_mapping OWNER TO cpruser;

--
-- Name: message_consumer_mapping; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE message_consumer_mapping (
    msg_con_mapping_key integer DEFAULT nextval('seq_message_consumer_mapping'::regclass) NOT NULL,
    message_consumer_key integer NOT NULL,
    service_key integer NOT NULL,
    web_service_key integer NOT NULL,
    max_days_provisioned integer,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.message_consumer_mapping OWNER TO cpruser;

--
-- Name: seq_message_log; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_message_log
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_message_log OWNER TO cpruser;

--
-- Name: message_log; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE message_log (
    message_log_key integer DEFAULT nextval('seq_message_log'::regclass) NOT NULL,
    web_service_key integer NOT NULL,
    message_consumer_key integer NOT NULL,
    service_key integer NOT NULL,
    message_sent character varying(1000),
    number_of_tries integer NOT NULL,
    success_flag character varying(1) DEFAULT 'N'::character varying,
    request_userid character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT message_log_success_flag_check CHECK (((success_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.message_log OWNER TO cpruser;

--
-- Name: seq_message_log_history; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_message_log_history
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_message_log_history OWNER TO cpruser;

--
-- Name: message_log_history; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE message_log_history (
    message_log_history_key integer DEFAULT nextval('seq_message_log_history'::regclass) NOT NULL,
    message_log_key integer NOT NULL,
    message_sent_timestamp timestamp without time zone NOT NULL,
    message_id character varying(100),
    message_received_timestamp timestamp without time zone,
    message_received character varying(1000),
    error_code character varying(100),
    error_message character varying(1000),
    try_number integer,
    last_update_on timestamp without time zone NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.message_log_history OWNER TO cpruser;

--
-- Name: seq_names; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_names
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_names OWNER TO cpruser;

--
-- Name: names; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE names (
    name_key integer DEFAULT nextval('seq_names'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    document_type_key integer,
    end_date timestamp without time zone,
    first_name character varying(60),
    last_name character varying(60),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    middle_names character varying(60),
    name_match_code character varying(60),
    nickname character varying(40),
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    suffix character varying(30),
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.names OWNER TO cpruser;

--
-- Name: seq_names_staging; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_names_staging
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_names_staging OWNER TO cpruser;

--
-- Name: names_staging; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE names_staging (
    name_staging_key integer DEFAULT nextval('seq_names_staging'::regclass) NOT NULL,
    person_id integer NOT NULL,
    first_name character varying(60),
    middle_names character varying(60),
    last_name character varying(60),
    suffix character varying(30),
    name_match_code character varying(60),
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.names_staging OWNER TO cpruser;

--
-- Name: pay_frequency_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE pay_frequency_cs (
    pay_freq_code character varying(4) NOT NULL,
    pay_freq_desc character varying(40),
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT pay_frequency_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.pay_frequency_cs OWNER TO cpruser;

--
-- Name: seq_person; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person OWNER TO cpruser;

--
-- Name: person; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person (
    person_id integer DEFAULT nextval('seq_person'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.person OWNER TO cpruser;

--
-- Name: seq_person_affiliation; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_affiliation
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_affiliation OWNER TO cpruser;

--
-- Name: person_affiliation; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_affiliation (
    person_affiliation_key integer DEFAULT nextval('seq_person_affiliation'::regclass) NOT NULL,
    affiliation_key integer NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    exception_comments character varying(500),
    exception_flag character varying(1) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    primary_flag character varying(1) NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_affiliation OWNER TO cpruser;

--
-- Name: seq_person_citizenship; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_citizenship
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_citizenship OWNER TO cpruser;

--
-- Name: person_citizenship; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_citizenship (
    person_citizenship_key integer DEFAULT nextval('seq_person_citizenship'::regclass) NOT NULL,
    person_id integer NOT NULL,
    citizenship integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_citizenship OWNER TO cpruser;

--
-- Name: seq_person_gender; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_gender
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_gender OWNER TO cpruser;

--
-- Name: person_gender; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_gender (
    person_gender_key integer DEFAULT nextval('seq_person_gender'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.person_gender OWNER TO cpruser;

--
-- Name: seq_person_iap_data; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_iap_data
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_iap_data OWNER TO cpruser;

--
-- Name: person_iap_data; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_iap_data (
    person_iap_data_key integer DEFAULT nextval('seq_person_iap_data'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_element_doc_type_key integer NOT NULL,
    iap_data_value_key integer NOT NULL,
    iap_document_key integer NOT NULL,
    person_iap_vp_key integer NOT NULL
);


ALTER TABLE cpr.person_iap_data OWNER TO cpruser;

--
-- Name: seq_person_iap_vp; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_iap_vp
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_iap_vp OWNER TO cpruser;

--
-- Name: person_iap_vp; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_iap_vp (
    person_iap_vp_key integer DEFAULT nextval('seq_person_iap_vp'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    group_member_key integer NOT NULL,
    iap_key integer NOT NULL,
    person_id integer NOT NULL,
    registration_authority_key integer NOT NULL,
    userid character varying(30) NOT NULL,
    vp_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_iap_vp OWNER TO cpruser;

--
-- Name: seq_person_id_card; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_id_card
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_id_card OWNER TO cpruser;

--
-- Name: person_id_card; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_id_card (
    person_id_card_key integer DEFAULT nextval('seq_person_id_card'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    id_card_number character varying(30) NOT NULL,
    id_serial_number character varying(30),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_id_card OWNER TO cpruser;

--
-- Name: seq_person_identifier; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_identifier
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_identifier OWNER TO cpruser;

--
-- Name: person_identifier; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_identifier (
    person_identifier_key integer DEFAULT nextval('seq_person_identifier'::regclass) NOT NULL,
    person_id integer NOT NULL,
    type_key integer NOT NULL,
    identifier_value character varying(100) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_identifier OWNER TO cpruser;

--
-- Name: seq_person_linkage; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_linkage
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_linkage OWNER TO cpruser;

--
-- Name: person_linkage; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_linkage (
    person_linkage_key integer DEFAULT nextval('seq_person_linkage'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    linked_person_id integer NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.person_linkage OWNER TO cpruser;

--
-- Name: seq_person_photo; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_photo
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_photo OWNER TO cpruser;

--
-- Name: person_photo; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_photo (
    person_photo_key integer DEFAULT nextval('seq_person_photo'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    date_taken timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    photo bytea NOT NULL
);


ALTER TABLE cpr.person_photo OWNER TO cpruser;

--
-- Name: seq_person_userid_iap; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_person_userid_iap
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_person_userid_iap OWNER TO cpruser;

--
-- Name: person_userid_iap; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE person_userid_iap (
    person_userid_iap_key integer DEFAULT nextval('seq_person_userid_iap'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    iap_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    userid character varying(30) NOT NULL
);


ALTER TABLE cpr.person_userid_iap OWNER TO cpruser;

--
-- Name: seq_phones; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_phones
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_phones OWNER TO cpruser;

--
-- Name: phones; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE phones (
    phone_key integer DEFAULT nextval('seq_phones'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    extension character varying(40),
    group_id integer NOT NULL,
    international_number_flag character varying(1),
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    phone_number character varying(40) NOT NULL,
    primary_flag character varying(1) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.phones OWNER TO cpruser;

--
-- Name: seq_photo_id_issuer; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_photo_id_issuer
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_photo_id_issuer OWNER TO cpruser;

--
-- Name: photo_id_issuer; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE photo_id_issuer (
    photo_id_issuer_key integer DEFAULT nextval('seq_photo_id_issuer'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    photo_id_issuer character varying(50) NOT NULL,
    photo_id_issuer_desc character varying(100) NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.photo_id_issuer OWNER TO cpruser;

--
-- Name: seq_photo_id_issuer_data_type; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_photo_id_issuer_data_type
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_photo_id_issuer_data_type OWNER TO cpruser;

--
-- Name: photo_id_issuer_data_type; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE photo_id_issuer_data_type (
    photo_id_issuer_data_type_key integer DEFAULT nextval('seq_photo_id_issuer_data_type'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    photo_id_issuer_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.photo_id_issuer_data_type OWNER TO cpruser;

--
-- Name: seq_policies; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_policies
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_policies OWNER TO cpruser;

--
-- Name: policies; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE policies (
    policy_key integer DEFAULT nextval('seq_policies'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    policy_name character varying(100) NOT NULL,
    policy_text character varying(4000) NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.policies OWNER TO cpruser;

--
-- Name: seq_psu_directory; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_psu_directory
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_psu_directory OWNER TO cpruser;

--
-- Name: psu_directory; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE psu_directory (
    psu_directory_key integer DEFAULT nextval('seq_psu_directory'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    userid character varying(30)
);


ALTER TABLE cpr.psu_directory OWNER TO cpruser;

--
-- Name: seq_psu_id; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_psu_id
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_psu_id OWNER TO cpruser;

--
-- Name: psu_id; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE psu_id (
    psu_id_key integer DEFAULT nextval('seq_psu_id'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    psu_id character varying(20) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.psu_id OWNER TO cpruser;

--
-- Name: psu_id_exceptions; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE psu_id_exceptions (
    psu_id character varying(20) NOT NULL
);


ALTER TABLE cpr.psu_id_exceptions OWNER TO cpruser;

--
-- Name: seq_ra_affiliation; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_affiliation
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_affiliation OWNER TO cpruser;

--
-- Name: ra_affiliation; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_affiliation (
    ra_affiliation_key integer DEFAULT nextval('seq_ra_affiliation'::regclass) NOT NULL,
    affiliation_key integer NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    registration_authority_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ra_affiliation OWNER TO cpruser;

--
-- Name: seq_ra_application_properties; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_application_properties
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_application_properties OWNER TO cpruser;

--
-- Name: ra_application_properties; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_application_properties (
    ra_application_properties_key integer DEFAULT nextval('seq_ra_application_properties'::regclass) NOT NULL,
    ra_application_key integer NOT NULL,
    ui_application_key integer NOT NULL,
    key_name character varying(200) NOT NULL,
    key_value character varying(200) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ra_application_properties OWNER TO cpruser;

--
-- Name: seq_ra_applications; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_applications
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_applications OWNER TO cpruser;

--
-- Name: ra_applications; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_applications (
    ra_application_key integer DEFAULT nextval('seq_ra_applications'::regclass) NOT NULL,
    ui_application_key integer NOT NULL,
    registration_authority_key integer NOT NULL,
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    allow_ssn_collection_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT ra_applications_allow_ssn_collection_flag_check CHECK (((allow_ssn_collection_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT ra_applications_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ra_applications OWNER TO cpruser;

--
-- Name: seq_ra_comments; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_comments
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_comments OWNER TO cpruser;

--
-- Name: ra_comments; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_comments (
    ra_comment_key integer DEFAULT nextval('seq_ra_comments'::regclass) NOT NULL,
    comments character varying(2000) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone,
    registration_authority_key integer NOT NULL
);


ALTER TABLE cpr.ra_comments OWNER TO cpruser;

--
-- Name: seq_ra_iap_assign; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_iap_assign
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_iap_assign OWNER TO cpruser;

--
-- Name: ra_iap_assign; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_iap_assign (
    ra_iap_assign_key integer DEFAULT nextval('seq_ra_iap_assign'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    iap_key integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    registration_authority_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ra_iap_assign OWNER TO cpruser;

--
-- Name: seq_ra_screen_fields; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_screen_fields
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_screen_fields OWNER TO cpruser;

--
-- Name: ra_screen_fields; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_screen_fields (
    ra_screen_field_key integer DEFAULT nextval('seq_ra_screen_fields'::regclass) NOT NULL,
    ra_screen_key integer NOT NULL,
    ui_screen_name character varying(30) NOT NULL,
    ui_field_name character varying(30) NOT NULL,
    required_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    display_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT ra_screen_fields_display_flag_check CHECK (((display_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT ra_screen_fields_required_flag_check CHECK (((required_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ra_screen_fields OWNER TO cpruser;

--
-- Name: seq_ra_screens; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_screens
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_screens OWNER TO cpruser;

--
-- Name: ra_screens; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_screens (
    ra_screen_key integer DEFAULT nextval('seq_ra_screens'::regclass) NOT NULL,
    ra_application_key integer NOT NULL,
    ui_screen_name character varying(30) NOT NULL,
    ra_screen_order integer NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ra_screens OWNER TO cpruser;

--
-- Name: seq_ra_server_principals; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_server_principals
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_server_principals OWNER TO cpruser;

--
-- Name: ra_server_principals; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_server_principals (
    ra_server_principal_key integer DEFAULT nextval('seq_ra_server_principals'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    ra_server_principal character varying(128) NOT NULL,
    registration_authority_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ra_server_principals OWNER TO cpruser;

--
-- Name: seq_ra_ui_application; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ra_ui_application
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ra_ui_application OWNER TO cpruser;

--
-- Name: ra_ui_application; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ra_ui_application (
    ra_ui_application_key integer DEFAULT nextval('seq_ra_ui_application'::regclass) NOT NULL,
    application_desc character varying(1000) NOT NULL,
    application_name character varying(200) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    registration_authority_key integer NOT NULL,
    suspend_flag character varying(1) NOT NULL
);


ALTER TABLE cpr.ra_ui_application OWNER TO cpruser;

--
-- Name: seq_registration_authority; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_registration_authority
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_registration_authority OWNER TO cpruser;

--
-- Name: registration_authority; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE registration_authority (
    registration_authority_key integer DEFAULT nextval('seq_registration_authority'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    ra_contact_key integer NOT NULL,
    registration_authority character varying(60) NOT NULL,
    registration_authority_desc character varying(100) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    suspend_flag character varying(1) NOT NULL,
    assign_psuid_flag character varying(1) NOT NULL,
    assign_userid_flag character varying(1) NOT NULL,
    collect_ssn_flag character varying(1) NOT NULL
);


ALTER TABLE cpr.registration_authority OWNER TO cpruser;

--
-- Name: seq_security_question_answers; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_security_question_answers
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_security_question_answers OWNER TO cpruser;

--
-- Name: security_question_answers; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE security_question_answers (
    sec_quest_answer_key integer DEFAULT nextval('seq_security_question_answers'::regclass) NOT NULL,
    person_id integer NOT NULL,
    userid character varying(30) NOT NULL,
    sec_quest_key integer NOT NULL,
    sec_quest_group_key integer NOT NULL,
    answer character varying(100) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.security_question_answers OWNER TO cpruser;

--
-- Name: seq_security_questions; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_security_questions
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_security_questions OWNER TO cpruser;

--
-- Name: security_questions; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE security_questions (
    sec_quest_key integer DEFAULT nextval('seq_security_questions'::regclass) NOT NULL,
    sec_quest_group_key integer NOT NULL,
    question character varying(100) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.security_questions OWNER TO cpruser;

--
-- Name: semesters; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE semesters (
    semester_code character varying(8) NOT NULL,
    semester_desc character varying(20) NOT NULL,
    sem_start_date timestamp without time zone NOT NULL,
    sem_end_date timestamp without time zone NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.semesters OWNER TO cpruser;

--
-- Name: seq_allowed_char_part; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_allowed_char_part
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_allowed_char_part OWNER TO cpruser;

--
-- Name: seq_allowed_num_part; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_allowed_num_part
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_allowed_num_part OWNER TO cpruser;

--
-- Name: seq_application_properties; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_application_properties
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_application_properties OWNER TO cpruser;

--
-- Name: seq_bad_prefixes; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_bad_prefixes
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_bad_prefixes OWNER TO cpruser;

--
-- Name: seq_country_map; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_country_map
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_country_map OWNER TO cpruser;

--
-- Name: seq_psu_id_exceptions; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_psu_id_exceptions
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_psu_id_exceptions OWNER TO cpruser;

--
-- Name: seq_server_principal_ip; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_server_principal_ip
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_server_principal_ip OWNER TO cpruser;

--
-- Name: seq_service_log; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_service_log
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_service_log OWNER TO cpruser;

--
-- Name: seq_services; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_services
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_services OWNER TO cpruser;

--
-- Name: seq_student; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_student
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_student OWNER TO cpruser;

--
-- Name: seq_student_academic_college; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_student_academic_college
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_student_academic_college OWNER TO cpruser;

--
-- Name: seq_student_academic_dept; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_student_academic_dept
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_student_academic_dept OWNER TO cpruser;

--
-- Name: seq_student_major; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_student_major
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_student_major OWNER TO cpruser;

--
-- Name: seq_trans_cidr; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_trans_cidr
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_trans_cidr OWNER TO cpruser;

--
-- Name: seq_trans_empl; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_trans_empl
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_trans_empl OWNER TO cpruser;

--
-- Name: seq_trans_hershey; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_trans_hershey
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_trans_hershey OWNER TO cpruser;

--
-- Name: seq_trans_oasis; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_trans_oasis
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_trans_oasis OWNER TO cpruser;

--
-- Name: seq_trans_stubio; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_trans_stubio
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_trans_stubio OWNER TO cpruser;

--
-- Name: seq_ui_applications; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ui_applications
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ui_applications OWNER TO cpruser;

--
-- Name: seq_ui_field_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ui_field_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ui_field_types OWNER TO cpruser;

--
-- Name: seq_ui_log; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ui_log
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ui_log OWNER TO cpruser;

--
-- Name: seq_ui_screen_fields; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ui_screen_fields
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ui_screen_fields OWNER TO cpruser;

--
-- Name: seq_ui_screens; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_ui_screens
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_ui_screens OWNER TO cpruser;

--
-- Name: seq_user_comments; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_user_comments
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_user_comments OWNER TO cpruser;

--
-- Name: seq_user_service_status; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_user_service_status
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_user_service_status OWNER TO cpruser;

--
-- Name: seq_userid; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_userid
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_userid OWNER TO cpruser;

--
-- Name: seq_userid_policy_status; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_userid_policy_status
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_userid_policy_status OWNER TO cpruser;

--
-- Name: seq_userid_pool; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_userid_pool
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_userid_pool OWNER TO cpruser;

--
-- Name: seq_usps_state_types; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_usps_state_types
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_usps_state_types OWNER TO cpruser;

--
-- Name: seq_usps_states; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_usps_states
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_usps_states OWNER TO cpruser;

--
-- Name: seq_web_service; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_web_service
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_web_service OWNER TO cpruser;

--
-- Name: seq_web_service_access; Type: SEQUENCE; Schema: cpr; Owner: cpruser
--

CREATE SEQUENCE seq_web_service_access
    START WITH 100500
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cpr.seq_web_service_access OWNER TO cpruser;

--
-- Name: server_principal_ip; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE server_principal_ip (
    server_principal_ip_key integer DEFAULT nextval('seq_server_principal_ip'::regclass) NOT NULL,
    ra_server_principal_key integer NOT NULL,
    ip_address character varying(50) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.server_principal_ip OWNER TO cpruser;

--
-- Name: service_log; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE service_log (
    service_log_key integer DEFAULT nextval('seq_service_log'::regclass) NOT NULL,
    ip_address character varying(50),
    request_duration integer,
    request_end timestamp without time zone,
    request_start timestamp without time zone NOT NULL,
    request_string character varying(2000),
    request_userid character varying(30),
    result_string character varying(1000),
    web_service_key integer NOT NULL
);


ALTER TABLE cpr.service_log OWNER TO cpruser;

--
-- Name: services; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE services (
    service_key integer DEFAULT nextval('seq_services'::regclass) NOT NULL,
    active_flag character varying(1) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    days_service_active integer,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    service_name character varying(100) NOT NULL
);


ALTER TABLE cpr.services OWNER TO cpruser;

--
-- Name: student; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student (
    student_key integer DEFAULT nextval('seq_student'::regclass) NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    campus_code_key integer,
    registration_status character varying(6),
    academic_level character varying(2),
    year_term character varying(2),
    graduating_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    sem_loa_start character varying(8),
    sem_loa_end character varying(8),
    dorm_location character varying(4),
    class_load character varying(1),
    student_aid_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT student_graduating_flag_check CHECK (((graduating_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT student_student_aid_flag_check CHECK (((student_aid_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.student OWNER TO cpruser;

--
-- Name: student_academic_college; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_academic_college (
    student_academic_college_key integer DEFAULT nextval('seq_student_academic_college'::regclass) NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    college_code character varying(2) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_academic_college OWNER TO cpruser;

--
-- Name: student_academic_college_hist; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_academic_college_hist (
    student_academic_college_key integer NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    college_code character varying(2) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_academic_college_hist OWNER TO cpruser;

--
-- Name: student_academic_department; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_academic_department (
    student_academic_dept_key integer DEFAULT nextval('seq_student_academic_dept'::regclass) NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    department_code character varying(5) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_academic_department OWNER TO cpruser;

--
-- Name: student_academic_dept_hist; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_academic_dept_hist (
    student_academic_dept_key integer NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    department_code character varying(5) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_academic_dept_hist OWNER TO cpruser;

--
-- Name: student_hist; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_hist (
    student_key integer NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    campus_code_key integer,
    registration_status character varying(6),
    academic_level character varying(2),
    year_term character varying(2),
    graduating_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    sem_loa_start character varying(8),
    sem_loa_end character varying(8),
    dorm_location character varying(4),
    class_load character varying(1),
    student_aid_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_hist OWNER TO cpruser;

--
-- Name: student_major; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_major (
    student_major_key integer DEFAULT nextval('seq_student_major'::regclass) NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    major_code character varying(20) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_major OWNER TO cpruser;

--
-- Name: student_major_hist; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_major_hist (
    student_major_key integer NOT NULL,
    person_id integer NOT NULL,
    semester_code character varying(8) NOT NULL,
    major_code character varying(20) NOT NULL,
    rank integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    import_from character varying(30),
    import_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.student_major_hist OWNER TO cpruser;

--
-- Name: student_status_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE student_status_cs (
    status_code character varying(6) NOT NULL,
    status_desc character varying(128) NOT NULL,
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT student_status_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.student_status_cs OWNER TO cpruser;

--
-- Name: trans_cidr; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE trans_cidr (
    trans_cidr_key integer DEFAULT nextval('seq_trans_cidr'::regclass) NOT NULL,
    psu_id character varying(9) NOT NULL,
    status character varying(4) NOT NULL,
    affiliate character varying(8),
    street1 character varying(40),
    street2 character varying(40),
    city character varying(35),
    state character varying(2),
    zip character varying(9),
    country character varying(3),
    dob character varying(8),
    gender character varying(1),
    first_name character varying(25),
    middle_name character varying(25),
    last_name character varying(30),
    last_update character varying(8)
);


ALTER TABLE cpr.trans_cidr OWNER TO cpruser;

--
-- Name: trans_empl; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE trans_empl (
    trans_empl_key integer DEFAULT nextval('seq_trans_empl'::regclass) NOT NULL,
    psu_id character varying(100),
    date_empl_hired character varying(100),
    code_empl_sex character varying(100),
    date_empl_birth character varying(100),
    numb_empl_phone_home character varying(100),
    addr_empl_room_integer character varying(100),
    addr_empl_building_name character varying(100),
    addr_empl_campus_name character varying(100),
    addr_empl_office_street character varying(100),
    addr_empl_office_city character varying(100),
    addr_empl_offc_state character varying(100),
    addr_empl_offc_zip character varying(100),
    numb_empl_phone_offc character varying(100),
    name_empl_first_legal character varying(100),
    name_empl_mid_legal character varying(100),
    name_empl_last_legal character varying(100),
    name_empl_sfx_legal character varying(100),
    name_empl_pm_preferred_name character varying(100),
    filler character varying(100),
    addr_empl_street_home character varying(100),
    addr_empl_city_home character varying(100),
    addr_empl_state_home character varying(100),
    addr_empl_zip_home_prime character varying(100),
    addr_empl_zip_home_second character varying(100),
    code_empl_country_home character varying(100),
    code_empl_fnat_visa_type character varying(100),
    code_empl_class character varying(100),
    code_empl_status character varying(100),
    code_budg_numb_home character varying(100),
    code_budg_location_home character varying(100),
    name_jobd_title_short character varying(100),
    name_jobd_title_long character varying(100),
    code_empl_rank character varying(100),
    code_appt character varying(100),
    code_empl_appt_special character varying(100),
    date_empl_termn character varying(100),
    code_appt_type character varying(100),
    code_empl_bnfts_rate character varying(100),
    date_empl_paid character varying(100),
    code_empl_title_class character varying(100),
    code_empl_title2_class character varying(100),
    code_empl_layoff character varying(100),
    addr_campus_addr_line1 character varying(100),
    code_empl_direct_phone character varying(100),
    addr_campus_addr_line2 character varying(100),
    numb_pers_access_acct_id character varying(100),
    addr_campus_addr_line3 character varying(100),
    name_empl_department character varying(100),
    code_admin_area character varying(100),
    name_empl_admin_area character varying(100),
    code_mnemonic character varying(100),
    student_status character varying(1),
    code_campus character varying(100),
    addr_empl_st2_home character varying(100),
    alt_job_title character varying(128),
    job_family character varying(100),
    code_empl_pay_calc character varying(100)
);


ALTER TABLE cpr.trans_empl OWNER TO cpruser;

--
-- Name: trans_hershey; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE trans_hershey (
    trans_hershey_key integer DEFAULT nextval('seq_trans_hershey'::regclass) NOT NULL,
    psu_id character varying(16),
    last_name character varying(100),
    first_name character varying(100),
    middle_names character varying(100),
    suffix character varying(100),
    preferred_name character varying(240),
    dept_name character varying(100),
    mail_code character varying(100),
    campus_name character varying(100),
    work_address1 character varying(100),
    work_address2 character varying(100),
    work_city character varying(100),
    work_state character varying(100),
    work_zipcode character varying(100),
    work_phone character varying(100),
    work_phone_ext character varying(10),
    title character varying(100),
    date_of_birth character varying(100),
    appt_type_code character varying(100),
    home_address1 character varying(100),
    home_address2 character varying(100),
    home_city character varying(100),
    home_state character varying(2),
    home_zipcode character varying(100),
    home_country character varying(3),
    gender character varying(1),
    hr_hire_date character varying(8),
    hr_term_date character varying(8)
);


ALTER TABLE cpr.trans_hershey OWNER TO cpruser;

--
-- Name: trans_oasis; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE trans_oasis (
    trans_oasis_key integer DEFAULT nextval('seq_trans_oasis'::regclass) NOT NULL,
    psu_id character varying(9),
    userid character varying(30),
    status character varying(1)
);


ALTER TABLE cpr.trans_oasis OWNER TO cpruser;

--
-- Name: trans_stubio; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE trans_stubio (
    trans_stubio_key integer DEFAULT nextval('seq_trans_stubio'::regclass) NOT NULL,
    psu_id character varying(100) NOT NULL,
    psu_id_prev character varying(100),
    type character varying(1000),
    name_pers_last character varying(1000),
    name_pers_first character varying(1000),
    name_pers_mid character varying(1000),
    name_pers_sfx character varying(1000),
    code_stud_coll1 character varying(1000),
    code_stud_coll2 character varying(1000),
    code_stud_coll3 character varying(1000),
    code_stud_coll4 character varying(1000),
    code_stud_acdt1 character varying(1000),
    code_stud_acdt2 character varying(1000),
    code_stud_acdt3 character varying(1000),
    code_stud_acdt4 character varying(1000),
    code_camp character varying(1000),
    code_pers_sex character varying(1000),
    code_stud_majr1 character varying(1000),
    code_stud_majr2 character varying(1000),
    code_stud_majr3 character varying(1000),
    code_stud_majr4 character varying(1000),
    code_stud_lvl character varying(1000),
    code_stud_clsfctn_yrtm character varying(1000),
    code_stud_stat character varying(1000),
    numb_stud_access_acct_id character varying(1000),
    date_pers_birth character varying(1000),
    indc_stud_graduation character varying(1000),
    sem character varying(1000),
    date_confid_end character varying(1000),
    date_confid_beg character varying(1000),
    appl_stat character varying(1000),
    appl_type character varying(1000),
    date_counsel character varying(1000),
    phone_local character varying(1000),
    req_sem character varying(1000),
    addr_locl_st1 character varying(1000),
    addr_locl_st2 character varying(1000),
    addr_locl_city character varying(1000),
    addr_locl_state character varying(1000),
    addr_locl_zip character varying(1000),
    addr_locl_ctry character varying(1000),
    phone_home character varying(1000),
    addr_home_st1 character varying(1000),
    addr_home_st2 character varying(1000),
    addr_home_city character varying(1000),
    addr_home_state character varying(1000),
    addr_home_zip character varying(1000),
    addr_home_ctry character varying(1000),
    code_scholar character varying(1000),
    date_scholar character varying(1000),
    loa_start character varying(1000),
    loa_return_st1 character varying(1000),
    code_pers_cznshp_st2 character varying(1000),
    code_pers_residence character varying(1000),
    stud_reg character varying(1000),
    stud_hold character varying(1000),
    code_stud_admit_univ_yrterm character varying(1000),
    addr_locl_st3 character varying(1000),
    addr_home_st3 character varying(1000),
    code_hotl character varying(10),
    fps_id character varying(8),
    class_load character varying(1),
    preferred_name character varying(100),
    cell_phone character varying(100),
    cell_carrier character varying(100),
    non_psu_email_addr character varying(100),
    student_aid character varying(100)
);


ALTER TABLE cpr.trans_stubio OWNER TO cpruser;

--
-- Name: ui_applications; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ui_applications (
    ui_application_key integer DEFAULT nextval('seq_ui_applications'::regclass) NOT NULL,
    application_name character varying(200) NOT NULL,
    application_desc character varying(1000) NOT NULL,
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT ui_applications_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ui_applications OWNER TO cpruser;

--
-- Name: ui_field_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ui_field_types (
    ui_field_type character varying(25) DEFAULT ' '::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.ui_field_types OWNER TO cpruser;

--
-- Name: ui_log; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ui_log (
    ui_log_key integer DEFAULT nextval('seq_ui_log'::regclass) NOT NULL,
    ui_application_key integer NOT NULL,
    request_datetime timestamp without time zone NOT NULL,
    request_duration integer,
    request_string character varying(2000),
    result_string character varying(1000),
    ip_address character varying(50),
    request_userid character varying(30),
    browser_type character varying(200),
    error_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    CONSTRAINT ui_log_error_flag_check CHECK (((error_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ui_log OWNER TO cpruser;

--
-- Name: ui_screen_fields; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ui_screen_fields (
    ui_screen_name character varying(30) DEFAULT ' '::character varying NOT NULL,
    ui_field_name character varying(30) DEFAULT ' '::character varying NOT NULL,
    ui_field_type character varying(25) NOT NULL,
    max_length integer,
    field_width integer,
    field_height integer,
    required_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    display_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    active_flag character varying(1) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT ui_screen_fields_display_flag_check CHECK (((display_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[]))),
    CONSTRAINT ui_screen_fields_required_flag_check CHECK (((required_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ui_screen_fields OWNER TO cpruser;

--
-- Name: ui_screens; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE ui_screens (
    ui_screen_name character varying(30) DEFAULT ' '::character varying NOT NULL,
    ui_application_key integer NOT NULL,
    required_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    active_flag character varying(1) NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT ui_screens_required_flag_check CHECK (((required_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.ui_screens OWNER TO cpruser;

--
-- Name: user_comments; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE user_comments (
    user_comment_key integer DEFAULT nextval('seq_user_comments'::regclass) NOT NULL,
    comments character varying(2000) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    data_type_key integer NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    person_id integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    userid character varying(30) NOT NULL
);


ALTER TABLE cpr.user_comments OWNER TO cpruser;

--
-- Name: user_service_status; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE user_service_status (
    user_service_status_key integer DEFAULT nextval('seq_user_service_status'::regclass) NOT NULL,
    person_id integer NOT NULL,
    userid character varying(30) NOT NULL,
    service_key integer NOT NULL,
    message_consumer_key integer NOT NULL,
    expiration_date timestamp without time zone,
    provision_date timestamp without time zone NOT NULL,
    deprovision_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL
);


ALTER TABLE cpr.user_service_status OWNER TO cpruser;

--
-- Name: userid; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE userid (
    userid character varying(30) NOT NULL,
    person_id integer NOT NULL,
    char_part character varying(30),
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    display_name_flag character varying(1) NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    num_part integer,
    primary_flag character varying(1) NOT NULL,
    psu_id_letter character varying(1),
    start_date timestamp without time zone NOT NULL,
    scoped_uuid character varying(100),
    import_from character varying(30),
    import_date timestamp without time zone
);


ALTER TABLE cpr.userid OWNER TO cpruser;

--
-- Name: userid_policy_status; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE userid_policy_status (
    userid_policy_status_key integer DEFAULT nextval('seq_userid_policy_status'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    date_accepted timestamp without time zone,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone,
    person_id integer NOT NULL,
    policy_key integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    userid character varying(30) NOT NULL
);


ALTER TABLE cpr.userid_policy_status OWNER TO cpruser;

--
-- Name: userid_pool; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE userid_pool (
    userid_pool_key integer DEFAULT nextval('seq_userid_pool'::regclass) NOT NULL,
    char_part character varying(30) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    num_part integer NOT NULL,
    userid character varying(30) NOT NULL
);


ALTER TABLE cpr.userid_pool OWNER TO cpruser;

--
-- Name: usps_state_types; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE usps_state_types (
    usps_state_type_key integer DEFAULT nextval('seq_usps_state_types'::regclass) NOT NULL,
    usps_state_type character varying(50) NOT NULL
);


ALTER TABLE cpr.usps_state_types OWNER TO cpruser;

--
-- Name: usps_states; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE usps_states (
    state_code character varying(2) NOT NULL,
    state_name character varying(50) NOT NULL,
    usps_state_type_key integer NOT NULL
);


ALTER TABLE cpr.usps_states OWNER TO cpruser;

--
-- Name: v_consumer_notification_dest; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_consumer_notification_dest AS
    SELECT mec.message_consumer_key, mec.consumer_destination, cno.change_notifications_key, cnt.change_notification_types_key, cnt.notification_type FROM ((message_consumer mec JOIN change_notifications cno ON (((((mec.message_consumer_key = cno.message_consumer_key) AND (mec.end_date IS NULL)) AND ((mec.suspend_flag)::text = 'N'::text)) AND (cno.end_date IS NULL)))) JOIN change_notification_types cnt ON ((((cno.change_notification_types_key = cnt.change_notification_types_key) AND ((cnt.active_flag)::text = 'Y'::text)) AND (cno.end_date IS NULL)))) ORDER BY cnt.notification_type;


ALTER TABLE cpr.v_consumer_notification_dest OWNER TO cpruser;

--
-- Name: v_database_log; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_database_log AS
    SELECT substr(reverse((database_log.output_string)::text), 2, 1) AS number_tries, database_log.entry_timestamp, database_log.request_duration FROM database_log WHERE ((database_log.entry_type)::text = 'INFO'::text);


ALTER TABLE cpr.v_database_log OWNER TO cpruser;

--
-- Name: v_ext_affiliation_mapping; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_ext_affiliation_mapping AS
    SELECT affiliations.affiliation_key, affiliations.affiliation, affiliations.enum_string AS aff_enum_string, affiliations.active_flag AS aff_active_flag, ext_affiliation_types.ext_affiliation_type_key, ext_affiliation_types.ext_affiliation_type, ext_affiliation_types.active_flag AS extafftype_active_flag, ext_affiliation.ext_affiliation_key, ext_affiliation.ext_affiliation, ext_affiliation.active_flag AS extaff_active_flag FROM (((affiliations LEFT JOIN ext_affiliation_mapping ON ((affiliations.affiliation_key = ext_affiliation_mapping.affiliation_key))) LEFT JOIN ext_affiliation ON ((ext_affiliation_mapping.ext_affiliation_key = ext_affiliation.ext_affiliation_key))) LEFT JOIN ext_affiliation_types ON ((ext_affiliation.ext_affiliation_type_key = ext_affiliation_types.ext_affiliation_type_key)));


ALTER TABLE cpr.v_ext_affiliation_mapping OWNER TO cpruser;

--
-- Name: v_external_iap_federation; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_external_iap_federation AS
    SELECT person_userid_iap.person_id, person_userid_iap.userid, external_iap.external_iap, federation.federation FROM ((((federation JOIN external_iap USING (federation_key)) JOIN iap_ext_mapping USING (external_iap_key)) JOIN iap USING (iap_key)) JOIN person_userid_iap USING (iap_key)) WHERE (((((person_userid_iap.end_date IS NULL) AND (iap_ext_mapping.end_date IS NULL)) AND ((iap.active_flag)::text = 'Y'::text)) AND ((external_iap.active_flag)::text = 'Y'::text)) AND ((federation.active_flag)::text = 'Y'::text));


ALTER TABLE cpr.v_external_iap_federation OWNER TO cpruser;

--
-- Name: v_group_data_type_access; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_group_data_type_access AS
    SELECT cpr_access_groups.cpr_access_groups_key, cpr_access_groups.access_group, cpr_access_groups.suspend_flag AS cpraccgrp_susped_flag, group_data_type_access.group_data_type_access_key, data_types.data_type_key, group_data_type_access.read_flag, group_data_type_access.write_flag, group_data_type_access.archive_flag, data_types.parent_data_type_key, data_types.data_type, data_types.enum_string AS datatype_enum_string, data_types.can_assign_flag AS datatype_can_assign_flag, data_types.active_flag AS datatype_active_flag FROM ((cpr_access_groups JOIN group_data_type_access ON ((cpr_access_groups.cpr_access_groups_key = group_data_type_access.cpr_access_groups_key))) JOIN data_types ON ((group_data_type_access.data_type_key = data_types.data_type_key)));


ALTER TABLE cpr.v_group_data_type_access OWNER TO cpruser;

--
-- Name: v_internal_affiliations; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_internal_affiliations AS
    SELECT person_affiliation.person_id, person_affiliation.primary_flag, person_affiliation.end_date AS peraff_end_date, affiliations.affiliation_key, affiliations.affiliation, affiliations.enum_string, affiliations.active_flag AS aff_active_flag, affiliations.can_assign_flag FROM (person_affiliation JOIN affiliations ON ((person_affiliation.affiliation_key = affiliations.affiliation_key)));


ALTER TABLE cpr.v_internal_affiliations OWNER TO cpruser;

--
-- Name: v_person_affiliation; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_person_affiliation AS
    SELECT person_affiliation.person_affiliation_key, person_affiliation.person_id, person_affiliation.affiliation_key, person_affiliation.primary_flag, person_affiliation.end_date AS peraff_end_date, affiliations.parent_affiliation_key, affiliations.affiliation, affiliations.enum_string AS aff_enum_string FROM (person_affiliation JOIN affiliations ON ((person_affiliation.affiliation_key = affiliations.affiliation_key)));


ALTER TABLE cpr.v_person_affiliation OWNER TO cpruser;

--
-- Name: v_person_id_card_print_log; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_person_id_card_print_log AS
    SELECT person_id_card.person_id_card_key, person_id_card.person_id, person_id_card.id_card_number, id_card_print_log.id_card_print_log_key, id_card_print_log.work_station_ip_address, id_card_print_log.work_station_name, id_card_print_log.printed_by, id_card_print_log.printed_on FROM (person_id_card JOIN id_card_print_log ON ((person_id_card.person_id_card_key = id_card_print_log.person_id_card_key)));


ALTER TABLE cpr.v_person_id_card_print_log OWNER TO cpruser;

--
-- Name: web_service; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE web_service (
    web_service_key integer DEFAULT nextval('seq_web_service'::regclass) NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    start_date timestamp without time zone NOT NULL,
    web_service character varying(30) NOT NULL,
    web_service_desc character varying(150) NOT NULL
);


ALTER TABLE cpr.web_service OWNER TO cpruser;

--
-- Name: web_service_access; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE web_service_access (
    web_service_access_key integer DEFAULT nextval('seq_web_service_access'::regclass) NOT NULL,
    cpr_access_groups_key integer NOT NULL,
    web_service_key integer NOT NULL,
    suspend_flag character varying(1) DEFAULT 'Y'::character varying NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT web_service_access_suspend_flag_check CHECK (((suspend_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.web_service_access OWNER TO cpruser;

--
-- Name: v_ra_group_web_service; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_ra_group_web_service AS
    SELECT group_members.group_member_key, cpr_access_groups.cpr_access_groups_key, ra_server_principals.registration_authority_key, ra_server_principals.ra_server_principal_key, group_members.userid, ra.suspend_flag AS ra_suspend_flag, group_members.suspend_flag AS grpmbrs_suspend_flag, cpr_access_groups.suspend_flag AS cpraccgprs_suspend_flag, web_service_access.suspend_flag AS websrvacc_suspend_flag, web_service.web_service FROM (((((registration_authority ra JOIN ra_server_principals ON ((ra.registration_authority_key = ra_server_principals.registration_authority_key))) JOIN cpr_access_groups ON ((ra_server_principals.ra_server_principal_key = cpr_access_groups.ra_server_principal_key))) JOIN group_members ON ((cpr_access_groups.cpr_access_groups_key = group_members.cpr_access_groups_key))) JOIN web_service_access ON ((cpr_access_groups.cpr_access_groups_key = web_service_access.cpr_access_groups_key))) JOIN web_service ON ((web_service_access.web_service_key = web_service.web_service_key))) WHERE ((((((group_members.end_date IS NULL) AND (cpr_access_groups.end_date IS NULL)) AND (ra_server_principals.end_date IS NULL)) AND (web_service_access.end_date IS NULL)) AND (web_service.end_date IS NULL)) AND (ra.end_date IS NULL));


ALTER TABLE cpr.v_ra_group_web_service OWNER TO cpruser;

--
-- Name: v_sp_notification; Type: VIEW; Schema: cpr; Owner: cpruser
--

CREATE VIEW v_sp_notification AS
    SELECT message_consumer.message_consumer_key, message_consumer.consumer, message_consumer.consumer_destination, message_consumer.destination_type, web_service.web_service, web_service.web_service_key, services.service_name, services.service_key FROM (((message_consumer JOIN message_consumer_mapping ON (((((message_consumer.message_consumer_key = message_consumer_mapping.message_consumer_key) AND (message_consumer.end_date IS NULL)) AND ((message_consumer.suspend_flag)::text = 'N'::text)) AND (message_consumer_mapping.end_date IS NULL)))) JOIN web_service ON (((message_consumer_mapping.web_service_key = web_service.web_service_key) AND (web_service.end_date IS NULL)))) JOIN services ON (((message_consumer_mapping.service_key = services.service_key) AND ((services.active_flag)::text = 'Y'::text))));


ALTER TABLE cpr.v_sp_notification OWNER TO cpruser;

--
-- Name: visa_cs; Type: TABLE; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE TABLE visa_cs (
    visa_code character varying(6) NOT NULL,
    visa_desc character varying(40),
    active_flag character varying(1) DEFAULT 'N'::character varying NOT NULL,
    last_update_by character varying(30) NOT NULL,
    last_update_on timestamp without time zone NOT NULL,
    created_by character varying(30) NOT NULL,
    created_on timestamp without time zone NOT NULL,
    CONSTRAINT visa_cs_active_flag_check CHECK (((active_flag)::text = ANY ((ARRAY['N'::character varying, 'Y'::character varying])::text[])))
);


ALTER TABLE cpr.visa_cs OWNER TO cpruser;

--
-- Name: academic_college_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY academic_college_cs
    ADD CONSTRAINT academic_college_cs_pkey PRIMARY KEY (college_code);


--
-- Name: academic_department_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY academic_department_cs
    ADD CONSTRAINT academic_department_cs_pkey PRIMARY KEY (department_code);


--
-- Name: address_staging_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY address_staging
    ADD CONSTRAINT address_staging_pkey PRIMARY KEY (address_staging_key);


--
-- Name: addresses_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY addresses
    ADD CONSTRAINT addresses_pkey PRIMARY KEY (address_key);


--
-- Name: aff_transition_rules_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY aff_transition_rules
    ADD CONSTRAINT aff_transition_rules_pkey PRIMARY KEY (aff_transition_rule_key);


--
-- Name: affiliations_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY affiliations
    ADD CONSTRAINT affiliations_pkey PRIMARY KEY (affiliation_key);


--
-- Name: allowed_char_part_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY allowed_char_part
    ADD CONSTRAINT allowed_char_part_pkey PRIMARY KEY (char_part);


--
-- Name: allowed_num_part_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY allowed_num_part
    ADD CONSTRAINT allowed_num_part_pkey PRIMARY KEY (num_part);


--
-- Name: answer_group_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY answer_group
    ADD CONSTRAINT answer_group_pkey PRIMARY KEY (answer_group_key);


--
-- Name: application_properties_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY application_properties
    ADD CONSTRAINT application_properties_pkey PRIMARY KEY (ui_application_key, key_name);


--
-- Name: appointment_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY appointment_cs
    ADD CONSTRAINT appointment_cs_pkey PRIMARY KEY (appt_code);


--
-- Name: bad_prefixes_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY bad_prefixes
    ADD CONSTRAINT bad_prefixes_pkey PRIMARY KEY (char_part);


--
-- Name: cag_spkey_group_uk; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY cpr_access_groups
    ADD CONSTRAINT cag_spkey_group_uk UNIQUE (ra_server_principal_key, access_group);


--
-- Name: campus_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY campus_cs
    ADD CONSTRAINT campus_cs_pkey PRIMARY KEY (campus_code_key);


--
-- Name: change_notification_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY change_notification_types
    ADD CONSTRAINT change_notification_types_pkey PRIMARY KEY (change_notification_types_key);


--
-- Name: change_notifications_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY change_notifications
    ADD CONSTRAINT change_notifications_pkey PRIMARY KEY (change_notifications_key);


--
-- Name: citizenship_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY citizenship_cs
    ADD CONSTRAINT citizenship_cs_pkey PRIMARY KEY (citizenship);


--
-- Name: cno_consumer_chngnottype_uk; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY change_notifications
    ADD CONSTRAINT cno_consumer_chngnottype_uk UNIQUE (message_consumer_key, change_notification_types_key);


--
-- Name: confidentiality_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY confidentiality
    ADD CONSTRAINT confidentiality_pkey PRIMARY KEY (confidentiality_key);


--
-- Name: country_map_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY country_map
    ADD CONSTRAINT country_map_pkey PRIMARY KEY (country_key);


--
-- Name: country_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY country
    ADD CONSTRAINT country_pkey PRIMARY KEY (country_key);


--
-- Name: cpr_access_groups_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY cpr_access_groups
    ADD CONSTRAINT cpr_access_groups_pkey PRIMARY KEY (cpr_access_groups_key);


--
-- Name: cpr_component_status_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY cpr_component_status
    ADD CONSTRAINT cpr_component_status_pkey PRIMARY KEY (cpr_component_status_key);


--
-- Name: credential_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY credential
    ADD CONSTRAINT credential_pkey PRIMARY KEY (credential_key);


--
-- Name: data_element_doc_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY data_element_doc_types
    ADD CONSTRAINT data_element_doc_types_pkey PRIMARY KEY (data_element_doc_type_key);


--
-- Name: data_element_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY data_element_types
    ADD CONSTRAINT data_element_types_pkey PRIMARY KEY (data_element_type_key);


--
-- Name: data_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY data_types
    ADD CONSTRAINT data_types_pkey PRIMARY KEY (data_type_key);


--
-- Name: database_log_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY database_log
    ADD CONSTRAINT database_log_pkey PRIMARY KEY (database_log_key);


--
-- Name: date_of_birth_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY date_of_birth
    ADD CONSTRAINT date_of_birth_pkey PRIMARY KEY (date_of_birth_key);


--
-- Name: email_address_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY email_address
    ADD CONSTRAINT email_address_pkey PRIMARY KEY (email_address_key);


--
-- Name: email_notification_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY email_notification
    ADD CONSTRAINT email_notification_pkey PRIMARY KEY (mail_notification_key);


--
-- Name: employee_class_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY employee_class_cs
    ADD CONSTRAINT employee_class_cs_pkey PRIMARY KEY (class_code);


--
-- Name: employee_hist_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY employee_hist
    ADD CONSTRAINT employee_hist_pkey PRIMARY KEY (employee_key, start_date);


--
-- Name: employee_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY employee
    ADD CONSTRAINT employee_pkey PRIMARY KEY (employee_key);


--
-- Name: employee_status_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY employee_status_cs
    ADD CONSTRAINT employee_status_cs_pkey PRIMARY KEY (status_code);


--
-- Name: event_triggers_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY event_triggers
    ADD CONSTRAINT event_triggers_pkey PRIMARY KEY (event_trigger_key);


--
-- Name: ext_affiliation_mapping_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ext_affiliation_mapping
    ADD CONSTRAINT ext_affiliation_mapping_pkey PRIMARY KEY (ext_affiliation_mapping_key);


--
-- Name: ext_affiliation_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ext_affiliation
    ADD CONSTRAINT ext_affiliation_pkey PRIMARY KEY (ext_affiliation_key);


--
-- Name: ext_affiliation_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ext_affiliation_types
    ADD CONSTRAINT ext_affiliation_types_pkey PRIMARY KEY (ext_affiliation_type_key);


--
-- Name: external_iap_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY external_iap
    ADD CONSTRAINT external_iap_pkey PRIMARY KEY (external_iap_key);


--
-- Name: federation_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY federation
    ADD CONSTRAINT federation_pkey PRIMARY KEY (federation_key);


--
-- Name: generated_identity_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY generated_identity
    ADD CONSTRAINT generated_identity_pkey PRIMARY KEY (generated_identity_key);


--
-- Name: group_data_type_access_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY group_data_type_access
    ADD CONSTRAINT group_data_type_access_pkey PRIMARY KEY (group_data_type_access_key);


--
-- Name: group_member_comments_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY group_member_comments
    ADD CONSTRAINT group_member_comments_pkey PRIMARY KEY (group_member_comment_key);


--
-- Name: group_members_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY group_members
    ADD CONSTRAINT group_members_pkey PRIMARY KEY (group_member_key);


--
-- Name: iap_data_element_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY iap_data_element
    ADD CONSTRAINT iap_data_element_pkey PRIMARY KEY (iap_data_element_key);


--
-- Name: iap_document_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY iap_document
    ADD CONSTRAINT iap_document_pkey PRIMARY KEY (iap_document_key);


--
-- Name: iap_ext_mapping_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY iap_ext_mapping
    ADD CONSTRAINT iap_ext_mapping_pkey PRIMARY KEY (iap_ext_mapping_key);


--
-- Name: iap_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY iap
    ADD CONSTRAINT iap_pkey PRIMARY KEY (iap_key);


--
-- Name: iap_rules_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY iap_rules
    ADD CONSTRAINT iap_rules_pkey PRIMARY KEY (iap_rule_key);


--
-- Name: id_card_print_log_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY id_card_print_log
    ADD CONSTRAINT id_card_print_log_pkey PRIMARY KEY (id_card_print_log_key);


--
-- Name: identifier_type_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY identifier_type
    ADD CONSTRAINT identifier_type_pkey PRIMARY KEY (type_key);


--
-- Name: irs_country_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY irs_country
    ADD CONSTRAINT irs_country_pkey PRIMARY KEY (irs_country_key);


--
-- Name: java_exceptions_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY java_exceptions
    ADD CONSTRAINT java_exceptions_pkey PRIMARY KEY (java_exception_key);


--
-- Name: major_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY major_cs
    ADD CONSTRAINT major_cs_pkey PRIMARY KEY (major_code);


--
-- Name: match_results_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY match_results
    ADD CONSTRAINT match_results_pkey PRIMARY KEY (match_set_key);


--
-- Name: mc_warning_notifications_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY mc_warning_notifications
    ADD CONSTRAINT mc_warning_notifications_pkey PRIMARY KEY (mc_warning_notification_key);


--
-- Name: mec_consumer_uk; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY message_consumer
    ADD CONSTRAINT mec_consumer_uk UNIQUE (consumer);


--
-- Name: message_consumer_mapping_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY message_consumer_mapping
    ADD CONSTRAINT message_consumer_mapping_pkey PRIMARY KEY (msg_con_mapping_key);


--
-- Name: message_consumer_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY message_consumer
    ADD CONSTRAINT message_consumer_pkey PRIMARY KEY (message_consumer_key);


--
-- Name: message_log_history_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY message_log_history
    ADD CONSTRAINT message_log_history_pkey PRIMARY KEY (message_log_history_key);


--
-- Name: message_log_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY message_log
    ADD CONSTRAINT message_log_pkey PRIMARY KEY (message_log_key);


--
-- Name: names_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY names
    ADD CONSTRAINT names_pkey PRIMARY KEY (name_key);


--
-- Name: names_staging_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY names_staging
    ADD CONSTRAINT names_staging_pkey PRIMARY KEY (name_staging_key);


--
-- Name: pay_frequency_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY pay_frequency_cs
    ADD CONSTRAINT pay_frequency_cs_pkey PRIMARY KEY (pay_freq_code);


--
-- Name: person_affiliation_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_affiliation
    ADD CONSTRAINT person_affiliation_pkey PRIMARY KEY (person_affiliation_key);


--
-- Name: person_citizenship_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_citizenship
    ADD CONSTRAINT person_citizenship_pkey PRIMARY KEY (person_citizenship_key);


--
-- Name: person_gender_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_gender
    ADD CONSTRAINT person_gender_pkey PRIMARY KEY (person_gender_key);


--
-- Name: person_iap_data_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_iap_data
    ADD CONSTRAINT person_iap_data_pkey PRIMARY KEY (person_iap_data_key);


--
-- Name: person_iap_vp_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_iap_vp
    ADD CONSTRAINT person_iap_vp_pkey PRIMARY KEY (person_iap_vp_key);


--
-- Name: person_id_card_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_id_card
    ADD CONSTRAINT person_id_card_pkey PRIMARY KEY (person_id_card_key);


--
-- Name: person_identifier_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_identifier
    ADD CONSTRAINT person_identifier_pkey PRIMARY KEY (person_identifier_key);


--
-- Name: person_linkage_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_linkage
    ADD CONSTRAINT person_linkage_pkey PRIMARY KEY (person_linkage_key);


--
-- Name: person_photo_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_photo
    ADD CONSTRAINT person_photo_pkey PRIMARY KEY (person_photo_key);


--
-- Name: person_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person
    ADD CONSTRAINT person_pkey PRIMARY KEY (person_id);


--
-- Name: person_userid_iap_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY person_userid_iap
    ADD CONSTRAINT person_userid_iap_pkey PRIMARY KEY (person_userid_iap_key);


--
-- Name: phones_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY phones
    ADD CONSTRAINT phones_pkey PRIMARY KEY (phone_key);


--
-- Name: photo_id_issuer_data_type_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY photo_id_issuer_data_type
    ADD CONSTRAINT photo_id_issuer_data_type_pkey PRIMARY KEY (photo_id_issuer_data_type_key);


--
-- Name: photo_id_issuer_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY photo_id_issuer
    ADD CONSTRAINT photo_id_issuer_pkey PRIMARY KEY (photo_id_issuer_key);


--
-- Name: policies_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY policies
    ADD CONSTRAINT policies_pkey PRIMARY KEY (policy_key);


--
-- Name: psu_directory_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY psu_directory
    ADD CONSTRAINT psu_directory_pkey PRIMARY KEY (psu_directory_key);


--
-- Name: psu_id_exceptions_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY psu_id_exceptions
    ADD CONSTRAINT psu_id_exceptions_pkey PRIMARY KEY (psu_id);


--
-- Name: psu_id_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY psu_id
    ADD CONSTRAINT psu_id_pkey PRIMARY KEY (psu_id_key);


--
-- Name: ra_affiliation_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_affiliation
    ADD CONSTRAINT ra_affiliation_pkey PRIMARY KEY (ra_affiliation_key);


--
-- Name: ra_application_properties_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_application_properties
    ADD CONSTRAINT ra_application_properties_pkey PRIMARY KEY (ra_application_properties_key);


--
-- Name: ra_applications_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_applications
    ADD CONSTRAINT ra_applications_pkey PRIMARY KEY (ra_application_key);


--
-- Name: ra_comments_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_comments
    ADD CONSTRAINT ra_comments_pkey PRIMARY KEY (ra_comment_key);


--
-- Name: ra_iap_assign_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_iap_assign
    ADD CONSTRAINT ra_iap_assign_pkey PRIMARY KEY (ra_iap_assign_key);


--
-- Name: ra_screen_fields_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_screen_fields
    ADD CONSTRAINT ra_screen_fields_pkey PRIMARY KEY (ra_screen_field_key);


--
-- Name: ra_screens_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_screens
    ADD CONSTRAINT ra_screens_pkey PRIMARY KEY (ra_screen_key);


--
-- Name: ra_server_principals_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_server_principals
    ADD CONSTRAINT ra_server_principals_pkey PRIMARY KEY (ra_server_principal_key);


--
-- Name: ra_ui_application_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ra_ui_application
    ADD CONSTRAINT ra_ui_application_pkey PRIMARY KEY (ra_ui_application_key);


--
-- Name: registration_authority_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY registration_authority
    ADD CONSTRAINT registration_authority_pkey PRIMARY KEY (registration_authority_key);


--
-- Name: security_question_answers_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY security_question_answers
    ADD CONSTRAINT security_question_answers_pkey PRIMARY KEY (sec_quest_answer_key);


--
-- Name: security_questions_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY security_questions
    ADD CONSTRAINT security_questions_pkey PRIMARY KEY (sec_quest_key);


--
-- Name: semesters_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY semesters
    ADD CONSTRAINT semesters_pkey PRIMARY KEY (semester_code);


--
-- Name: server_principal_ip_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY server_principal_ip
    ADD CONSTRAINT server_principal_ip_pkey PRIMARY KEY (server_principal_ip_key);


--
-- Name: service_log_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY service_log
    ADD CONSTRAINT service_log_pkey PRIMARY KEY (service_log_key);


--
-- Name: services_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT services_pkey PRIMARY KEY (service_key);


--
-- Name: student_academic_college_hist_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_academic_college_hist
    ADD CONSTRAINT student_academic_college_hist_pkey PRIMARY KEY (student_academic_college_key, start_date);


--
-- Name: student_academic_college_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_academic_college
    ADD CONSTRAINT student_academic_college_pkey PRIMARY KEY (student_academic_college_key);


--
-- Name: student_academic_department_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_academic_department
    ADD CONSTRAINT student_academic_department_pkey PRIMARY KEY (student_academic_dept_key);


--
-- Name: student_academic_dept_hist_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_academic_dept_hist
    ADD CONSTRAINT student_academic_dept_hist_pkey PRIMARY KEY (student_academic_dept_key, start_date);


--
-- Name: student_hist_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_hist
    ADD CONSTRAINT student_hist_pkey PRIMARY KEY (student_key, start_date);


--
-- Name: student_major_hist_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_major_hist
    ADD CONSTRAINT student_major_hist_pkey PRIMARY KEY (student_major_key, start_date);


--
-- Name: student_major_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_major
    ADD CONSTRAINT student_major_pkey PRIMARY KEY (student_major_key);


--
-- Name: student_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student
    ADD CONSTRAINT student_pkey PRIMARY KEY (student_key);


--
-- Name: student_status_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY student_status_cs
    ADD CONSTRAINT student_status_cs_pkey PRIMARY KEY (status_code);


--
-- Name: trans_cidr_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY trans_cidr
    ADD CONSTRAINT trans_cidr_pkey PRIMARY KEY (trans_cidr_key);


--
-- Name: trans_empl_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY trans_empl
    ADD CONSTRAINT trans_empl_pkey PRIMARY KEY (trans_empl_key);


--
-- Name: trans_hershey_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY trans_hershey
    ADD CONSTRAINT trans_hershey_pkey PRIMARY KEY (trans_hershey_key);


--
-- Name: trans_oasis_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY trans_oasis
    ADD CONSTRAINT trans_oasis_pkey PRIMARY KEY (trans_oasis_key);


--
-- Name: trans_stubio_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY trans_stubio
    ADD CONSTRAINT trans_stubio_pkey PRIMARY KEY (trans_stubio_key);


--
-- Name: ui_applications_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ui_applications
    ADD CONSTRAINT ui_applications_pkey PRIMARY KEY (ui_application_key);


--
-- Name: ui_field_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ui_field_types
    ADD CONSTRAINT ui_field_types_pkey PRIMARY KEY (ui_field_type);


--
-- Name: ui_log_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ui_log
    ADD CONSTRAINT ui_log_pkey PRIMARY KEY (ui_log_key);


--
-- Name: ui_screen_fields_pk; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ui_screen_fields
    ADD CONSTRAINT ui_screen_fields_pk PRIMARY KEY (ui_screen_name, ui_field_name);


--
-- Name: ui_screens_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY ui_screens
    ADD CONSTRAINT ui_screens_pkey PRIMARY KEY (ui_screen_name);


--
-- Name: user_comments_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY user_comments
    ADD CONSTRAINT user_comments_pkey PRIMARY KEY (user_comment_key);


--
-- Name: user_service_status_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY user_service_status
    ADD CONSTRAINT user_service_status_pkey PRIMARY KEY (user_service_status_key);


--
-- Name: userid_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY userid
    ADD CONSTRAINT userid_pkey PRIMARY KEY (userid, person_id);


--
-- Name: userid_policy_status_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY userid_policy_status
    ADD CONSTRAINT userid_policy_status_pkey PRIMARY KEY (userid_policy_status_key);


--
-- Name: userid_pool_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY userid_pool
    ADD CONSTRAINT userid_pool_pkey PRIMARY KEY (userid_pool_key);


--
-- Name: usps_state_types_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY usps_state_types
    ADD CONSTRAINT usps_state_types_pkey PRIMARY KEY (usps_state_type_key);


--
-- Name: usps_states_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY usps_states
    ADD CONSTRAINT usps_states_pkey PRIMARY KEY (state_code);


--
-- Name: visa_cs_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY visa_cs
    ADD CONSTRAINT visa_cs_pkey PRIMARY KEY (visa_code);


--
-- Name: web_service_access_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY web_service_access
    ADD CONSTRAINT web_service_access_pkey PRIMARY KEY (web_service_access_key);


--
-- Name: web_service_pkey; Type: CONSTRAINT; Schema: cpr; Owner: cpruser; Tablespace: 
--

ALTER TABLE ONLY web_service
    ADD CONSTRAINT web_service_pkey PRIMARY KEY (web_service_key);


--
-- Name: academic_college_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX academic_college_pkx ON academic_college_cs USING btree (college_code);


--
-- Name: academic_department_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX academic_department_pkx ON academic_department_cs USING btree (department_code);


--
-- Name: address_staging_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX address_staging_pkx ON address_staging USING btree (address_staging_key);


--
-- Name: addresses_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_02_idx ON addresses USING btree (person_id, end_date, data_type_key);


--
-- Name: addresses_03_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_03_idx ON addresses USING btree (address1, address2, address3);


--
-- Name: addresses_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_10_idx ON addresses USING btree (person_id);


--
-- Name: addresses_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_20_idx ON addresses USING btree (data_type_key);


--
-- Name: addresses_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_21_idx ON addresses USING btree (campus_code_key);


--
-- Name: addresses_22_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_22_idx ON addresses USING btree (country_key);


--
-- Name: addresses_match_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_match_idx ON addresses USING btree (person_id, address_match_code, city_match_code, state, postal_code);


--
-- Name: addresses_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX addresses_pk ON addresses USING btree (address_key);


--
-- Name: aff_transition_rules_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX aff_transition_rules_01_idx ON aff_transition_rules USING btree (current_affiliation_key, request_affiliation_key, result_affiliation_key, expire_flag);


--
-- Name: aff_transition_rules_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX aff_transition_rules_pk ON aff_transition_rules USING btree (aff_transition_rule_key);


--
-- Name: affiliations_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX affiliations_01_idx ON affiliations USING btree (active_flag, affiliation_key);


--
-- Name: affiliations_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX affiliations_pk ON affiliations USING btree (affiliation_key);


--
-- Name: ast_address1_2_3_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_address1_2_3_idx ON address_staging USING btree (address1, address2, address3);


--
-- Name: ast_cmp_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_cmp_fkx ON address_staging USING btree (campus_code_key);


--
-- Name: ast_cou_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_cou_fkx ON address_staging USING btree (country_key);


--
-- Name: ast_dat_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_dat_fkx ON address_staging USING btree (data_type_key);


--
-- Name: ast_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_per_fkx ON address_staging USING btree (person_id);


--
-- Name: ast_per_match_code_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ast_per_match_code_idx ON address_staging USING btree (person_id, address_match_code, city_match_code, state, postal_code);


--
-- Name: bad_prefixes_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX bad_prefixes_idx ON bad_prefixes USING btree (char_part);


--
-- Name: cag_rasrvrprinc_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX cag_rasrvrprinc_fkx ON cpr_access_groups USING btree (ra_server_principal_key);


--
-- Name: cag_spkey_group_ukx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX cag_spkey_group_ukx ON cpr_access_groups USING btree (ra_server_principal_key, access_group);


--
-- Name: campus_cs_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX campus_cs_01_idx ON campus_cs USING btree (campus_code, active_flag);


--
-- Name: campus_cs_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX campus_cs_pk ON campus_cs USING btree (campus_code_key);


--
-- Name: change_notification_types_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX change_notification_types_pkx ON change_notification_types USING btree (change_notification_types_key);


--
-- Name: change_notifications_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX change_notifications_pkx ON change_notifications USING btree (change_notifications_key);


--
-- Name: citizenship_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX citizenship_cs_pkx ON citizenship_cs USING btree (citizenship);


--
-- Name: cno_cnt_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX cno_cnt_fkx ON change_notifications USING btree (change_notification_types_key);


--
-- Name: cno_consumer_chngnottype_ukx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX cno_consumer_chngnottype_ukx ON change_notifications USING btree (message_consumer_key, change_notification_types_key);


--
-- Name: cno_mec_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX cno_mec_fkx ON change_notifications USING btree (message_consumer_key);


--
-- Name: cnt_notification_type_ukx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX cnt_notification_type_ukx ON change_notification_types USING btree (notification_type);


--
-- Name: confidentiality_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX confidentiality_01_idx ON confidentiality USING btree (end_date, person_id, data_type_key);


--
-- Name: confidentiality_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX confidentiality_10_idx ON confidentiality USING btree (person_id);


--
-- Name: confidentiality_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX confidentiality_20_idx ON confidentiality USING btree (data_type_key);


--
-- Name: confidentiality_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX confidentiality_pk ON confidentiality USING btree (confidentiality_key);


--
-- Name: country_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX country_pk ON country USING btree (country_key);


--
-- Name: cpr_access_groups_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX cpr_access_groups_pkx ON cpr_access_groups USING btree (cpr_access_groups_key);


--
-- Name: cpr_component_status_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX cpr_component_status_01_idx ON cpr_component_status USING btree (cpr_component);


--
-- Name: cpr_component_status_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX cpr_component_status_pk ON cpr_component_status USING btree (cpr_component_status_key);


--
-- Name: credent_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX credent_pk ON credential USING btree (credential_key);


--
-- Name: credential_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX credential_01_idx ON credential USING btree (end_date, person_id, data_type_key);


--
-- Name: credential_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX credential_20_idx ON credential USING btree (person_id);


--
-- Name: credential_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX credential_21_idx ON credential USING btree (data_type_key);


--
-- Name: csp_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX csp_per_fkx ON person_citizenship USING btree (person_id);


--
-- Name: data_element_doc_type_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX data_element_doc_type_pk ON data_element_doc_types USING btree (data_element_doc_type_key);


--
-- Name: data_element_types_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX data_element_types_pk ON data_element_types USING btree (data_element_type_key);


--
-- Name: data_types_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX data_types_01_idx ON data_types USING btree (enum_string);


--
-- Name: data_types_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX data_types_20_idx ON data_types USING btree (parent_data_type_key);


--
-- Name: data_types_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX data_types_pk ON data_types USING btree (data_type_key);


--
-- Name: database_log_entrystamp_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX database_log_entrystamp_idx ON database_log USING btree (entry_timestamp, program_name);


--
-- Name: database_log_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX database_log_pk ON database_log USING btree (database_log_key);


--
-- Name: date_of_birth_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX date_of_birth_01_idx ON date_of_birth USING btree (person_id, end_date);


--
-- Name: date_of_birth_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX date_of_birth_10_idx ON date_of_birth USING btree (person_id);


--
-- Name: date_of_birth_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX date_of_birth_pk ON date_of_birth USING btree (date_of_birth_key);


--
-- Name: email_address_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX email_address_10_idx ON email_address USING btree (person_id);


--
-- Name: email_address_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX email_address_20_idx ON email_address USING btree (data_type_key);


--
-- Name: email_address_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX email_address_pk ON email_address USING btree (email_address_key);


--
-- Name: email_notification_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX email_notification_01_idx ON email_notification USING btree (notification_process);


--
-- Name: emp_app_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX emp_app_fkx ON employee USING btree (appt_code);


--
-- Name: emp_cmp_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX emp_cmp_fkx ON employee USING btree (campus_code_key);


--
-- Name: emp_his_appt_code_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX emp_his_appt_code_idx ON employee_hist USING btree (appt_code);


--
-- Name: emp_his_person_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX emp_his_person_id_idx ON employee_hist USING btree (person_id);


--
-- Name: emp_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX emp_per_fkx ON employee USING btree (person_id);


--
-- Name: employee_class_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX employee_class_cs_pkx ON employee_class_cs USING btree (class_code);


--
-- Name: employee_hist_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX employee_hist_pkx ON employee_hist USING btree (employee_key, start_date);


--
-- Name: employee_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX employee_pkx ON employee USING btree (employee_key);


--
-- Name: employee_status_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX employee_status_cs_pkx ON employee_status_cs USING btree (status_code);


--
-- Name: event_triggers_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX event_triggers_pk ON event_triggers USING btree (event_trigger_key);


--
-- Name: ext_affiliation_map_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ext_affiliation_map_pk ON ext_affiliation_mapping USING btree (ext_affiliation_mapping_key);


--
-- Name: ext_affiliation_mapping_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ext_affiliation_mapping_01_idx ON ext_affiliation_mapping USING btree (affiliation_key, ext_affiliation_key);


--
-- Name: ext_affiliation_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ext_affiliation_pk ON ext_affiliation USING btree (ext_affiliation_key);


--
-- Name: ext_affiliation_type_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ext_affiliation_type_pk ON ext_affiliation_types USING btree (ext_affiliation_type_key);


--
-- Name: external_iap_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX external_iap_01_idx ON external_iap USING btree (external_iap_key, active_flag, external_iap);


--
-- Name: external_iap_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX external_iap_pk ON external_iap USING btree (external_iap_key);


--
-- Name: federation_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX federation_01_idx ON federation USING btree (federation_key, active_flag, federation);


--
-- Name: federation_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX federation_pk ON federation USING btree (federation_key);


--
-- Name: gda_cag_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX gda_cag_fkx ON group_data_type_access USING btree (cpr_access_groups_key);


--
-- Name: gda_data_types_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX gda_data_types_fkx ON group_data_type_access USING btree (data_type_key);


--
-- Name: generated_identity_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX generated_identity_01_idx ON generated_identity USING btree (generated_identity);


--
-- Name: generated_identity_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX generated_identity_02_idx ON generated_identity USING btree (char_part, num_part);


--
-- Name: generated_identity_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX generated_identity_10_idx ON generated_identity USING btree (person_id);


--
-- Name: generated_identity_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX generated_identity_pk ON generated_identity USING btree (generated_identity_key);


--
-- Name: generated_identity_set_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX generated_identity_set_id_idx ON generated_identity USING btree (set_id);


--
-- Name: group_data_type_access_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_data_type_access_01_idx ON group_data_type_access USING btree (data_type_key, cpr_access_groups_key);


--
-- Name: group_data_type_access_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_data_type_access_pkx ON group_data_type_access USING btree (group_data_type_access_key);


--
-- Name: group_member_comments_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_member_comments_pk ON group_member_comments USING btree (group_member_comment_key);


--
-- Name: group_members_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_members_01_idx ON group_members USING btree (cpr_access_groups_key, userid, end_date);


--
-- Name: group_members_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_members_02_idx ON group_members USING btree (userid, end_date);


--
-- Name: group_members_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_members_20_idx ON group_members USING btree (userid, person_id);


--
-- Name: group_members_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX group_members_pk ON group_members USING btree (group_member_key);


--
-- Name: iap_data_element_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_data_element_pk ON iap_data_element USING btree (iap_data_element_key);


--
-- Name: iap_document_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_document_pk ON iap_document USING btree (iap_document_key);


--
-- Name: iap_ext_mapping_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_ext_mapping_01_idx ON iap_ext_mapping USING btree (iap_key, external_iap_key, end_date);


--
-- Name: iap_ext_mapping_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_ext_mapping_pk ON iap_ext_mapping USING btree (iap_ext_mapping_key);


--
-- Name: iap_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_pk ON iap USING btree (iap_key);


--
-- Name: iap_rules_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX iap_rules_pk ON iap_rules USING btree (iap_rule_key);


--
-- Name: id_card_print_history_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX id_card_print_history_pk ON id_card_print_log USING btree (id_card_print_log_key);


--
-- Name: id_card_print_log_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX id_card_print_log_20_idx ON id_card_print_log USING btree (person_id_card_key);


--
-- Name: irs_country_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX irs_country_pkx ON irs_country USING btree (irs_country_key);


--
-- Name: java_exceptions_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX java_exceptions_pk ON java_exceptions USING btree (java_exception_key);


--
-- Name: major_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX major_cs_pkx ON major_cs USING btree (major_code);


--
-- Name: match_results_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX match_results_10_idx ON match_results USING btree (person_id);


--
-- Name: match_results_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX match_results_idx ON match_results USING btree (match_set_key, score, person_id);


--
-- Name: mc_warning_notifications_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX mc_warning_notifications_pkx ON mc_warning_notifications USING btree (mc_warning_notification_key);


--
-- Name: mcm_mec_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX mcm_mec_fkx ON message_consumer_mapping USING btree (message_consumer_key);


--
-- Name: mcm_services_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX mcm_services_fkx ON message_consumer_mapping USING btree (service_key);


--
-- Name: mcm_websrvc_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX mcm_websrvc_fkx ON message_consumer_mapping USING btree (web_service_key);


--
-- Name: mcw_eventtrig_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX mcw_eventtrig_fkx ON mc_warning_notifications USING btree (event_trigger_key);


--
-- Name: mcw_mec_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX mcw_mec_fkx ON mc_warning_notifications USING btree (message_consumer_key);


--
-- Name: mec_consumer_ukx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX mec_consumer_ukx ON message_consumer USING btree (consumer);


--
-- Name: message_consumer_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX message_consumer_pkx ON message_consumer USING btree (message_consumer_key);


--
-- Name: message_log_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX message_log_01_idx ON message_log USING btree (created_on);


--
-- Name: message_log_history_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX message_log_history_01_idx ON message_log_history USING btree (message_id);


--
-- Name: message_log_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX message_log_pkx ON message_log USING btree (message_log_key);


--
-- Name: msg_con_mapping_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX msg_con_mapping_pkx ON message_consumer_mapping USING btree (msg_con_mapping_key);


--
-- Name: msglog_mec_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX msglog_mec_fkx ON message_log USING btree (message_consumer_key);


--
-- Name: msglog_websrvc_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX msglog_websrvc_fkx ON message_log USING btree (web_service_key);


--
-- Name: names_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX names_10_idx ON names USING btree (person_id);


--
-- Name: names_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX names_21_idx ON names USING btree (data_type_key);


--
-- Name: names_match_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX names_match_idx ON names USING btree (name_match_code, person_id);


--
-- Name: names_namessp_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX names_namessp_idx ON names USING btree (person_id, end_date);


--
-- Name: names_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX names_pk ON names USING btree (name_key);


--
-- Name: names_staging_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX names_staging_pkx ON names_staging USING btree (name_staging_key);


--
-- Name: nst_name_match_per_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX nst_name_match_per_idx ON names_staging USING btree (name_match_code, person_id);


--
-- Name: nst_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX nst_per_fkx ON names_staging USING btree (person_id);


--
-- Name: pay_frequency_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX pay_frequency_cs_pkx ON pay_frequency_cs USING btree (pay_freq_code);


--
-- Name: pci_cit_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX pci_cit_fkx ON person_citizenship USING btree (citizenship);


--
-- Name: person_affiliation_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_affiliation_01_idx ON person_affiliation USING btree (person_id, affiliation_key, end_date);


--
-- Name: person_affiliation_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_affiliation_10_idx ON person_affiliation USING btree (person_id);


--
-- Name: person_affiliation_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_affiliation_21_idx ON person_affiliation USING btree (affiliation_key);


--
-- Name: person_affiliation_22_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_affiliation_22_idx ON person_affiliation USING btree (person_id, end_date);


--
-- Name: person_affiliation_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_affiliation_pk ON person_affiliation USING btree (person_affiliation_key);


--
-- Name: person_citizenship_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_citizenship_pkx ON person_citizenship USING btree (person_citizenship_key);


--
-- Name: person_gender_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_gender_01_idx ON person_gender USING btree (person_id, end_date, data_type_key);


--
-- Name: person_gender_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_gender_10_idx ON person_gender USING btree (person_id);


--
-- Name: person_gender_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_gender_20_idx ON person_gender USING btree (data_type_key);


--
-- Name: person_gender_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_gender_pk ON person_gender USING btree (person_gender_key);


--
-- Name: person_iap_data_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_data_pk ON person_iap_data USING btree (person_iap_data_key);


--
-- Name: person_iap_vp_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_10_idx ON person_iap_vp USING btree (person_id);


--
-- Name: person_iap_vp_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_20_idx ON person_iap_vp USING btree (iap_key);


--
-- Name: person_iap_vp_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_21_idx ON person_iap_vp USING btree (registration_authority_key);


--
-- Name: person_iap_vp_22_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_22_idx ON person_iap_vp USING btree (group_member_key);


--
-- Name: person_iap_vp_23_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_23_idx ON person_iap_vp USING btree (userid, person_id);


--
-- Name: person_iap_vp_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_iap_vp_pk ON person_iap_vp USING btree (person_iap_vp_key);


--
-- Name: person_id_card_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_id_card_01_idx ON person_id_card USING btree (person_id, end_date, data_type_key);


--
-- Name: person_id_card_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_id_card_pk ON person_id_card USING btree (person_id_card_key);


--
-- Name: person_id_end_date_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_id_end_date_idx ON person USING btree (person_id, end_date);


--
-- Name: person_linkage_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_linkage_01_idx ON person_linkage USING btree (linked_person_id, person_id, data_type_key);


--
-- Name: person_linkage_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_linkage_02_idx ON person_linkage USING btree (end_date);


--
-- Name: person_linkage_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_linkage_10_idx ON person_linkage USING btree (person_id);


--
-- Name: person_linkage_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_linkage_20_idx ON person_linkage USING btree (data_type_key);


--
-- Name: person_linkage_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_linkage_pk ON person_linkage USING btree (person_linkage_key);


--
-- Name: person_photo_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_photo_20_idx ON person_photo USING btree (person_id);


--
-- Name: person_photo_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_photo_pk ON person_photo USING btree (person_photo_key);


--
-- Name: person_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_pk ON person USING btree (person_id);


--
-- Name: person_userid_iap_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_userid_iap_01_idx ON person_userid_iap USING btree (userid, iap_key, end_date);


--
-- Name: person_userid_iap_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_userid_iap_20_idx ON person_userid_iap USING btree (userid, person_id);


--
-- Name: person_userid_iap_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX person_userid_iap_pk ON person_userid_iap USING btree (person_userid_iap_key);


--
-- Name: phones_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX phones_01_idx ON phones USING btree (group_id, data_type_key, person_id, end_date);


--
-- Name: phones_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX phones_02_idx ON phones USING btree (data_type_key, person_id, start_date);


--
-- Name: phones_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX phones_10_idx ON phones USING btree (person_id);


--
-- Name: phones_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX phones_20_idx ON phones USING btree (data_type_key);


--
-- Name: phones_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX phones_pk ON phones USING btree (phone_key);


--
-- Name: photo_id_issuer_data_type_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX photo_id_issuer_data_type_pk ON photo_id_issuer_data_type USING btree (photo_id_issuer_data_type_key);


--
-- Name: photo_id_issuer_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX photo_id_issuer_pk ON photo_id_issuer USING btree (photo_id_issuer_key);


--
-- Name: policies_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX policies_pk ON policies USING btree (policy_key);


--
-- Name: psu_directory_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_directory_01_idx ON psu_directory USING btree (person_id, end_date);


--
-- Name: psu_directory_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_directory_10_idx ON psu_directory USING btree (person_id);


--
-- Name: psu_directory_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_directory_20_idx ON psu_directory USING btree (userid, person_id);


--
-- Name: psu_directory_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_directory_pk ON psu_directory USING btree (psu_directory_key);


--
-- Name: psu_id_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_id_01_idx ON psu_id USING btree (person_id, end_date);


--
-- Name: psu_id_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_id_02_idx ON psu_id USING btree (psu_id, end_date);


--
-- Name: psu_id_exceptions_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_id_exceptions_idx ON psu_id_exceptions USING btree (psu_id);


--
-- Name: psu_id_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX psu_id_pk ON psu_id USING btree (psu_id_key);


--
-- Name: ra_affiliation_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_affiliation_01_idx ON ra_affiliation USING btree (affiliation_key, registration_authority_key);


--
-- Name: ra_affiliation_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_affiliation_pk ON ra_affiliation USING btree (ra_affiliation_key);


--
-- Name: ra_application_properites_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_application_properites_pk ON ra_application_properties USING btree (ra_application_properties_key);


--
-- Name: ra_applications_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_applications_10_idx ON ra_applications USING btree (registration_authority_key);


--
-- Name: ra_applications_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_applications_pk ON ra_applications USING btree (ra_application_key);


--
-- Name: ra_comments_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_comments_pk ON ra_comments USING btree (ra_comment_key);


--
-- Name: ra_iap_assign_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_iap_assign_pk ON ra_iap_assign USING btree (ra_iap_assign_key);


--
-- Name: ra_screen_fields_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_screen_fields_pk ON ra_screen_fields USING btree (ra_screen_field_key);


--
-- Name: ra_screens_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_screens_pk ON ra_screens USING btree (ra_screen_key);


--
-- Name: ra_server_principals_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_server_principals_01_idx ON ra_server_principals USING btree (ra_server_principal, end_date, registration_authority_key);


--
-- Name: ra_server_principals_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ra_server_principals_pk ON ra_server_principals USING btree (ra_server_principal_key);


--
-- Name: registration_authority_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX registration_authority_01_idx ON registration_authority USING btree (end_date);


--
-- Name: registration_authority_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX registration_authority_02_idx ON registration_authority USING btree (registration_authority);


--
-- Name: registration_authority_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX registration_authority_10_idx ON registration_authority USING btree (ra_contact_key);


--
-- Name: registration_authority_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX registration_authority_pk ON registration_authority USING btree (registration_authority_key);


--
-- Name: sac_his_per_sem_aco_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sac_his_per_sem_aco_idx ON student_academic_college_hist USING btree (person_id, semester_code, college_code);


--
-- Name: sac_his_sem_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sac_his_sem_idx ON student_academic_college_hist USING btree (semester_code);


--
-- Name: sac_hist_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX sac_hist_pkx ON student_academic_college_hist USING btree (student_academic_college_key, start_date);


--
-- Name: sac_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sac_per_fkx ON student_academic_college USING btree (person_id);


--
-- Name: sac_sem_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sac_sem_fkx ON student_academic_college USING btree (semester_code);


--
-- Name: sad_his_per_sem_ade_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sad_his_per_sem_ade_idx ON student_academic_dept_hist USING btree (person_id, semester_code, department_code);


--
-- Name: sad_his_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX sad_his_pkx ON student_academic_dept_hist USING btree (student_academic_dept_key, start_date);


--
-- Name: sad_his_sem_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sad_his_sem_idx ON student_academic_dept_hist USING btree (semester_code);


--
-- Name: sad_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sad_per_fkx ON student_academic_department USING btree (person_id);


--
-- Name: sad_sem_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sad_sem_fkx ON student_academic_department USING btree (semester_code);


--
-- Name: sec_quest_answers_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sec_quest_answers_01_idx ON security_question_answers USING btree (person_id, userid);


--
-- Name: security_question_answers_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX security_question_answers_pk ON security_question_answers USING btree (sec_quest_answer_key);


--
-- Name: security_questions_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX security_questions_01_idx ON security_questions USING btree (sec_quest_group_key, end_date);


--
-- Name: security_questions_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX security_questions_pk ON security_questions USING btree (sec_quest_key);


--
-- Name: semesters_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX semesters_pkx ON semesters USING btree (semester_code);


--
-- Name: server_principal_ip_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX server_principal_ip_pkx ON server_principal_ip USING btree (server_principal_ip_key);


--
-- Name: service_log_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX service_log_01_idx ON service_log USING btree (request_userid);


--
-- Name: service_log_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX service_log_pk ON service_log USING btree (service_log_key);


--
-- Name: services_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX services_pk ON services USING btree (service_key);


--
-- Name: sma_his_per_sem_maj_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sma_his_per_sem_maj_idx ON student_major_hist USING btree (person_id, semester_code, major_code);


--
-- Name: sma_his_sem_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sma_his_sem_idx ON student_major_hist USING btree (semester_code);


--
-- Name: sma_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sma_per_fkx ON student_major USING btree (person_id);


--
-- Name: sma_sem_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX sma_sem_fkx ON student_major USING btree (semester_code);


--
-- Name: spi_raserverprinc_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX spi_raserverprinc_fkx ON server_principal_ip USING btree (ra_server_principal_key);


--
-- Name: srvclog_request_start_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX srvclog_request_start_idx ON service_log USING btree (request_start);


--
-- Name: stu_his_per_sem_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX stu_his_per_sem_idx ON student_hist USING btree (person_id, semester_code);


--
-- Name: stu_his_semester_code_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX stu_his_semester_code_idx ON student_hist USING btree (semester_code);


--
-- Name: stu_per_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX stu_per_fkx ON student USING btree (person_id);


--
-- Name: stu_per_sem_ukx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX stu_per_sem_ukx ON student USING btree (person_id, semester_code);


--
-- Name: stu_sem_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX stu_sem_fkx ON student USING btree (semester_code);


--
-- Name: student_academic_college_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_academic_college_pkx ON student_academic_college USING btree (student_academic_college_key);


--
-- Name: student_academic_dept_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_academic_dept_pkx ON student_academic_department USING btree (student_academic_dept_key);


--
-- Name: student_hist_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_hist_pkx ON student_hist USING btree (student_key, start_date);


--
-- Name: student_major_hist_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_major_hist_pkx ON student_major_hist USING btree (student_major_key, start_date);


--
-- Name: student_major_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_major_pkx ON student_major USING btree (student_major_key);


--
-- Name: student_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_pkx ON student USING btree (student_key);


--
-- Name: student_status_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX student_status_cs_pkx ON student_status_cs USING btree (status_code);


--
-- Name: tci_psu_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX tci_psu_id_idx ON trans_cidr USING btree (psu_id);


--
-- Name: tem_psu_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX tem_psu_id_idx ON trans_empl USING btree (psu_id);


--
-- Name: the_psu_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX the_psu_id_idx ON trans_hershey USING btree (psu_id);


--
-- Name: toa_psu_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX toa_psu_id_idx ON trans_oasis USING btree (psu_id);


--
-- Name: trans_cidr_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX trans_cidr_pkx ON trans_cidr USING btree (trans_cidr_key);


--
-- Name: trans_empl_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX trans_empl_pkx ON trans_empl USING btree (trans_empl_key);


--
-- Name: trans_hershey_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX trans_hershey_pkx ON trans_hershey USING btree (trans_hershey_key);


--
-- Name: trans_oasis_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX trans_oasis_pkx ON trans_oasis USING btree (trans_oasis_key);


--
-- Name: trans_stubio_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX trans_stubio_pkx ON trans_stubio USING btree (trans_stubio_key);


--
-- Name: tsb_psu_id_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX tsb_psu_id_idx ON trans_stubio USING btree (psu_id);


--
-- Name: ui_field_types_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ui_field_types_pk ON ui_field_types USING btree (ui_field_type);


--
-- Name: ui_log_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ui_log_pk ON ui_log USING btree (ui_log_key);


--
-- Name: ui_screen_fields_pk_index; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ui_screen_fields_pk_index ON ui_screen_fields USING btree (ui_screen_name, ui_field_name);


--
-- Name: ui_screens_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX ui_screens_pk ON ui_screens USING btree (ui_screen_name);


--
-- Name: uiapp_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX uiapp_pk ON ui_applications USING btree (ui_application_key);


--
-- Name: user_comments_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX user_comments_01_idx ON user_comments USING btree (end_date, userid);


--
-- Name: user_comments_20_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX user_comments_20_idx ON user_comments USING btree (userid, person_id);


--
-- Name: user_comments_21_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX user_comments_21_idx ON user_comments USING btree (data_type_key);


--
-- Name: user_comments_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX user_comments_pk ON user_comments USING btree (user_comment_key);


--
-- Name: user_policy_status_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX user_policy_status_pk ON userid_policy_status USING btree (userid_policy_status_key);


--
-- Name: user_service_status_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX user_service_status_pkx ON user_service_status USING btree (user_service_status_key);


--
-- Name: userid_02_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX userid_02_idx ON userid USING btree (char_part, num_part);


--
-- Name: userid_10_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX userid_10_idx ON userid USING btree (person_id);


--
-- Name: userid_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX userid_pk ON userid USING btree (userid, person_id);


--
-- Name: userid_pool_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX userid_pool_idx ON userid_pool USING btree (char_part, num_part);


--
-- Name: userid_pool_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX userid_pool_pk ON userid_pool USING btree (userid_pool_key);


--
-- Name: usersrvcstat_mec_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX usersrvcstat_mec_fkx ON user_service_status USING btree (message_consumer_key);


--
-- Name: usersrvcstat_services_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX usersrvcstat_services_fkx ON user_service_status USING btree (service_key);


--
-- Name: usersrvcstat_userid_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX usersrvcstat_userid_fkx ON user_service_status USING btree (userid, person_id);


--
-- Name: visa_cs_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE UNIQUE INDEX visa_cs_pkx ON visa_cs USING btree (visa_code);


--
-- Name: web_service_01_idx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX web_service_01_idx ON web_service USING btree (web_service, end_date, web_service_key);


--
-- Name: web_service_access_pkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX web_service_access_pkx ON web_service_access USING btree (web_service_access_key);


--
-- Name: web_service_pk; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX web_service_pk ON web_service USING btree (web_service_key);


--
-- Name: wsa_cag_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX wsa_cag_fkx ON web_service_access USING btree (cpr_access_groups_key);


--
-- Name: wsa_websrvc_fkx; Type: INDEX; Schema: cpr; Owner: cpruser; Tablespace: 
--

CREATE INDEX wsa_websrvc_fkx ON web_service_access USING btree (web_service_key);


--
-- Name: addresses_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY addresses
    ADD CONSTRAINT addresses_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: addresses_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY addresses
    ADD CONSTRAINT addresses_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: appprop_rauiapp_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY application_properties
    ADD CONSTRAINT appprop_rauiapp_fk FOREIGN KEY (ui_application_key) REFERENCES ui_applications(ui_application_key);


--
-- Name: cag_rasrvrprinc_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY cpr_access_groups
    ADD CONSTRAINT cag_rasrvrprinc_fk FOREIGN KEY (ra_server_principal_key) REFERENCES ra_server_principals(ra_server_principal_key);


--
-- Name: cno_cnt_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY change_notifications
    ADD CONSTRAINT cno_cnt_fk FOREIGN KEY (change_notification_types_key) REFERENCES change_notification_types(change_notification_types_key);


--
-- Name: cno_mec_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY change_notifications
    ADD CONSTRAINT cno_mec_fk FOREIGN KEY (message_consumer_key) REFERENCES message_consumer(message_consumer_key);


--
-- Name: confidentiality_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY confidentiality
    ADD CONSTRAINT confidentiality_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: confidentiality_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY confidentiality
    ADD CONSTRAINT confidentiality_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: credential_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY credential
    ADD CONSTRAINT credential_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: credential_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY credential
    ADD CONSTRAINT credential_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: data_element_types_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY data_element_types
    ADD CONSTRAINT data_element_types_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: date_of_birth_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY date_of_birth
    ADD CONSTRAINT date_of_birth_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: email_address_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY email_address
    ADD CONSTRAINT email_address_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: email_address_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY email_address
    ADD CONSTRAINT email_address_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: ext_affiliation_ext_affiliation_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ext_affiliation
    ADD CONSTRAINT ext_affiliation_ext_affiliation_type_key_fkey FOREIGN KEY (ext_affiliation_type_key) REFERENCES ext_affiliation_types(ext_affiliation_type_key);


--
-- Name: ext_affiliation_mapping_affiliation_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ext_affiliation_mapping
    ADD CONSTRAINT ext_affiliation_mapping_affiliation_key_fkey FOREIGN KEY (affiliation_key) REFERENCES affiliations(affiliation_key);


--
-- Name: ext_affiliation_mapping_ext_affiliation_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ext_affiliation_mapping
    ADD CONSTRAINT ext_affiliation_mapping_ext_affiliation_key_fkey FOREIGN KEY (ext_affiliation_key) REFERENCES ext_affiliation(ext_affiliation_key);


--
-- Name: external_iap_federation_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY external_iap
    ADD CONSTRAINT external_iap_federation_key_fkey FOREIGN KEY (federation_key) REFERENCES federation(federation_key);


--
-- Name: gda_cag_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY group_data_type_access
    ADD CONSTRAINT gda_cag_fk FOREIGN KEY (cpr_access_groups_key) REFERENCES cpr_access_groups(cpr_access_groups_key);


--
-- Name: gda_data_types_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY group_data_type_access
    ADD CONSTRAINT gda_data_types_fk FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: generated_identity_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY generated_identity
    ADD CONSTRAINT generated_identity_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: group_member_comments_group_member_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY group_member_comments
    ADD CONSTRAINT group_member_comments_group_member_key_fkey FOREIGN KEY (group_member_key) REFERENCES group_members(group_member_key);


--
-- Name: grpmbrs_cag_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY group_members
    ADD CONSTRAINT grpmbrs_cag_fk FOREIGN KEY (cpr_access_groups_key) REFERENCES cpr_access_groups(cpr_access_groups_key);


--
-- Name: grpmbrs_userid_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY group_members
    ADD CONSTRAINT grpmbrs_userid_fk FOREIGN KEY (userid, person_id) REFERENCES userid(userid, person_id);


--
-- Name: id_card_print_log_person_id_card_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY id_card_print_log
    ADD CONSTRAINT id_card_print_log_person_id_card_key_fkey FOREIGN KEY (person_id_card_key) REFERENCES person_id_card(person_id_card_key);


--
-- Name: match_results_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY match_results
    ADD CONSTRAINT match_results_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: mcm_mec_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_consumer_mapping
    ADD CONSTRAINT mcm_mec_fk FOREIGN KEY (message_consumer_key) REFERENCES message_consumer(message_consumer_key);


--
-- Name: mcm_services_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_consumer_mapping
    ADD CONSTRAINT mcm_services_fk FOREIGN KEY (service_key) REFERENCES services(service_key);


--
-- Name: mcm_websrvc_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_consumer_mapping
    ADD CONSTRAINT mcm_websrvc_fk FOREIGN KEY (web_service_key) REFERENCES web_service(web_service_key);


--
-- Name: mcw_eventtrig_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY mc_warning_notifications
    ADD CONSTRAINT mcw_eventtrig_fk FOREIGN KEY (event_trigger_key) REFERENCES event_triggers(event_trigger_key);


--
-- Name: mcw_mec_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY mc_warning_notifications
    ADD CONSTRAINT mcw_mec_fk FOREIGN KEY (message_consumer_key) REFERENCES message_consumer(message_consumer_key);


--
-- Name: msghistlog_message_log_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_log_history
    ADD CONSTRAINT msghistlog_message_log_fk FOREIGN KEY (message_log_key) REFERENCES message_log(message_log_key);


--
-- Name: msglog_mec_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_log
    ADD CONSTRAINT msglog_mec_fk FOREIGN KEY (message_consumer_key) REFERENCES message_consumer(message_consumer_key);


--
-- Name: msglog_srv_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_log
    ADD CONSTRAINT msglog_srv_fk FOREIGN KEY (service_key) REFERENCES services(service_key);


--
-- Name: msglog_websrvc_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY message_log
    ADD CONSTRAINT msglog_websrvc_fk FOREIGN KEY (web_service_key) REFERENCES web_service(web_service_key);


--
-- Name: names_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY names
    ADD CONSTRAINT names_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: names_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY names
    ADD CONSTRAINT names_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_affiliation_affiliation_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_affiliation
    ADD CONSTRAINT person_affiliation_affiliation_key_fkey FOREIGN KEY (affiliation_key) REFERENCES affiliations(affiliation_key);


--
-- Name: person_affiliation_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_affiliation
    ADD CONSTRAINT person_affiliation_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_gender_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_gender
    ADD CONSTRAINT person_gender_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: person_gender_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_gender
    ADD CONSTRAINT person_gender_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_iap_data_data_element_doc_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_iap_data
    ADD CONSTRAINT person_iap_data_data_element_doc_type_key_fkey FOREIGN KEY (data_element_doc_type_key) REFERENCES data_element_doc_types(data_element_doc_type_key);


--
-- Name: person_iap_data_iap_document_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_iap_data
    ADD CONSTRAINT person_iap_data_iap_document_key_fkey FOREIGN KEY (iap_document_key) REFERENCES iap_document(iap_document_key);


--
-- Name: person_iap_vp_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_iap_vp
    ADD CONSTRAINT person_iap_vp_person_id_fkey FOREIGN KEY (person_id, userid) REFERENCES userid(person_id, userid);


--
-- Name: person_iap_vp_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_iap_vp
    ADD CONSTRAINT person_iap_vp_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: person_id_card_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_id_card
    ADD CONSTRAINT person_id_card_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: person_id_card_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_id_card
    ADD CONSTRAINT person_id_card_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_identifier_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_identifier
    ADD CONSTRAINT person_identifier_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_identifier_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_identifier
    ADD CONSTRAINT person_identifier_type_key_fkey FOREIGN KEY (type_key) REFERENCES identifier_type(type_key);


--
-- Name: person_linkage_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_linkage
    ADD CONSTRAINT person_linkage_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: person_linkage_linked_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_linkage
    ADD CONSTRAINT person_linkage_linked_person_id_fkey FOREIGN KEY (linked_person_id) REFERENCES person(person_id);


--
-- Name: person_linkage_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_linkage
    ADD CONSTRAINT person_linkage_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_photo_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_photo
    ADD CONSTRAINT person_photo_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: person_userid_iap_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY person_userid_iap
    ADD CONSTRAINT person_userid_iap_person_id_fkey FOREIGN KEY (person_id, userid) REFERENCES userid(person_id, userid);


--
-- Name: phones_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY phones
    ADD CONSTRAINT phones_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: phones_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY phones
    ADD CONSTRAINT phones_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: photo_id_issuer_data_type_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY photo_id_issuer_data_type
    ADD CONSTRAINT photo_id_issuer_data_type_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: psu_directory_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY psu_directory
    ADD CONSTRAINT psu_directory_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: psu_id_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY psu_id
    ADD CONSTRAINT psu_id_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: ra_affiliation_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_affiliation
    ADD CONSTRAINT ra_affiliation_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: ra_application_properties_ra_application_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_application_properties
    ADD CONSTRAINT ra_application_properties_ra_application_key_fkey FOREIGN KEY (ra_application_key) REFERENCES ra_applications(ra_application_key);


--
-- Name: ra_applications_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_applications
    ADD CONSTRAINT ra_applications_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: ra_applications_ui_application_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_applications
    ADD CONSTRAINT ra_applications_ui_application_key_fkey FOREIGN KEY (ui_application_key) REFERENCES ui_applications(ui_application_key);


--
-- Name: ra_comments_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_comments
    ADD CONSTRAINT ra_comments_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: ra_iap_assign_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_iap_assign
    ADD CONSTRAINT ra_iap_assign_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: ra_screen_fields_ra_screen_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_screen_fields
    ADD CONSTRAINT ra_screen_fields_ra_screen_key_fkey FOREIGN KEY (ra_screen_key) REFERENCES ra_screens(ra_screen_key);


--
-- Name: ra_screen_fields_ui_screen_name_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_screen_fields
    ADD CONSTRAINT ra_screen_fields_ui_screen_name_fkey FOREIGN KEY (ui_screen_name, ui_field_name) REFERENCES ui_screen_fields(ui_screen_name, ui_field_name);


--
-- Name: ra_screens_ra_application_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_screens
    ADD CONSTRAINT ra_screens_ra_application_key_fkey FOREIGN KEY (ra_application_key) REFERENCES ra_applications(ra_application_key);


--
-- Name: ra_server_principals_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_server_principals
    ADD CONSTRAINT ra_server_principals_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: ra_ui_application_registration_authority_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ra_ui_application
    ADD CONSTRAINT ra_ui_application_registration_authority_key_fkey FOREIGN KEY (registration_authority_key) REFERENCES registration_authority(registration_authority_key);


--
-- Name: security_question_answers_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY security_question_answers
    ADD CONSTRAINT security_question_answers_person_id_fkey FOREIGN KEY (person_id, userid) REFERENCES userid(person_id, userid);


--
-- Name: security_question_answers_sec_quest_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY security_question_answers
    ADD CONSTRAINT security_question_answers_sec_quest_key_fkey FOREIGN KEY (sec_quest_key) REFERENCES security_questions(sec_quest_key);


--
-- Name: security_question_answers_userid_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY security_question_answers
    ADD CONSTRAINT security_question_answers_userid_fkey FOREIGN KEY (userid, person_id) REFERENCES userid(userid, person_id);


--
-- Name: service_log_web_service_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY service_log
    ADD CONSTRAINT service_log_web_service_key_fkey FOREIGN KEY (web_service_key) REFERENCES web_service(web_service_key);


--
-- Name: spi_raserverprinc_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY server_principal_ip
    ADD CONSTRAINT spi_raserverprinc_fk FOREIGN KEY (ra_server_principal_key) REFERENCES ra_server_principals(ra_server_principal_key);


--
-- Name: ui_log_ui_application_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ui_log
    ADD CONSTRAINT ui_log_ui_application_key_fkey FOREIGN KEY (ui_application_key) REFERENCES ui_applications(ui_application_key);


--
-- Name: ui_screen_fields_ui_field_type_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ui_screen_fields
    ADD CONSTRAINT ui_screen_fields_ui_field_type_fkey FOREIGN KEY (ui_field_type) REFERENCES ui_field_types(ui_field_type);


--
-- Name: ui_screens_ui_application_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY ui_screens
    ADD CONSTRAINT ui_screens_ui_application_key_fkey FOREIGN KEY (ui_application_key) REFERENCES ui_applications(ui_application_key);


--
-- Name: user_comments_data_type_key_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY user_comments
    ADD CONSTRAINT user_comments_data_type_key_fkey FOREIGN KEY (data_type_key) REFERENCES data_types(data_type_key);


--
-- Name: user_comments_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY user_comments
    ADD CONSTRAINT user_comments_person_id_fkey FOREIGN KEY (person_id, userid) REFERENCES userid(person_id, userid);


--
-- Name: userid_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY userid
    ADD CONSTRAINT userid_person_id_fkey FOREIGN KEY (person_id) REFERENCES person(person_id);


--
-- Name: userid_policy_status_person_id_fkey; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY userid_policy_status
    ADD CONSTRAINT userid_policy_status_person_id_fkey FOREIGN KEY (person_id, userid) REFERENCES userid(person_id, userid);


--
-- Name: usersrvcstat_mec_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY user_service_status
    ADD CONSTRAINT usersrvcstat_mec_fk FOREIGN KEY (message_consumer_key) REFERENCES message_consumer(message_consumer_key);


--
-- Name: usersrvcstat_services_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY user_service_status
    ADD CONSTRAINT usersrvcstat_services_fk FOREIGN KEY (service_key) REFERENCES services(service_key);


--
-- Name: usersrvcstat_userid_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY user_service_status
    ADD CONSTRAINT usersrvcstat_userid_fk FOREIGN KEY (userid, person_id) REFERENCES userid(userid, person_id);


--
-- Name: wsa_cag_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY web_service_access
    ADD CONSTRAINT wsa_cag_fk FOREIGN KEY (cpr_access_groups_key) REFERENCES cpr_access_groups(cpr_access_groups_key);


--
-- Name: wsa_websrvc_fk; Type: FK CONSTRAINT; Schema: cpr; Owner: cpruser
--

ALTER TABLE ONLY web_service_access
    ADD CONSTRAINT wsa_websrvc_fk FOREIGN KEY (web_service_key) REFERENCES web_service(web_service_key);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

