/* SVN FILE: $Id: AffiliationsType.java 6987 2013-04-23 19:36:25Z llg5 $ */
package edu.psu.iam.cpr.core.database.types;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;
/**
 *
 * This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 United States License. To
 * view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/us/ or send a letter to Creative
 * Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.
 * Affiliations Type 
 * @package edu.psu.iam.cpr.core.database.types
 * @author $Author: llg5 $
 * @version $Rev: 6987 $
 * @lastrevision $Date: 2013-04-23 15:36:25 -0400 (Tue, 23 Apr 2013) $
 */

public enum AffiliationsType { 
	STUDENT_UNDERGRADUATE_PROSPECT(3),
	STUDENT_UNDERGRADUATE_APPLICANT(4),
	STUDENT_UNDERGRADUATE_CURRENT(5),
	STUDENT_UNDERGRADUATE_FORMER(6),
	STUDENT_GRADUATE_PROSPECT(8),
	STUDENT_GRADUATE_APPLICANT(9),
	STUDENT_GRADUATE_CURRENT(10),
	STUDENT_GRADUATE_FORMER(11),
	STUDENT_MEDICAL_PROSPECT(13),
	STUDENT_MEDICAL_APPLICANT(14),
	STUDENT_MEDICAL_CURRENT(15),
	STUDENT_MEDICAL_FORMER(16),
	STUDENT_LAW_PROSPECT(18),
	STUDENT_LAW_APPLICANT(19),
	STUDENT_LAW_CURRENT(20),
	STUDENT_LAW_FORMER(21),
	STUDENT_UNDERGRADUATE_NONDEGREE_PROSPECT(23),
	STUDENT_UNDERGRADUATE_NONDEGREE_APPLICANT(24),
	STUDENT_UNDERGRADUATE_NONDEGREE_CURRENT(25),
	STUDENT_UNDERGRADUATE_NONDEGREE_FORMER(26),
	STUDENT_UNDERGRADUATE_NONDEGREE_CERTIFICATE_PROSPECT(28),
	STUDENT_UNDERGRADUATE_NONDEGREE_CERTIFICATE_APPLICANT(29),
	STUDENT_UNDERGRADUATE_NONDEGREE_CERTIFICATE_CURRENT(30),
	STUDENT_UNDERGRADUATE_NONDEGREE_CERTIFICATE_FORMER(31),
	STUDENT_UNDERGRADUATE_PROVISIONAL_PROSPECT(33),
	STUDENT_UNDERGRADUATE_PROVISIONAL_APPLICANT(34),
	STUDENT_UNDERGRADUATE_PROVISIONAL_CURRENT(35),
	STUDENT_UNDERGRADUATE_PROVISIONAL_FORMER(36),
	STUDENT_GRADUATE_NONDEGREE_PROSPECT(38),
	STUDENT_GRADUATE_NONDEGREE_APPLICANT(39),
	STUDENT_GRADUATE_NONDEGREE_CURRENT(40),
	STUDENT_GRADUATE_NONDEGREE_FORMER(41),
	STUDENT_GRADUATE_CERTIFICATE_PROSPECT(43),
	STUDENT_GRADUATE_CERTIFICATE_APPLICANT(44),
	STUDENT_GRADUATE_CERTIFICATE_CURRENT(45),
	STUDENT_GRADUATE_CERTIFICATE_FORMER(46),
	STUDENT_GRADUATE_PROVISIONAL_PROSPECT(48),
	STUDENT_GRADUATE_PROVISIONAL_APPLICANT(49),
	STUDENT_GRADUATE_PROVISIONAL_CURRENT(50),
	STUDENT_GRADUATE_PROVISIONAL_FORMER(51),
	EMPLOYEE_FACULTY_ACTIVE(94),
	EMPLOYEE_FACULTY_APPLICANT(95),
	EMPLOYEE_FACULTY_DECEASED(96),
	EMPLOYEE_FACULTY_EMERITUS(97),
	EMPLOYEE_FACULTY_INACTIVE(98),
	EMPLOYEE_FACULTY_PENDING(99),
	EMPLOYEE_FACULTY_RETIRED(100),
	EMPLOYEE_FACULTY_TEMPREHIRE(101),
	EMPLOYEE_FACULTY_TERMINATED(102),
	EMPLOYEE_STAFF_ACTIVE(122),
	EMPLOYEE_STAFF_APPLICANT(123),
	EMPLOYEE_STAFF_DECEASED(124),
	EMPLOYEE_STAFF_EMERITUS(125),
	EMPLOYEE_STAFF_INACTIVE(126),
	EMPLOYEE_STAFF_PENDING(127),
	EMPLOYEE_STAFF_RETIRED(128),
	EMPLOYEE_STAFF_TEMPREHIRE(129),
	EMPLOYEE_STAFF_TERMINATED(130),
	EMPLOYEE_TECHNICAL_SERVICES_ACTIVE(132),
	EMPLOYEE_TECHNICAL_SERVICES_APPLICANT(133),
	EMPLOYEE_TECHNICAL_SERVICES_DECEASED(134),
	EMPLOYEE_TECHNICAL_SERVICES_EMERITUS(135),
	EMPLOYEE_TECHNICAL_SERVICES_INACTIVE(136),
	EMPLOYEE_TECHNICAL_SERVICES_PENDING(137),
	EMPLOYEE_TECHNICAL_SERVICES_RETIRED(138),
	EMPLOYEE_TECHNICAL_SERVICES_TERMINATED(139),
	UNIVERSITY_SERVICES_ACTIVE(177),
	UNIVERSITY_SERVICES_INACTIVE(178),
	MEMBER(188),
	STUDENT(226),
	STAFF(227),
	FACULTY(228),
	RETIREE(229),
	EMPLOYEE(230),
	EMERITUS(231);

/**
 * Contains the index
 */

    private long index;

/**
 * @param index
 */

  private AffiliationsType(long index) {
        this.index = index;
    }


/**
 * Return the value of the enum 
 * @return index
 */

  public long index() {
      return index;
    }
/**
 * 
 */

  private static final Map<Long, AffiliationsType> lookup = new HashMap<Long, AffiliationsType>();
  static{
      for (AffiliationsType p : EnumSet.allOf(AffiliationsType.class)) {
          lookup.put(p.index(),p);
      }
  }
/**
 * @param index
 * @return enum
 */

  public static AffiliationsType get(long index) {
      return lookup.get(index);
  }
}
