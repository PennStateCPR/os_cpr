/**
 * 
 */
package edu.psu.iam.cpr.core.tests;

import static org.junit.Assert.*;

import org.junit.Test;

import edu.psu.iam.cpr.core.database.Database;
import edu.psu.iam.cpr.core.database.TestSessionFactoryUtil;
import edu.psu.iam.cpr.core.database.beans.EmailAddress;
import edu.psu.iam.cpr.core.database.tables.EmailAddressTable;
import edu.psu.iam.cpr.core.database.types.EmailAddressType;
import edu.psu.iam.cpr.core.error.CprException;
import edu.psu.iam.cpr.core.error.GeneralDatabaseException;

/**
 * @author jvuccolo
 *
 */
public class EmailAddressTableTest {
	
	private static Database db = new Database();
	public static void openDbConnection() throws GeneralDatabaseException {
		db.openSession(TestSessionFactoryUtil.getSessionFactory());
	}


	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#EmailAddressTable()}.
	 */
	@Test
	public final void testEmailAddressTable() {
		new EmailAddressTable();
	}

	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#EmailAddressTable(int, java.lang.String, java.lang.String, java.lang.String)}.
	 * @throws Exception 
	 */
	@Test
	public final void testEmailAddressTableIntStringStringString() throws Exception {
		new EmailAddressTable(0, "OTHER_EMAIL", "xyz123@psu.edu", "Y");
	}
	
	@Test
	public final void testEmailAddressTableIntStringStringString1() throws Exception {
		new EmailAddressTable(0, "OTHER_EMAIL", "Y");
	}


	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#getEmailAddressType()}.
	 */
	@Test
	public final void testGetEmailAddressType() {
		EmailAddressTable t = new EmailAddressTable();
		t.setEmailAddressType(EmailAddressType.OTHER_EMAIL);
		assertEquals(t.getEmailAddressType(), EmailAddressType.OTHER_EMAIL);
	}

	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#setEmailAddressType(edu.psu.iam.cpr.core.database.types.EmailAddressType)}.
	 */
	@Test
	public final void testSetEmailAddressTypeEmailAddressType() {
		EmailAddressTable t = new EmailAddressTable();
		t.setEmailAddressType(EmailAddressType.OTHER_EMAIL);
		assertEquals(t.getEmailAddressType(), EmailAddressType.OTHER_EMAIL);
	}

	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#setEmailAddressType(java.lang.String)}.
	 * @throws Exception 
	 */
	@Test(expected=Exception.class)
	public final void testSetEmailAddressTypeString1() throws Exception {
		EmailAddressTable t = new EmailAddressTable();
		t.setEmailAddressType("blah");
	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#setEmailAddressType(java.lang.String)}.
	 * @throws Exception 
	 */
	@Test
	public final void testSetEmailAddressTypeString2() throws Exception {
		EmailAddressTable t = new EmailAddressTable();
		t.setEmailAddressType("OTHER_EMAIL");
		assertEquals(t.getEmailAddressType(), EmailAddressType.OTHER_EMAIL);
	}

	@Test
	public final void testGetEmailAddressBean() {
		EmailAddress bean = new EmailAddress();
		EmailAddressTable t = new EmailAddressTable();
		t.setEmailAddressBean(bean);
		assertEquals(t.getEmailAddressBean(),bean);
	}
	
	@Test(expected=Exception.class)
	public final void testAddAddress0() throws Exception {
		EmailAddressTable t = new EmailAddressTable();
		t.addAddress(null);
	}
	
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#addAddress()}.
	 * @throws Exception 
	 */
	@Test(expected=Exception.class)
	public final void testAddAddress1() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(0,"home_email","zy1@psu.edu","jvuccolo");
		t.addAddress(db);
		db.closeSession();
	}
	
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#addAddress()}.
	 * @throws Exception 
	 */
	@Test
	public final void testAddAddress2() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100000,"OTHER_EMAIL","zy12@psu.edu","jvuccolo");
		t.addAddress(db);
		db.closeSession();
	}
	
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#addAddress()}.
	 * @throws Exception 
	 */
	@Test
	public final void testAddAddress3() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100020,"OTHER_EMAIL","zy12@psu.edu","jvuccolo");
		t.addAddress(db);
		db.closeSession();
	}
	

	@Test(expected=Exception.class)
	public final void testUpdateAddress0() throws Exception {
		EmailAddressTable t = new EmailAddressTable();
		t.updateAddress(null);

	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#updateAddress()}.
	 * @throws Exception 
	 */
	@Test(expected=Exception.class)
	public final void testUpdateAddress1() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(0,"home_email","zy1@psu.edu","jvuccolo");
		t.updateAddress(db);
		db.closeSession();

	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#updateAddress()}.
	 * @throws Exception 
	 */
	@Test
	public final void testUpdateAddress2() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100020,"other_email","zy12@psu.edu","jvuccolo");
		t.updateAddress(db);
		db.closeSession();

	}

	@Test(expected=Exception.class)
	public final void testSetPrimaryEmailAddress0() throws Exception {
		EmailAddressTable t = new EmailAddressTable();
		t.setPrimaryEmailAddress(null);
	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#setPrimaryEmailAddress()}.
	 * @throws Exception 
	 */
	@Test(expected=Exception.class)
	public final void testSetPrimaryEmailAddress1() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(0,"other_email1",null,"jvuccolo");
		t.setPrimaryEmailAddress(db);
		db.closeSession();
	}

	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#setPrimaryEmailAddress()}.
	 * @throws Exception 
	 */
	@Test
	public final void testSetPrimaryEmailAddress2() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100022,"other_email","xyz123@psu.edu","jvuccolo");
		t.addAddress(db);
		t = new EmailAddressTable(100022,"other_email","xyz123@psu.edu","jvuccolo");
		t.addAddress(db);
		t.setPrimaryEmailAddress(db);
		db.closeSession();
	}

	@Test(expected=Exception.class)
	public final void testGetEmailAddressForPersonId0() throws GeneralDatabaseException, CprException  {
		EmailAddressTable e = new EmailAddressTable();
		e.getEmailAddressForPersonId(null,0);
	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#getEmailAddressForPersonId(int)}.
	 * @throws GeneralDatabaseException 
	 * @throws CprException 
	 */
	@Test
	public final void testGetEmailAddressForPersonId1() throws GeneralDatabaseException, CprException {
		openDbConnection();
		EmailAddressTable e = new EmailAddressTable();
		e.getEmailAddressForPersonId(db,0);
		db.closeSession();
	}
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#getEmailAddressForPersonId(int)}.
	 * @throws GeneralDatabaseException 
	 * @throws CprException 
	 */
	@Test
	public final void testGetEmailAddressForPersonId2() throws GeneralDatabaseException, CprException {
		openDbConnection();
		EmailAddressTable e = new EmailAddressTable();
		e.getEmailAddressForPersonId(db,100000);
		db.closeSession();
	}
	
	/**
	 * Test method for {@link edu.psu.iam.cpr.core.database.tables.EmailAddressTable#getEmailAddressForPersonId(int)}.
	 * @throws GeneralDatabaseException 
	 * @throws CprException 
	 */
	@Test
	public final void testGetEmailAddressForPersonId3() throws GeneralDatabaseException, CprException {
		openDbConnection();
		EmailAddressTable e = new EmailAddressTable();
		e.getEmailAddressForPersonId(db,1000);
		db.closeSession();
	}
	
	@Test(expected=CprException.class)
	public final void testDeleteEmailAddress1() throws GeneralDatabaseException, CprException {
		EmailAddressTable t = new EmailAddressTable();
		t.archiveEmailAddress(db);
	}
	
	@Test(expected=Exception.class)
	public final void testDeleteEmailAddress2() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100002,"home_email","jvuccolo");
		t.archiveEmailAddress(db);
		db.closeSession();
	}
	
	@Test
	public final void testDeleteEmailAddress3() throws Exception {
		openDbConnection();
		EmailAddressTable t = new EmailAddressTable(100022,"other_email","jvuccolo");
		t.archiveEmailAddress(db);
		db.closeSession();
	}
	

}
