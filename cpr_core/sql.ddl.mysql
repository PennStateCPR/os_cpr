# Converted with pg2mysql-1.9
# Converted on Mon, 24 Feb 2014 11:44:21 -0500
# Lightbox Technologies Inc. http://www.lightbox.ca

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone="+00:00";

DROP DATABASE IF EXISTS `cpr`;

CREATE DATABASE `cpr` DEFAULT CHARACTER SET UTF8;

USE `cpr`;

CREATE TABLE academic_college_cs (
    college_code varchar(2) NOT NULL,
    college_name varchar(100) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE academic_department_cs (
    department_code varchar(5) NOT NULL,
    department_name varchar(100) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE address_staging (
    address_staging_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    data_type_key int(11) NOT NULL,
    campus_code_key int(11),
    campus_code varchar(2),
    country_key int(11),
    country_code_two varchar(2),
    country_code_three varchar(3),
    province varchar(40),
    address1 varchar(100),
    address2 varchar(100),
    address3 varchar(100),
    city varchar(40),
    state varchar(2),
    postal_code varchar(20),
    address_match_code varchar(60),
    city_match_code varchar(60),
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`address_staging_key`)
) ENGINE=INNODB;

CREATE TABLE addresses (
    address_key int(11) auto_increment NOT NULL,
    address1 varchar(60),
    address2 varchar(60),
    address3 varchar(60),
    address_match_code varchar(60),
    campus_code_key int(11),
    city varchar(40),
    city_match_code varchar(60),
    country_key int(11),
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    document_type_key int(11),
    end_date timestamp,
    group_id int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    postal_code varchar(20),
    primary_flag varchar(1) NOT NULL,
    province varchar(40),
    start_date timestamp NOT NULL,
    state varchar(2),
    validate_attempted_on timestamp,
    verified_flag varchar(1) NOT NULL,
    do_not_verify_flag varchar(1) NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`address_key`)
) ENGINE=INNODB;

CREATE TABLE aff_transition_rules (
    aff_transition_rule_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    current_affiliation_key int(11),
    expire_flag varchar(1) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    request_affiliation_key int(11) NOT NULL,
    result_affiliation_key int(11) NOT NULL
, PRIMARY KEY(`aff_transition_rule_key`)
) ENGINE=INNODB;

CREATE TABLE affiliations (
    affiliation_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    affiliation varchar(40) NOT NULL,
    affiliation_desc varchar(200) NOT NULL,
    can_assign_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    enum_string varchar(200),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    parent_affiliation_key int(11)
, PRIMARY KEY(`affiliation_key`)
) ENGINE=INNODB;

CREATE TABLE allowed_char_part (
    char_part varchar(30) NOT NULL
) ENGINE=INNODB;

CREATE TABLE allowed_num_part (
    num_part int(11) NOT NULL
) ENGINE=INNODB;

CREATE TABLE answer_group (
    answer_group_key int(11) auto_increment NOT NULL,
    answer_method varchar(30) NOT NULL,
    default_selection varchar(100),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`answer_group_key`)
) ENGINE=INNODB;

CREATE TABLE application_properties (
    ui_application_key int(11) NOT NULL,
    key_name varchar(200) NOT NULL,
    key_value varchar(200) NOT NULL,
    active_flag varchar(1) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE appointment_cs (
    appt_code varchar(3) NOT NULL,
    appt_desc varchar(40),
    appt_source varchar(4) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE bad_prefixes (
    char_part varchar(3) NOT NULL
) ENGINE=INNODB;

CREATE TABLE campus_cs (
    campus_code_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    campus varchar(60) NOT NULL,
    campus_code varchar(2) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`campus_code_key`)
) ENGINE=INNODB;

CREATE TABLE change_notification_types (
    change_notification_types_key int(11) auto_increment NOT NULL,
    notification_type varchar(60) NOT NULL,
    notification_desc varchar(100) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`change_notification_types_key`)
) ENGINE=INNODB;

CREATE TABLE change_notifications (
    change_notifications_key int(11) auto_increment NOT NULL,
    message_consumer_key int(11) NOT NULL,
    change_notification_types_key int(11) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`change_notifications_key`)
) ENGINE=INNODB;

CREATE TABLE citizenship_cs (
    citizenship int(11) auto_increment NOT NULL,
    description varchar(128) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`citizenship`)
) ENGINE=INNODB;

CREATE TABLE confidentiality (
    confidentiality_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`confidentiality_key`)
) ENGINE=INNODB;

CREATE TABLE country (
    country_key int(11) auto_increment NOT NULL,
    country varchar(60) NOT NULL,
    country_code_four varchar(4),
    country_code_three varchar(3) NOT NULL,
    country_code_two varchar(2) NOT NULL,
    country_full_name varchar(100) NOT NULL,
    country_numeric_code varchar(3),
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    remarks text,
    start_date timestamp,
    us_territory_flag varchar(1) NOT NULL
, PRIMARY KEY(`country_key`)
) ENGINE=INNODB;

CREATE TABLE country_map (
    country_key int(11) NOT NULL,
    alpha2 varchar(2),
    alpha3 varchar(3),
    code2 varchar(2),
    code3 varchar(3),
    country varchar(50),
    country_map_key int(11),
    iso_key int(11),
    short_name varchar(50)
) ENGINE=INNODB;

CREATE TABLE cpr_access_groups (
    cpr_access_groups_key int(11) auto_increment NOT NULL,
    ra_server_principal_key int(11) NOT NULL,
    access_group varchar(60) NOT NULL,
    suspend_flag varchar(1) DEFAULT 'Y',
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`cpr_access_groups_key`)
) ENGINE=INNODB;

CREATE TABLE cpr_component_status (
    cpr_component_status_key int(11) auto_increment NOT NULL,
    active_flag varchar(1),
    cpr_component varchar(60),
    cpr_component_desc varchar(200) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`cpr_component_status_key`)
) ENGINE=INNODB;

CREATE TABLE credential (
    credential_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    credential_data varchar(100) NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`credential_key`)
) ENGINE=INNODB;

CREATE TABLE data_element_doc_types (
    data_element_doc_type_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_element_type_key int(11) NOT NULL,
    document_type_key int(11),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`data_element_doc_type_key`)
) ENGINE=INNODB;

CREATE TABLE data_element_types (
    data_element_type_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    iap_data_element_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`data_element_type_key`)
) ENGINE=INNODB;

CREATE TABLE data_types (
    data_type_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    can_assign_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type varchar(50) NOT NULL,
    data_type_desc varchar(200),
    enum_string varchar(200),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    parent_data_type_key int(11)
, PRIMARY KEY(`data_type_key`)
) ENGINE=INNODB;

CREATE TABLE database_log (
    database_log_key int(11) auto_increment NOT NULL,
    entry_timestamp timestamp NOT NULL,
    entry_type varchar(5) NOT NULL,
    instance_number int(11),
    output_string text,
    package_name varchar(30) NOT NULL,
    program_name varchar(30) NOT NULL,
    request_duration int(11),
    request_userid varchar(30)
, PRIMARY KEY(`database_log_key`)
) ENGINE=INNODB;

CREATE TABLE date_of_birth (
    date_of_birth_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    dob timestamp,
    dob_char varchar(8),
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`date_of_birth_key`)
) ENGINE=INNODB;

CREATE TABLE email_address (
    email_address_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    email_address text NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`email_address_key`)
) ENGINE=INNODB;

CREATE TABLE email_notification (
    mail_notification_key int(11) auto_increment NOT NULL,
    email_subject varchar(100) NOT NULL,
    text_body text NOT NULL,
    html_body text NOT NULL,
    notification_process varchar(100) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`mail_notification_key`)
) ENGINE=INNODB;

CREATE TABLE employee (
    employee_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    appt_code varchar(3),
    campus_code_key int(11),
    status_code varchar(3),
    class_code varchar(4),
    primary_appt_flag varchar(1) DEFAULT 'N',
    show_in_directory_flag varchar(1) DEFAULT 'N',
    visa_type varchar(6),
    benefits_rate varchar(1),
    hire_date timestamp,
    terminated_date timestamp,
    last_date_paid timestamp,
    pay_freq_code varchar(4),
    layoff_flag varchar(1) DEFAULT 'N',
    department varchar(80),
    admin_area varchar(50),
    admin_area_code varchar(10),
    student_status varchar(1),
    special_status varchar(1),
    job_title varchar(80),
    alternate_job_title varchar(128),
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`employee_key`)
) ENGINE=INNODB;

CREATE TABLE employee_class_cs (
    class_code varchar(4) NOT NULL,
    class_desc varchar(40),
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE employee_hist (
    employee_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    appt_code varchar(3),
    campus_code_key int(11),
    status_code varchar(3),
    class_code varchar(4),
    primary_appt_flag varchar(1) DEFAULT 'N',
    show_in_directory_flag varchar(1) DEFAULT 'N',
    visa_type varchar(6),
    benefits_rate varchar(1),
    hire_date timestamp,
    terminated_date timestamp,
    last_date_paid timestamp,
    pay_freq_code varchar(4),
    layoff_flag varchar(1) DEFAULT 'N',
    department varchar(80),
    admin_area varchar(50),
    admin_area_code varchar(10),
    student_status varchar(1),
    special_status varchar(1),
    job_title varchar(80),
    alternate_job_title varchar(128),
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE employee_status_cs (
    status_code varchar(3) NOT NULL,
    status_desc varchar(40),
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE event_triggers (
    event_trigger_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    enum_string varchar(30) NOT NULL,
    event_trigger varchar(30) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`event_trigger_key`)
) ENGINE=INNODB;

CREATE TABLE ext_affiliation (
    ext_affiliation_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    ext_affiliation varchar(30) NOT NULL,
    ext_affiliation_desc varchar(150) NOT NULL,
    ext_affiliation_type_key int(11) NOT NULL,
    last_update_by varchar(30),
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`ext_affiliation_key`)
) ENGINE=INNODB;

CREATE TABLE ext_affiliation_mapping (
    ext_affiliation_mapping_key int(11) auto_increment NOT NULL,
    affiliation_key int(11) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    ext_affiliation_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`ext_affiliation_mapping_key`)
) ENGINE=INNODB;

CREATE TABLE ext_affiliation_types (
    ext_affiliation_type_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    ext_affiliation_type varchar(30) NOT NULL,
    ext_affiliation_type_desc text NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`ext_affiliation_type_key`)
) ENGINE=INNODB;

CREATE TABLE external_iap (
    external_iap_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    external_iap varchar(30) NOT NULL,
    external_iap_desc varchar(150) NOT NULL,
    external_iap_url varchar(200),
    federation_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`external_iap_key`)
) ENGINE=INNODB;

CREATE TABLE federation (
    federation_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    federation varchar(30) NOT NULL,
    federation_desc varchar(100) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`federation_key`)
) ENGINE=INNODB;

CREATE TABLE generated_identity (
    generated_identity_key int(11) auto_increment NOT NULL,
    char_part varchar(30),
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    generated_identity varchar(30) NOT NULL,
    num_part int(11),
    person_id int(11) NOT NULL,
    set_id int(11) NOT NULL
, PRIMARY KEY(`generated_identity_key`)
) ENGINE=INNODB;

CREATE TABLE group_data_type_access (
    group_data_type_access_key int(11) auto_increment NOT NULL,
    cpr_access_groups_key int(11) NOT NULL,
    data_type_key int(11) NOT NULL,
    read_flag varchar(1) DEFAULT 'N',
    write_flag varchar(1) DEFAULT 'N',
    archive_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`group_data_type_access_key`)
) ENGINE=INNODB;

CREATE TABLE group_member_comments (
    group_member_comment_key int(11) auto_increment NOT NULL,
    comments text NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    group_member_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`group_member_comment_key`)
) ENGINE=INNODB;

CREATE TABLE group_members (
    group_member_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    userid varchar(30) NOT NULL,
    cpr_access_groups_key int(11) NOT NULL,
    suspend_flag varchar(1) DEFAULT 'Y',
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`group_member_key`)
) ENGINE=INNODB;

CREATE TABLE iap (
    iap_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    iap varchar(30) NOT NULL,
    iap_desc varchar(100) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`iap_key`)
) ENGINE=INNODB;

CREATE TABLE iap_data_element (
    iap_data_element_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    iap_data_element varchar(60) NOT NULL,
    iap_data_element_desc text NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`iap_data_element_key`)
) ENGINE=INNODB;

CREATE TABLE iap_document (
    iap_document_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    document_type_key int(11) NOT NULL,
    end_date timestamp,
    iap_document_issuer varchar(100) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`iap_document_key`)
) ENGINE=INNODB;

CREATE TABLE iap_ext_mapping (
    iap_ext_mapping_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    external_iap_key int(11) NOT NULL,
    iap_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    mapping_url varchar(200),
    start_date timestamp NOT NULL
, PRIMARY KEY(`iap_ext_mapping_key`)
) ENGINE=INNODB;

CREATE TABLE iap_rules (
    iap_rule_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    iap_data_element_key int(11) NOT NULL,
    iap_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    required_flag varchar(1) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`iap_rule_key`)
) ENGINE=INNODB;

CREATE TABLE id_card_print_log (
    id_card_print_log_key int(11) auto_increment NOT NULL,
    person_id_card_key int(11) NOT NULL,
    printed_by varchar(30) NOT NULL,
    printed_on timestamp NOT NULL,
    work_station_ip_address varchar(50) NOT NULL,
    work_station_name varchar(30) NOT NULL
, PRIMARY KEY(`id_card_print_log_key`)
) ENGINE=INNODB;

CREATE TABLE identifier_type (
    type_key int(11) auto_increment NOT NULL,
    type_name varchar(50) NOT NULL,
    type_desc varchar(200),
    can_assign_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`type_key`)
) ENGINE=INNODB;

CREATE TABLE irs_country (
    irs_country_key int(11) auto_increment NOT NULL,
    country_key int(11) NOT NULL,
    irs_country_code varchar(2) NOT NULL,
    start_date timestamp,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`irs_country_key`)
) ENGINE=INNODB;

CREATE TABLE java_exceptions (
    java_exception_key int(11) auto_increment NOT NULL,
    created_on timestamp NOT NULL,
    java_exception_enum varchar(50) NOT NULL,
    java_exception_text varchar(100) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`java_exception_key`)
) ENGINE=INNODB;

CREATE TABLE major_cs (
    major_code varchar(20) NOT NULL,
    major_name varchar(100),
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE match_results (
    match_set_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    score int(11) NOT NULL
, PRIMARY KEY(`match_set_key`)
) ENGINE=INNODB;

CREATE TABLE mc_warning_notifications (
    mc_warning_notification_key int(11) auto_increment NOT NULL,
    message_consumer_key int(11) NOT NULL,
    event_trigger_key int(11) NOT NULL,
    entry_timestamp timestamp NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp
, PRIMARY KEY(`mc_warning_notification_key`)
) ENGINE=INNODB;

CREATE TABLE message_consumer (
    message_consumer_key int(11) auto_increment NOT NULL,
    consumer varchar(50) NOT NULL,
    consumer_reg_date timestamp NOT NULL,
    consumer_email text,
    suspend_flag varchar(1) DEFAULT 'Y',
    consumer_destination varchar(128),
    destination_type varchar(30),
    maximum_retries int(11),
    retry_interval int(11),
    maximum_failure int(11),
    maximum_destination_size int(11),
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`message_consumer_key`)
) ENGINE=INNODB;

CREATE TABLE message_consumer_mapping (
    msg_con_mapping_key int(11) auto_increment NOT NULL,
    message_consumer_key int(11) NOT NULL,
    service_key int(11) NOT NULL,
    web_service_key int(11) NOT NULL,
    max_days_provisioned int(11),
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`msg_con_mapping_key`)
) ENGINE=INNODB;

CREATE TABLE message_log (
    message_log_key int(11) auto_increment NOT NULL,
    web_service_key int(11) NOT NULL,
    message_consumer_key int(11) NOT NULL,
    service_key int(11) NOT NULL,
    message_sent text,
    number_of_tries int(11) NOT NULL,
    success_flag varchar(1) DEFAULT 'N',
    request_userid varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`message_log_key`)
) ENGINE=INNODB;

CREATE TABLE message_log_history (
    message_log_history_key int(11) auto_increment NOT NULL,
    message_log_key int(11) NOT NULL,
    message_sent_timestamp timestamp NOT NULL,
    message_id varchar(100),
    message_received_timestamp timestamp,
    message_received text,
    error_code varchar(100),
    error_message text,
    try_number int(11),
    last_update_on timestamp NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`message_log_history_key`)
) ENGINE=INNODB;

CREATE TABLE names (
    name_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    document_type_key int(11),
    end_date timestamp,
    first_name varchar(60),
    last_name varchar(60),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    middle_names varchar(60),
    name_match_code varchar(60),
    nickname varchar(40),
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    suffix varchar(30),
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`name_key`)
) ENGINE=INNODB;

CREATE TABLE names_staging (
    name_staging_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    first_name varchar(60),
    middle_names varchar(60),
    last_name varchar(60),
    suffix varchar(30),
    name_match_code varchar(60),
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`name_staging_key`)
) ENGINE=INNODB;

CREATE TABLE pay_frequency_cs (
    pay_freq_code varchar(4) NOT NULL,
    pay_freq_desc varchar(40),
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE person (
    person_id int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`person_id`)
) ENGINE=INNODB;

CREATE TABLE person_affiliation (
    person_affiliation_key int(11) auto_increment NOT NULL,
    affiliation_key int(11) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    exception_comments text,
    exception_flag varchar(1) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    primary_flag varchar(1) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`person_affiliation_key`)
) ENGINE=INNODB;

CREATE TABLE person_citizenship (
    person_citizenship_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    citizenship int(11) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`person_citizenship_key`)
) ENGINE=INNODB;

CREATE TABLE person_gender (
    person_gender_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`person_gender_key`)
) ENGINE=INNODB;

CREATE TABLE person_iap_data (
    person_iap_data_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_element_doc_type_key int(11) NOT NULL,
    iap_data_value_key int(11) NOT NULL,
    iap_document_key int(11) NOT NULL,
    person_iap_vp_key int(11) NOT NULL
, PRIMARY KEY(`person_iap_data_key`)
) ENGINE=INNODB;

CREATE TABLE person_iap_vp (
    person_iap_vp_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    group_member_key int(11) NOT NULL,
    iap_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    registration_authority_key int(11) NOT NULL,
    userid varchar(30) NOT NULL,
    vp_date timestamp NOT NULL
, PRIMARY KEY(`person_iap_vp_key`)
) ENGINE=INNODB;

CREATE TABLE person_id_card (
    person_id_card_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    id_card_number varchar(30) NOT NULL,
    id_serial_number varchar(30),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`person_id_card_key`)
) ENGINE=INNODB;

CREATE TABLE person_identifier (
    person_identifier_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    type_key int(11) NOT NULL,
    identifier_value varchar(100) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL
, PRIMARY KEY(`person_identifier_key`)
) ENGINE=INNODB;

CREATE TABLE person_linkage (
    person_linkage_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    linked_person_id int(11) NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`person_linkage_key`)
) ENGINE=INNODB;

CREATE TABLE person_photo (
    person_photo_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    date_taken timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    photo BLOB NOT NULL
, PRIMARY KEY(`person_photo_key`)
) ENGINE=INNODB;

CREATE TABLE person_userid_iap (
    person_userid_iap_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    iap_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    userid varchar(30) NOT NULL
, PRIMARY KEY(`person_userid_iap_key`)
) ENGINE=INNODB;

CREATE TABLE phones (
    phone_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    extension varchar(40),
    group_id int(11) NOT NULL,
    international_number_flag varchar(1),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    phone_number varchar(40) NOT NULL,
    primary_flag varchar(1) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`phone_key`)
) ENGINE=INNODB;

CREATE TABLE photo_id_issuer (
    photo_id_issuer_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    photo_id_issuer varchar(50) NOT NULL,
    photo_id_issuer_desc varchar(100) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`photo_id_issuer_key`)
) ENGINE=INNODB;

CREATE TABLE photo_id_issuer_data_type (
    photo_id_issuer_data_type_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    photo_id_issuer_key int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`photo_id_issuer_data_type_key`)
) ENGINE=INNODB;

CREATE TABLE policies (
    policy_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    policy_name varchar(100) NOT NULL,
    policy_text text NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`policy_key`)
) ENGINE=INNODB;

CREATE TABLE psu_directory (
    psu_directory_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    userid varchar(30)
, PRIMARY KEY(`psu_directory_key`)
) ENGINE=INNODB;

CREATE TABLE psu_id (
    psu_id_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    psu_id varchar(20) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp
, PRIMARY KEY(`psu_id_key`)
) ENGINE=INNODB;

CREATE TABLE psu_id_exceptions (
    psu_id varchar(20) NOT NULL
) ENGINE=INNODB;

CREATE TABLE ra_affiliation (
    ra_affiliation_key int(11) auto_increment NOT NULL,
    affiliation_key int(11) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    registration_authority_key int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`ra_affiliation_key`)
) ENGINE=INNODB;

CREATE TABLE ra_application_properties (
    ra_application_properties_key int(11) auto_increment NOT NULL,
    ra_application_key int(11) NOT NULL,
    ui_application_key int(11) NOT NULL,
    key_name varchar(200) NOT NULL,
    key_value varchar(200) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`ra_application_properties_key`)
) ENGINE=INNODB;

CREATE TABLE ra_applications (
    ra_application_key int(11) auto_increment NOT NULL,
    ui_application_key int(11) NOT NULL,
    registration_authority_key int(11) NOT NULL,
    suspend_flag varchar(1) DEFAULT 'Y',
    allow_ssn_collection_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`ra_application_key`)
) ENGINE=INNODB;

CREATE TABLE ra_comments (
    ra_comment_key int(11) auto_increment NOT NULL,
    comments text NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp,
    registration_authority_key int(11) NOT NULL
, PRIMARY KEY(`ra_comment_key`)
) ENGINE=INNODB;

CREATE TABLE ra_iap_assign (
    ra_iap_assign_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    iap_key int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    registration_authority_key int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`ra_iap_assign_key`)
) ENGINE=INNODB;

CREATE TABLE ra_screen_fields (
    ra_screen_field_key int(11) auto_increment NOT NULL,
    ra_screen_key int(11) NOT NULL,
    ui_screen_name varchar(30) NOT NULL,
    ui_field_name varchar(30) NOT NULL,
    required_flag varchar(1) DEFAULT 'Y',
    display_flag varchar(1) DEFAULT 'Y',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`ra_screen_field_key`)
) ENGINE=INNODB;

CREATE TABLE ra_screens (
    ra_screen_key int(11) auto_increment NOT NULL,
    ra_application_key int(11) NOT NULL,
    ui_screen_name varchar(30) NOT NULL,
    ra_screen_order int(11) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`ra_screen_key`)
) ENGINE=INNODB;

CREATE TABLE ra_server_principals (
    ra_server_principal_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    ra_server_principal varchar(128) NOT NULL,
    registration_authority_key int(11) NOT NULL,
    start_date timestamp NOT NULL
, PRIMARY KEY(`ra_server_principal_key`)
) ENGINE=INNODB;

CREATE TABLE ra_ui_application (
    ra_ui_application_key int(11) auto_increment NOT NULL,
    application_desc text NOT NULL,
    application_name varchar(200) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    registration_authority_key int(11) NOT NULL,
    suspend_flag varchar(1) NOT NULL
, PRIMARY KEY(`ra_ui_application_key`)
) ENGINE=INNODB;

CREATE TABLE registration_authority (
    registration_authority_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    ra_contact_key int(11) NOT NULL,
    registration_authority varchar(60) NOT NULL,
    registration_authority_desc varchar(100) NOT NULL,
    start_date timestamp NOT NULL,
    suspend_flag varchar(1) NOT NULL,
    assign_psuid_flag varchar(1) NOT NULL,
    assign_userid_flag varchar(1) NOT NULL,
    collect_ssn_flag varchar(1) NOT NULL
, PRIMARY KEY(`registration_authority_key`)
) ENGINE=INNODB;

CREATE TABLE security_question_answers (
    sec_quest_answer_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    userid varchar(30) NOT NULL,
    sec_quest_key int(11) NOT NULL,
    sec_quest_group_key int(11) NOT NULL,
    answer varchar(100) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`sec_quest_answer_key`)
) ENGINE=INNODB;

CREATE TABLE security_questions (
    sec_quest_key int(11) auto_increment NOT NULL,
    sec_quest_group_key int(11) NOT NULL,
    question varchar(100) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`sec_quest_key`)
) ENGINE=INNODB;

CREATE TABLE semesters (
    semester_code varchar(8) NOT NULL,
    semester_desc varchar(20) NOT NULL,
    sem_start_date timestamp NOT NULL,
    sem_end_date timestamp NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE server_principal_ip (
    server_principal_ip_key int(11) auto_increment NOT NULL,
    ra_server_principal_key int(11) NOT NULL,
    ip_address varchar(50) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`server_principal_ip_key`)
) ENGINE=INNODB;

CREATE TABLE service_log (
    service_log_key int(11) auto_increment NOT NULL,
    ip_address varchar(50),
    request_duration int(11),
    request_end timestamp,
    request_start timestamp NOT NULL,
    request_string text,
    request_userid varchar(30),
    result_string text,
    web_service_key int(11) NOT NULL
, PRIMARY KEY(`service_log_key`)
) ENGINE=INNODB;

CREATE TABLE services (
    service_key int(11) auto_increment NOT NULL,
    active_flag varchar(1) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    days_service_active int(11),
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    service_name varchar(100) NOT NULL
, PRIMARY KEY(`service_key`)
) ENGINE=INNODB;

CREATE TABLE student (
    student_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    campus_code_key int(11),
    registration_status varchar(6),
    academic_level varchar(2),
    year_term varchar(2),
    graduating_flag varchar(1) DEFAULT 'N',
    sem_loa_start varchar(8),
    sem_loa_end varchar(8),
    dorm_location varchar(4),
    class_load varchar(1),
    student_aid_flag varchar(1) DEFAULT 'N',
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`student_key`)
) ENGINE=INNODB;

CREATE TABLE student_academic_college (
    student_academic_college_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    college_code varchar(2) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`student_academic_college_key`)
) ENGINE=INNODB;

CREATE TABLE student_academic_college_hist (
    student_academic_college_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    college_code varchar(2) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE student_academic_department (
    student_academic_dept_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    department_code varchar(5) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`student_academic_dept_key`)
) ENGINE=INNODB;

CREATE TABLE student_academic_dept_hist (
    student_academic_dept_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    department_code varchar(5) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE student_hist (
    student_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    campus_code_key int(11),
    registration_status varchar(6),
    academic_level varchar(2),
    year_term varchar(2),
    graduating_flag varchar(1) DEFAULT 'N',
    sem_loa_start varchar(8),
    sem_loa_end varchar(8),
    dorm_location varchar(4),
    class_load varchar(1),
    student_aid_flag varchar(1) DEFAULT 'N',
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE student_major (
    student_major_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    major_code varchar(20) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`student_major_key`)
) ENGINE=INNODB;

CREATE TABLE student_major_hist (
    student_major_key int(11) NOT NULL,
    person_id int(11) NOT NULL,
    semester_code varchar(8) NOT NULL,
    major_code varchar(20) NOT NULL,
    rank int(11) NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    import_from varchar(30),
    import_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE student_status_cs (
    status_code varchar(6) NOT NULL,
    status_desc varchar(128) NOT NULL,
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE trans_cidr (
    trans_cidr_key int(11) auto_increment NOT NULL,
    psu_id varchar(9) NOT NULL,
    `status` varchar(4) NOT NULL,
    affiliate varchar(8),
    street1 varchar(40),
    street2 varchar(40),
    city varchar(35),
    state varchar(2),
    zip varchar(9),
    country varchar(3),
    dob varchar(8),
    gender varchar(1),
    first_name varchar(25),
    middle_name varchar(25),
    last_name varchar(30),
    last_update varchar(8)
, PRIMARY KEY(`trans_cidr_key`)
) ENGINE=INNODB;

CREATE TABLE trans_empl (
    trans_empl_key int(11) auto_increment NOT NULL,
    psu_id varchar(100),
    date_empl_hired varchar(100),
    code_empl_sex varchar(100),
    date_empl_birth varchar(100),
    numb_empl_phone_home varchar(100),
    addr_empl_room_integer varchar(100),
    addr_empl_building_name varchar(100),
    addr_empl_campus_name varchar(100),
    addr_empl_office_street varchar(100),
    addr_empl_office_city varchar(100),
    addr_empl_offc_state varchar(100),
    addr_empl_offc_zip varchar(100),
    numb_empl_phone_offc varchar(100),
    name_empl_first_legal varchar(100),
    name_empl_mid_legal varchar(100),
    name_empl_last_legal varchar(100),
    name_empl_sfx_legal varchar(100),
    name_empl_pm_preferred_name varchar(100),
    filler varchar(100),
    addr_empl_street_home varchar(100),
    addr_empl_city_home varchar(100),
    addr_empl_state_home varchar(100),
    addr_empl_zip_home_prime varchar(100),
    addr_empl_zip_home_second varchar(100),
    code_empl_country_home varchar(100),
    code_empl_fnat_visa_type varchar(100),
    code_empl_class varchar(100),
    code_empl_status varchar(100),
    code_budg_numb_home varchar(100),
    code_budg_location_home varchar(100),
    name_jobd_title_short varchar(100),
    name_jobd_title_long varchar(100),
    code_empl_rank varchar(100),
    code_appt varchar(100),
    code_empl_appt_special varchar(100),
    date_empl_termn varchar(100),
    code_appt_type varchar(100),
    code_empl_bnfts_rate varchar(100),
    date_empl_paid varchar(100),
    code_empl_title_class varchar(100),
    code_empl_title2_class varchar(100),
    code_empl_layoff varchar(100),
    addr_campus_addr_line1 varchar(100),
    code_empl_direct_phone varchar(100),
    addr_campus_addr_line2 varchar(100),
    numb_pers_access_acct_id varchar(100),
    addr_campus_addr_line3 varchar(100),
    name_empl_department varchar(100),
    code_admin_area varchar(100),
    name_empl_admin_area varchar(100),
    code_mnemonic varchar(100),
    student_status varchar(1),
    code_campus varchar(100),
    addr_empl_st2_home varchar(100),
    alt_job_title varchar(128),
    job_family varchar(100),
    code_empl_pay_calc varchar(100)
, PRIMARY KEY(`trans_empl_key`)
) ENGINE=INNODB;

CREATE TABLE trans_hershey (
    trans_hershey_key int(11) auto_increment NOT NULL,
    psu_id varchar(16),
    last_name varchar(100),
    first_name varchar(100),
    middle_names varchar(100),
    suffix varchar(100),
    preferred_name varchar(240),
    dept_name varchar(100),
    mail_code varchar(100),
    campus_name varchar(100),
    work_address1 varchar(100),
    work_address2 varchar(100),
    work_city varchar(100),
    work_state varchar(100),
    work_zipcode varchar(100),
    work_phone varchar(100),
    work_phone_ext varchar(10),
    title varchar(100),
    date_of_birth varchar(100),
    appt_type_code varchar(100),
    home_address1 varchar(100),
    home_address2 varchar(100),
    home_city varchar(100),
    home_state varchar(2),
    home_zipcode varchar(100),
    home_country varchar(3),
    gender varchar(1),
    hr_hire_date varchar(8),
    hr_term_date varchar(8)
, PRIMARY KEY(`trans_hershey_key`)
) ENGINE=INNODB;

CREATE TABLE trans_oasis (
    trans_oasis_key int(11) auto_increment NOT NULL,
    psu_id varchar(9),
    userid varchar(30),
    `status` varchar(1)
, PRIMARY KEY(`trans_oasis_key`)
) ENGINE=INNODB;

CREATE TABLE trans_stubio (
    trans_stubio_key int(11) auto_increment NOT NULL,
    psu_id varchar(100) NOT NULL,
    psu_id_prev varchar(100),
    `type` text,
    name_pers_last text,
    name_pers_first text,
    name_pers_mid text,
    name_pers_sfx text,
    code_stud_coll1 text,
    code_stud_coll2 text,
    code_stud_coll3 text,
    code_stud_coll4 text,
    code_stud_acdt1 text,
    code_stud_acdt2 text,
    code_stud_acdt3 text,
    code_stud_acdt4 text,
    code_camp text,
    code_pers_sex text,
    code_stud_majr1 text,
    code_stud_majr2 text,
    code_stud_majr3 text,
    code_stud_majr4 text,
    code_stud_lvl text,
    code_stud_clsfctn_yrtm text,
    code_stud_stat text,
    numb_stud_access_acct_id text,
    date_pers_birth text,
    indc_stud_graduation text,
    sem text,
    date_confid_end text,
    date_confid_beg text,
    appl_stat text,
    appl_type text,
    date_counsel text,
    phone_local text,
    req_sem text,
    addr_locl_st1 text,
    addr_locl_st2 text,
    addr_locl_city text,
    addr_locl_state text,
    addr_locl_zip text,
    addr_locl_ctry text,
    phone_home text,
    addr_home_st1 text,
    addr_home_st2 text,
    addr_home_city text,
    addr_home_state text,
    addr_home_zip text,
    addr_home_ctry text,
    code_scholar text,
    date_scholar text,
    loa_start text,
    loa_return_st1 text,
    code_pers_cznshp_st2 text,
    code_pers_residence text,
    stud_reg text,
    stud_hold text,
    code_stud_admit_univ_yrterm text,
    addr_locl_st3 text,
    addr_home_st3 text,
    code_hotl varchar(10),
    fps_id varchar(8),
    class_load varchar(1),
    preferred_name varchar(100),
    cell_phone varchar(100),
    cell_carrier varchar(100),
    non_psu_email_addr varchar(100),
    student_aid varchar(100)
, PRIMARY KEY(`trans_stubio_key`)
) ENGINE=INNODB;

CREATE TABLE ui_applications (
    ui_application_key int(11) auto_increment NOT NULL,
    application_name varchar(200) NOT NULL,
    application_desc text NOT NULL,
    suspend_flag varchar(1) DEFAULT 'Y',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`ui_application_key`)
) ENGINE=INNODB;

CREATE TABLE ui_field_types (
    ui_field_type varchar(25) DEFAULT ' ',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE ui_log (
    ui_log_key int(11) auto_increment NOT NULL,
    ui_application_key int(11) NOT NULL,
    request_datetime timestamp NOT NULL,
    request_duration int(11),
    request_string text,
    result_string text,
    ip_address varchar(50),
    request_userid varchar(30),
    browser_type varchar(200),
    error_flag varchar(1) DEFAULT 'N'
, PRIMARY KEY(`ui_log_key`)
) ENGINE=INNODB;

CREATE TABLE ui_screen_fields (
    ui_screen_name varchar(30) DEFAULT ' ',
    ui_field_name varchar(30) DEFAULT ' ',
    ui_field_type varchar(25) NOT NULL,
    max_length int(11),
    field_width int(11),
    field_height int(11),
    required_flag varchar(1) DEFAULT 'Y',
    display_flag varchar(1) DEFAULT 'Y',
    active_flag varchar(1) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE ui_screens (
    ui_screen_name varchar(30) DEFAULT ' ',
    ui_application_key int(11) NOT NULL,
    required_flag varchar(1) DEFAULT 'Y',
    active_flag varchar(1) NOT NULL,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;

CREATE TABLE user_comments (
    user_comment_key int(11) auto_increment NOT NULL,
    comments text NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    data_type_key int(11) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    person_id int(11) NOT NULL,
    start_date timestamp NOT NULL,
    userid varchar(30) NOT NULL
, PRIMARY KEY(`user_comment_key`)
) ENGINE=INNODB;

CREATE TABLE user_service_status (
    user_service_status_key int(11) auto_increment NOT NULL,
    person_id int(11) NOT NULL,
    userid varchar(30) NOT NULL,
    service_key int(11) NOT NULL,
    message_consumer_key int(11) NOT NULL,
    expiration_date timestamp,
    provision_date timestamp NOT NULL,
    deprovision_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`user_service_status_key`)
) ENGINE=INNODB;

CREATE TABLE userid (
    userid varchar(30) NOT NULL,
    person_id int(11) NOT NULL,
    char_part varchar(30),
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    display_name_flag varchar(1) NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    num_part int(11),
    primary_flag varchar(1) NOT NULL,
    psu_id_letter varchar(1),
    start_date timestamp NOT NULL,
    scoped_uuid varchar(100),
    import_from varchar(30),
    import_date timestamp
) ENGINE=INNODB;

CREATE TABLE userid_policy_status (
    userid_policy_status_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    date_accepted timestamp,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp,
    person_id int(11) NOT NULL,
    policy_key int(11) NOT NULL,
    start_date timestamp NOT NULL,
    userid varchar(30) NOT NULL
, PRIMARY KEY(`userid_policy_status_key`)
) ENGINE=INNODB;

CREATE TABLE userid_pool (
    userid_pool_key int(11) auto_increment NOT NULL,
    char_part varchar(30) NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    num_part int(11) NOT NULL,
    userid varchar(30) NOT NULL
, PRIMARY KEY(`userid_pool_key`)
) ENGINE=INNODB;

CREATE TABLE usps_state_types (
    usps_state_type_key int(11) auto_increment NOT NULL,
    usps_state_type varchar(50) NOT NULL
, PRIMARY KEY(`usps_state_type_key`)
) ENGINE=INNODB;

CREATE TABLE usps_states (
    state_code varchar(2) NOT NULL,
    state_name varchar(50) NOT NULL,
    usps_state_type_key int(11) NOT NULL
) ENGINE=INNODB;

CREATE TABLE web_service (
    web_service_key int(11) auto_increment NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    start_date timestamp NOT NULL,
    web_service varchar(30) NOT NULL,
    web_service_desc varchar(150) NOT NULL
, PRIMARY KEY(`web_service_key`)
) ENGINE=INNODB;

CREATE TABLE web_service_access (
    web_service_access_key int(11) auto_increment NOT NULL,
    cpr_access_groups_key int(11) NOT NULL,
    web_service_key int(11) NOT NULL,
    suspend_flag varchar(1) DEFAULT 'Y',
    start_date timestamp NOT NULL,
    end_date timestamp,
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
, PRIMARY KEY(`web_service_access_key`)
) ENGINE=INNODB;

CREATE TABLE visa_cs (
    visa_code varchar(6) NOT NULL,
    visa_desc varchar(40),
    active_flag varchar(1) DEFAULT 'N',
    last_update_by varchar(30) NOT NULL,
    last_update_on timestamp NOT NULL,
    created_by varchar(30) NOT NULL,
    created_on timestamp NOT NULL
) ENGINE=INNODB;


CREATE or replace VIEW v_database_log (number_tries, entry_timestamp, request_duration) AS 
  (
SELECT substr(REVERSE(output_string),2,1) as number_tries, entry_timestamp, request_duration
 FROM database_log
WHERE entry_type = 'INFO'
);

  CREATE OR REPLACE VIEW v_ext_affiliation_mapping (affiliation_key, affiliation, aff_enum_string, aff_active_flag, ext_affiliation_type_key, ext_affiliation_type, extafftype_active_flag, ext_affiliation_key, ext_affiliation, extaff_active_flag) AS 
  SELECT
	affiliations.affiliation_key,
	affiliations.affiliation,
	affiliations.enum_string AS aff_enum_string,
	affiliations.active_flag AS aff_active_flag,
	ext_affiliation_types.ext_affiliation_type_key,
	ext_affiliation_types.ext_affiliation_type,
	ext_affiliation_types.active_flag AS extafftype_active_flag,
	ext_affiliation.ext_affiliation_key,
	ext_affiliation.ext_affiliation,
	ext_affiliation.active_flag AS extaff_active_flag
FROM affiliations LEFT JOIN ext_affiliation_mapping
  		ON affiliations.affiliation_key = ext_affiliation_mapping.affiliation_key
	LEFT JOIN ext_affiliation
  		ON ext_affiliation_mapping.ext_affiliation_key = ext_affiliation.ext_affiliation_key
	LEFT JOIN ext_affiliation_types
		ON ext_affiliation.ext_affiliation_type_key = ext_affiliation_types.ext_affiliation_type_key;

  CREATE OR REPLACE VIEW v_external_iap_federation (person_id, userid, external_iap, federation) AS 
  SELECT person_userid_iap.person_id,
	person_userid_iap.userid,
	external_iap.external_iap,
	federation.federation
FROM federation JOIN external_iap USING (federation_key)
   JOIN iap_ext_mapping USING (external_iap_key)
   JOIN iap USING (iap_key)
   JOIN person_userid_iap USING (iap_key)
WHERE person_userid_iap.end_date IS NULL
  AND iap_ext_mapping.end_date IS NULL
  AND iap.active_flag = 'Y'
  AND external_iap.active_flag = 'Y'
  AND federation.active_flag = 'Y';

  CREATE OR REPLACE VIEW v_group_data_type_access (cpr_access_groups_key, access_group, cpraccgrp_susped_flag, group_data_type_access_key, data_type_key, read_flag, write_flag, archive_flag, parent_data_type_key, data_type, datatype_enum_string, datatype_can_assign_flag, datatype_active_flag) AS 
  SELECT
	cpr_access_groups.cpr_access_groups_key,
	cpr_access_groups.access_group,
	cpr_access_groups.suspend_flag AS cpraccgrp_suspend_flag,
	group_data_type_access.group_data_type_access_key,
	data_types.data_type_key,
	group_data_type_access.read_flag,
	group_data_type_access.write_flag,
	group_data_type_access.archive_flag,
	data_types.parent_data_type_key,
	data_types.data_type,
	data_types.enum_string AS datatype_enum_string,
	data_types.can_assign_flag AS datatype_can_assign_flag,
	data_types.active_flag AS datatype_active_flag
 FROM cpr_access_groups
	JOIN group_data_type_access ON cpr_access_groups.cpr_access_groups_key = group_data_type_access.cpr_access_groups_key
	JOIN data_types ON group_data_type_access.data_type_key = data_types.data_type_key;

  CREATE OR REPLACE VIEW v_internal_affiliations (person_id, primary_flag, peraff_end_date, affiliation_key, affiliation, enum_string, aff_active_flag, can_assign_flag) AS 
  SELECT person_affiliation.person_id,
	person_affiliation.primary_flag,
	person_affiliation.end_date AS peraff_end_date,
	affiliations.affiliation_key,
	affiliations.affiliation,
	affiliations.enum_string,
	affiliations.active_flag AS aff_active_flag,
	affiliations.can_assign_flag
FROM person_affiliation JOIN affiliations
      ON person_affiliation.affiliation_key = affiliations.affiliation_key;

  CREATE OR REPLACE VIEW v_person_affiliation (person_affiliation_key, person_id, affiliation_key, primary_flag, peraff_end_date, parent_affiliation_key, affiliation, aff_enum_string) AS 
  SELECT
	person_affiliation.person_affiliation_key,
	person_affiliation.person_id,
	person_affiliation.affiliation_key,
	person_affiliation.primary_flag,
	person_affiliation.end_date AS peraff_end_date,
	affiliations.parent_affiliation_key,
	affiliations.affiliation,
	affiliations.enum_string AS aff_enum_string
FROM person_affiliation JOIN affiliations
		ON person_affiliation.affiliation_key = affiliations.affiliation_key;

  CREATE OR REPLACE VIEW v_person_id_card_print_log (person_id_card_key, person_id, id_card_number, id_card_print_log_key, work_station_ip_address, work_station_name, printed_by, printed_on) AS 
  SELECT
	person_id_card.person_id_card_key,
	person_id_card.person_id,
	person_id_card.id_card_number,
	id_card_print_log.id_card_print_log_key,
	id_card_print_log.work_station_ip_address,
	id_card_print_log.work_station_name,
	id_card_print_log.printed_by,
	id_card_print_log.printed_on
FROM person_id_card JOIN id_card_print_log
		ON person_id_card.person_id_card_key = id_card_print_log.person_id_card_key;

  CREATE OR REPLACE VIEW v_ra_group_web_service (group_member_key, cpr_access_groups_key, registration_authority_key, ra_server_principal_key, userid, ra_suspend_flag, grpmbrs_suspend_flag, cpraccgprs_suspend_flag, websrvacc_suspend_flag, web_service) AS 
  SELECT group_members.group_member_key,
	   cpr_access_groups.cpr_access_groups_key,
	   ra_server_principals.registration_authority_key,
	   ra_server_principals.ra_server_principal_key,
       group_members.userid,
       ra.suspend_flag as ra_suspend_flag,
       group_members.suspend_flag AS grpmbrs_suspend_flag,
       cpr_access_groups.suspend_flag AS cpraccgprs_suspend_flag,
       web_service_access.suspend_flag AS websrvacc_suspend_flag,
       web_service.web_service
 FROM registration_authority ra JOIN ra_server_principals
      	ON ra.registration_authority_key = ra_server_principals.registration_authority_key
    JOIN cpr_access_groups ON ra_server_principals.ra_server_principal_key = cpr_access_groups.ra_server_principal_key
    JOIN group_members ON cpr_access_groups.cpr_access_groups_key = group_members.cpr_access_groups_key
    JOIN web_service_access ON cpr_access_groups.cpr_access_groups_key = web_service_access.cpr_access_groups_key
    JOIN web_service ON web_service_access.web_service_key = web_service.web_service_key
 WHERE group_members.end_date IS NULL
 AND cpr_access_groups.end_date IS NULL
 AND ra_server_principals.end_date IS NULL
 AND web_service_access.end_date IS NULL
 AND web_service.end_date IS NULL
 AND ra.end_date IS NULL;

  CREATE OR REPLACE VIEW v_sp_notification (message_consumer_key, consumer, consumer_destination, destination_type, web_service, web_service_key, service_name, service_key) AS 
  SELECT message_consumer.message_consumer_key,
       message_consumer.consumer,
       message_consumer.consumer_destination,
       message_consumer.destination_type,
       web_service.web_service,
       web_service.web_service_key,
       services.service_name,
       services.service_key
  FROM message_consumer
  JOIN message_consumer_mapping ON message_consumer.message_consumer_key = message_consumer_mapping.message_consumer_key
    AND message_consumer.end_date IS NULL
    AND message_consumer.suspend_flag = 'N'
    AND message_consumer_mapping.end_date IS NULL
  JOIN web_service ON message_consumer_mapping.web_service_key = web_service.web_service_key
    AND web_service.end_date IS NULL
  JOIN services ON message_consumer_mapping.service_key = services.service_key AND
  	services.active_flag = 'Y';

ALTER TABLE `addresses` ADD INDEX ( person_id, end_date, data_type_key ) ;
ALTER TABLE `addresses` ADD INDEX ( address1, address2, address3 ) ;
ALTER TABLE `addresses` ADD INDEX ( person_id ) ;
ALTER TABLE `addresses` ADD INDEX ( data_type_key ) ;
ALTER TABLE `addresses` ADD INDEX ( campus_code_key ) ;
ALTER TABLE `addresses` ADD INDEX ( country_key ) ;
ALTER TABLE `addresses` ADD INDEX ( person_id, address_match_code, city_match_code, state, postal_code ) ;
ALTER TABLE `addresses` ADD INDEX ( address_key ) ;
ALTER TABLE `aff_transition_rules` ADD INDEX ( current_affiliation_key, request_affiliation_key, result_affiliation_key, expire_flag ) ;
ALTER TABLE `aff_transition_rules` ADD INDEX ( aff_transition_rule_key ) ;
ALTER TABLE `affiliations` ADD INDEX ( active_flag, affiliation_key ) ;
ALTER TABLE `affiliations` ADD INDEX ( affiliation_key ) ;
ALTER TABLE `address_staging` ADD INDEX ( address1, address2, address3 ) ;
ALTER TABLE `address_staging` ADD INDEX ( campus_code_key ) ;
ALTER TABLE `address_staging` ADD INDEX ( country_key ) ;
ALTER TABLE `address_staging` ADD INDEX ( data_type_key ) ;
ALTER TABLE `address_staging` ADD INDEX ( person_id ) ;
ALTER TABLE `address_staging` ADD INDEX ( person_id, address_match_code, city_match_code, state, postal_code ) ;
ALTER TABLE `bad_prefixes` ADD INDEX ( char_part ) ;
ALTER TABLE `cpr_access_groups` ADD INDEX ( ra_server_principal_key ) ;
ALTER TABLE `campus_cs` ADD INDEX ( campus_code, active_flag ) ;
ALTER TABLE `campus_cs` ADD INDEX ( campus_code_key ) ;
ALTER TABLE `change_notifications` ADD INDEX ( change_notification_types_key ) ;
ALTER TABLE `change_notifications` ADD INDEX ( message_consumer_key ) ;
ALTER TABLE `confidentiality` ADD INDEX ( end_date, person_id, data_type_key ) ;
ALTER TABLE `confidentiality` ADD INDEX ( person_id ) ;
ALTER TABLE `confidentiality` ADD INDEX ( data_type_key ) ;
ALTER TABLE `confidentiality` ADD INDEX ( confidentiality_key ) ;
ALTER TABLE `country` ADD INDEX ( country_key ) ;
ALTER TABLE `cpr_component_status` ADD INDEX ( cpr_component ) ;
ALTER TABLE `cpr_component_status` ADD INDEX ( cpr_component_status_key ) ;
ALTER TABLE `credential` ADD INDEX ( credential_key ) ;
ALTER TABLE `credential` ADD INDEX ( end_date, person_id, data_type_key ) ;
ALTER TABLE `credential` ADD INDEX ( person_id ) ;
ALTER TABLE `credential` ADD INDEX ( data_type_key ) ;
ALTER TABLE `person_citizenship` ADD INDEX ( person_id ) ;
ALTER TABLE `data_element_doc_types` ADD INDEX ( data_element_doc_type_key ) ;
ALTER TABLE `data_element_types` ADD INDEX ( data_element_type_key ) ;
ALTER TABLE `data_types` ADD INDEX ( enum_string ) ;
ALTER TABLE `data_types` ADD INDEX ( parent_data_type_key ) ;
ALTER TABLE `data_types` ADD INDEX ( data_type_key ) ;
ALTER TABLE `database_log` ADD INDEX ( entry_timestamp, program_name ) ;
ALTER TABLE `database_log` ADD INDEX ( database_log_key ) ;
ALTER TABLE `date_of_birth` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `date_of_birth` ADD INDEX ( person_id ) ;
ALTER TABLE `date_of_birth` ADD INDEX ( date_of_birth_key ) ;
ALTER TABLE `email_address` ADD INDEX ( person_id ) ;
ALTER TABLE `email_address` ADD INDEX ( data_type_key ) ;
ALTER TABLE `email_address` ADD INDEX ( email_address_key ) ;
ALTER TABLE `email_notification` ADD INDEX ( notification_process ) ;
ALTER TABLE `employee` ADD INDEX ( appt_code ) ;
ALTER TABLE `employee` ADD INDEX ( campus_code_key ) ;
ALTER TABLE `employee_hist` ADD INDEX ( appt_code ) ;
ALTER TABLE `employee_hist` ADD INDEX ( person_id ) ;
ALTER TABLE `employee` ADD INDEX ( person_id ) ;
ALTER TABLE `event_triggers` ADD INDEX ( event_trigger_key ) ;
ALTER TABLE `ext_affiliation_mapping` ADD INDEX ( ext_affiliation_mapping_key ) ;
ALTER TABLE `ext_affiliation_mapping` ADD INDEX ( affiliation_key, ext_affiliation_key ) ;
ALTER TABLE `ext_affiliation` ADD INDEX ( ext_affiliation_key ) ;
ALTER TABLE `ext_affiliation_types` ADD INDEX ( ext_affiliation_type_key ) ;
ALTER TABLE `external_iap` ADD INDEX ( external_iap_key, active_flag, external_iap ) ;
ALTER TABLE `external_iap` ADD INDEX ( external_iap_key ) ;
ALTER TABLE `federation` ADD INDEX ( federation_key, active_flag, federation ) ;
ALTER TABLE `federation` ADD INDEX ( federation_key ) ;
ALTER TABLE `group_data_type_access` ADD INDEX ( cpr_access_groups_key ) ;
ALTER TABLE `group_data_type_access` ADD INDEX ( data_type_key ) ;
ALTER TABLE `generated_identity` ADD INDEX ( generated_identity ) ;
ALTER TABLE `generated_identity` ADD INDEX ( char_part, num_part ) ;
ALTER TABLE `generated_identity` ADD INDEX ( person_id ) ;
ALTER TABLE `generated_identity` ADD INDEX ( generated_identity_key ) ;
ALTER TABLE `generated_identity` ADD INDEX ( set_id ) ;
ALTER TABLE `group_data_type_access` ADD INDEX ( data_type_key, cpr_access_groups_key ) ;
ALTER TABLE `group_data_type_access` ADD INDEX ( group_data_type_access_key ) ;
ALTER TABLE `group_member_comments` ADD INDEX ( group_member_comment_key ) ;
ALTER TABLE `group_members` ADD INDEX ( cpr_access_groups_key, userid, end_date ) ;
ALTER TABLE `group_members` ADD INDEX ( userid, end_date ) ;
ALTER TABLE `group_members` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `group_members` ADD INDEX ( group_member_key ) ;
ALTER TABLE `iap_data_element` ADD INDEX ( iap_data_element_key ) ;
ALTER TABLE `iap_document` ADD INDEX ( iap_document_key ) ;
ALTER TABLE `iap_ext_mapping` ADD INDEX ( iap_key, external_iap_key, end_date ) ;
ALTER TABLE `iap_ext_mapping` ADD INDEX ( iap_ext_mapping_key ) ;
ALTER TABLE `iap` ADD INDEX ( iap_key ) ;
ALTER TABLE `iap_rules` ADD INDEX ( iap_rule_key ) ;
ALTER TABLE `id_card_print_log` ADD INDEX ( id_card_print_log_key ) ;
ALTER TABLE `id_card_print_log` ADD INDEX ( person_id_card_key ) ;
ALTER TABLE `java_exceptions` ADD INDEX ( java_exception_key ) ;
ALTER TABLE `match_results` ADD INDEX ( person_id ) ;
ALTER TABLE `match_results` ADD INDEX ( match_set_key, score, person_id ) ;
ALTER TABLE `message_consumer_mapping` ADD INDEX ( message_consumer_key ) ;
ALTER TABLE `message_consumer_mapping` ADD INDEX ( service_key ) ;
ALTER TABLE `message_consumer_mapping` ADD INDEX ( web_service_key ) ;
ALTER TABLE `mc_warning_notifications` ADD INDEX ( event_trigger_key ) ;
ALTER TABLE `mc_warning_notifications` ADD INDEX ( message_consumer_key ) ;
ALTER TABLE `message_log` ADD INDEX ( created_on ) ;
ALTER TABLE `message_log_history` ADD INDEX ( message_id ) ;
ALTER TABLE `message_log` ADD INDEX ( message_consumer_key ) ;
ALTER TABLE `message_log` ADD INDEX ( web_service_key ) ;
ALTER TABLE `names` ADD INDEX ( person_id ) ;
ALTER TABLE `names` ADD INDEX ( data_type_key ) ;
ALTER TABLE `names` ADD INDEX ( name_match_code, person_id ) ;
ALTER TABLE `names` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `names` ADD INDEX ( name_key ) ;
ALTER TABLE `names_staging` ADD INDEX ( name_match_code, person_id ) ;
ALTER TABLE `names_staging` ADD INDEX ( person_id ) ;
ALTER TABLE `person_citizenship` ADD INDEX ( citizenship ) ;
ALTER TABLE `person_affiliation` ADD INDEX ( person_id, affiliation_key, end_date ) ;
ALTER TABLE `person_affiliation` ADD INDEX ( person_id ) ;
ALTER TABLE `person_affiliation` ADD INDEX ( affiliation_key ) ;
ALTER TABLE `person_affiliation` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `person_affiliation` ADD INDEX ( person_affiliation_key ) ;
ALTER TABLE `person_citizenship` ADD INDEX ( person_citizenship_key ) ;
ALTER TABLE `person_gender` ADD INDEX ( person_id, end_date, data_type_key ) ;
ALTER TABLE `person_gender` ADD INDEX ( person_id ) ;
ALTER TABLE `person_gender` ADD INDEX ( data_type_key ) ;
ALTER TABLE `person_gender` ADD INDEX ( person_gender_key ) ;
ALTER TABLE `person_iap_data` ADD INDEX ( person_iap_data_key ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( person_id ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( iap_key ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( registration_authority_key ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( group_member_key ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `person_iap_vp` ADD INDEX ( person_iap_vp_key ) ;
ALTER TABLE `person_id_card` ADD INDEX ( person_id, end_date, data_type_key ) ;
ALTER TABLE `person_id_card` ADD INDEX ( person_id_card_key ) ;
ALTER TABLE `person` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `person_linkage` ADD INDEX ( linked_person_id, person_id, data_type_key ) ;
ALTER TABLE `person_linkage` ADD INDEX ( end_date ) ;
ALTER TABLE `person_linkage` ADD INDEX ( person_id ) ;
ALTER TABLE `person_linkage` ADD INDEX ( data_type_key ) ;
ALTER TABLE `person_linkage` ADD INDEX ( person_linkage_key ) ;
ALTER TABLE `person_photo` ADD INDEX ( person_id ) ;
ALTER TABLE `person_photo` ADD INDEX ( person_photo_key ) ;
ALTER TABLE `person` ADD INDEX ( person_id ) ;
ALTER TABLE `person_userid_iap` ADD INDEX ( userid, iap_key, end_date ) ;
ALTER TABLE `person_userid_iap` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `person_userid_iap` ADD INDEX ( person_userid_iap_key ) ;
ALTER TABLE `phones` ADD INDEX ( group_id, data_type_key, person_id, end_date ) ;
ALTER TABLE `phones` ADD INDEX ( data_type_key, person_id, start_date ) ;
ALTER TABLE `phones` ADD INDEX ( person_id ) ;
ALTER TABLE `phones` ADD INDEX ( data_type_key ) ;
ALTER TABLE `phones` ADD INDEX ( phone_key ) ;
ALTER TABLE `photo_id_issuer_data_type` ADD INDEX ( photo_id_issuer_data_type_key ) ;
ALTER TABLE `photo_id_issuer` ADD INDEX ( photo_id_issuer_key ) ;
ALTER TABLE `policies` ADD INDEX ( policy_key ) ;
ALTER TABLE `psu_directory` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `psu_directory` ADD INDEX ( person_id ) ;
ALTER TABLE `psu_directory` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `psu_directory` ADD INDEX ( psu_directory_key ) ;
ALTER TABLE `psu_id` ADD INDEX ( person_id, end_date ) ;
ALTER TABLE `psu_id` ADD INDEX ( psu_id, end_date ) ;
ALTER TABLE `psu_id_exceptions` ADD INDEX ( psu_id ) ;
ALTER TABLE `psu_id` ADD INDEX ( psu_id_key ) ;
ALTER TABLE `ra_affiliation` ADD INDEX ( affiliation_key, registration_authority_key ) ;
ALTER TABLE `ra_affiliation` ADD INDEX ( ra_affiliation_key ) ;
ALTER TABLE `ra_application_properties` ADD INDEX ( ra_application_properties_key ) ;
ALTER TABLE `ra_applications` ADD INDEX ( registration_authority_key ) ;
ALTER TABLE `ra_applications` ADD INDEX ( ra_application_key ) ;
ALTER TABLE `ra_comments` ADD INDEX ( ra_comment_key ) ;
ALTER TABLE `ra_iap_assign` ADD INDEX ( ra_iap_assign_key ) ;
ALTER TABLE `ra_screen_fields` ADD INDEX ( ra_screen_field_key ) ;
ALTER TABLE `ra_screens` ADD INDEX ( ra_screen_key ) ;
ALTER TABLE `ra_server_principals` ADD INDEX ( ra_server_principal, end_date, registration_authority_key ) ;
ALTER TABLE `ra_server_principals` ADD INDEX ( ra_server_principal_key ) ;
ALTER TABLE `registration_authority` ADD INDEX ( end_date ) ;
ALTER TABLE `registration_authority` ADD INDEX ( registration_authority ) ;
ALTER TABLE `registration_authority` ADD INDEX ( ra_contact_key ) ;
ALTER TABLE `registration_authority` ADD INDEX ( registration_authority_key ) ;
ALTER TABLE `student_academic_college_hist` ADD INDEX ( person_id, semester_code, college_code ) ;
ALTER TABLE `student_academic_college_hist` ADD INDEX ( semester_code ) ;
ALTER TABLE `student_academic_college` ADD INDEX ( person_id ) ;
ALTER TABLE `student_academic_college` ADD INDEX ( semester_code ) ;
ALTER TABLE `student_academic_dept_hist` ADD INDEX ( person_id, semester_code, department_code ) ;
ALTER TABLE `student_academic_dept_hist` ADD INDEX ( semester_code ) ;
ALTER TABLE `student_academic_department` ADD INDEX ( person_id ) ;
ALTER TABLE `student_academic_department` ADD INDEX ( semester_code ) ;
ALTER TABLE `security_question_answers` ADD INDEX ( person_id, userid ) ;
ALTER TABLE `security_question_answers` ADD INDEX ( sec_quest_answer_key ) ;
ALTER TABLE `security_questions` ADD INDEX ( sec_quest_group_key, end_date ) ;
ALTER TABLE `security_questions` ADD INDEX ( sec_quest_key ) ;
ALTER TABLE `server_principal_ip` ADD INDEX ( server_principal_ip_key ) ;
ALTER TABLE `service_log` ADD INDEX ( request_userid ) ;
ALTER TABLE `service_log` ADD INDEX ( service_log_key ) ;
ALTER TABLE `services` ADD INDEX ( service_key ) ;
ALTER TABLE `student_major_hist` ADD INDEX ( person_id, semester_code, major_code ) ;
ALTER TABLE `student_major_hist` ADD INDEX ( semester_code ) ;
ALTER TABLE `student_major` ADD INDEX ( person_id ) ;
ALTER TABLE `student_major` ADD INDEX ( semester_code ) ;
ALTER TABLE `server_principal_ip` ADD INDEX ( ra_server_principal_key ) ;
ALTER TABLE `service_log` ADD INDEX ( request_start ) ;
ALTER TABLE `student_hist` ADD INDEX ( person_id, semester_code ) ;
ALTER TABLE `student_hist` ADD INDEX ( semester_code ) ;
ALTER TABLE `student` ADD INDEX ( person_id ) ;
ALTER TABLE `student` ADD INDEX ( semester_code ) ;
ALTER TABLE `trans_cidr` ADD INDEX ( psu_id ) ;
ALTER TABLE `trans_empl` ADD INDEX ( psu_id ) ;
ALTER TABLE `trans_hershey` ADD INDEX ( psu_id ) ;
ALTER TABLE `trans_oasis` ADD INDEX ( psu_id ) ;
ALTER TABLE `trans_stubio` ADD INDEX ( psu_id ) ;
ALTER TABLE `ui_field_types` ADD INDEX ( ui_field_type ) ;
ALTER TABLE `ui_log` ADD INDEX ( ui_log_key ) ;
ALTER TABLE `ui_screen_fields` ADD INDEX ( ui_screen_name, ui_field_name ) ;
ALTER TABLE `ui_screens` ADD INDEX ( ui_screen_name ) ;
ALTER TABLE `ui_applications` ADD INDEX ( ui_application_key ) ;
ALTER TABLE `user_comments` ADD INDEX ( end_date, userid ) ;
ALTER TABLE `user_comments` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `user_comments` ADD INDEX ( data_type_key ) ;
ALTER TABLE `user_comments` ADD INDEX ( user_comment_key ) ;
ALTER TABLE `userid_policy_status` ADD INDEX ( userid_policy_status_key ) ;
ALTER TABLE `userid` ADD INDEX ( char_part, num_part ) ;
ALTER TABLE `userid` ADD INDEX ( person_id ) ;
ALTER TABLE `userid` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `userid_pool` ADD INDEX ( char_part, num_part ) ;
ALTER TABLE `userid_pool` ADD INDEX ( userid_pool_key ) ;
ALTER TABLE `user_service_status` ADD INDEX ( message_consumer_key ) ;
ALTER TABLE `user_service_status` ADD INDEX ( service_key ) ;
ALTER TABLE `user_service_status` ADD INDEX ( userid, person_id ) ;
ALTER TABLE `web_service` ADD INDEX ( web_service, end_date, web_service_key ) ;
ALTER TABLE `web_service_access` ADD INDEX ( web_service_access_key ) ;
ALTER TABLE `web_service` ADD INDEX ( web_service_key ) ;
ALTER TABLE `web_service_access` ADD INDEX ( cpr_access_groups_key ) ;
ALTER TABLE `web_service_access` ADD INDEX ( web_service_key ) ;

alter table addresses add foreign key (person_id) references person(person_id);
alter table addresses add foreign key (data_type_key) references data_types(data_type_key);
alter table confidentiality add foreign key (person_id) references person(person_id);
alter table confidentiality add foreign key (data_type_key) references data_types(data_type_key);
alter table credential add foreign key (person_id) references person(person_id);
alter table credential add foreign key (data_type_key) references data_types(data_type_key);
alter table data_element_types add foreign key (data_type_key) references data_types(data_type_key);
alter table date_of_birth add foreign key (person_id) references person(person_id);
alter table email_address add foreign key (person_id) references person(person_id);
alter table email_address add foreign key (data_type_key) references data_types(data_type_key);
alter table ext_affiliation add foreign key (ext_affiliation_type_key) references ext_affiliation_types(ext_affiliation_type_key);
alter table ext_affiliation_mapping add foreign key (affiliation_key) references affiliations(affiliation_key);
alter table ext_affiliation_mapping add foreign key (ext_affiliation_key) references ext_affiliation(ext_affiliation_key);
alter table external_iap add foreign key (federation_key) references federation(federation_key);
alter table generated_identity add foreign key (person_id) references person(person_id);
alter table group_data_type_access add constraint gda_cag_fk foreign key ( cpr_access_groups_key) references cpr_access_groups ( cpr_access_groups_key);
alter table group_data_type_access add constraint gda_data_types_fk foreign key ( data_type_key) references data_types ( data_type_key);
alter table group_member_comments add foreign key (group_member_key) references group_members(group_member_key);
alter table group_members add constraint grpmbrs_cag_fk foreign key ( cpr_access_groups_key) references cpr_access_groups ( cpr_access_groups_key);
alter table group_members add constraint grpmbrs_userid_fk foreign key ( userid, person_id) references userid ( userid, person_id);
alter table id_card_print_log add foreign key (person_id_card_key) references person_id_card(person_id_card_key);
alter table match_results add foreign key (person_id) references person(person_id);
alter table names add foreign key (person_id) references person(person_id);
alter table names add foreign key (data_type_key) references data_types(data_type_key);
alter table person_affiliation add foreign key (person_id) references person(person_id);
alter table person_affiliation add foreign key (affiliation_key) references affiliations(affiliation_key);
alter table person_gender add foreign key (person_id) references person(person_id);
alter table person_gender add foreign key (data_type_key) references data_types(data_type_key);
alter table person_iap_data add foreign key (data_element_doc_type_key) references data_element_doc_types(data_element_doc_type_key);
alter table person_iap_data add foreign key (iap_document_key) references iap_document(iap_document_key);
alter table person_iap_vp add foreign key (person_id) references person(person_id);
alter table person_iap_vp add foreign key (userid) references userid(userid);
alter table person_iap_vp add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table person_id_card add foreign key (person_id) references person(person_id);
alter table person_id_card add foreign key (data_type_key) references data_types(data_type_key);
alter table person_identifier add foreign key (person_id) references person(person_id);
alter table person_identifier add foreign key (type_key) references identifier_type(type_key);
alter table person_linkage add foreign key (person_id) references person(person_id);
alter table person_linkage add foreign key (linked_person_id) references person(person_id);
alter table person_linkage add foreign key (data_type_key) references data_types(data_type_key);
alter table person_photo add foreign key (person_id) references person(person_id);
alter table person_userid_iap add foreign key (person_id) references person(person_id);
alter table person_userid_iap add foreign key (userid) references userid(userid);
alter table phones add foreign key (person_id) references person(person_id);
alter table phones add foreign key (data_type_key) references data_types(data_type_key);
alter table photo_id_issuer_data_type add foreign key (data_type_key) references data_types(data_type_key);
alter table psu_directory add foreign key (person_id) references person(person_id);
alter table psu_id add foreign key (person_id) references person(person_id);
alter table ra_affiliation add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table ra_comments add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table ra_iap_assign add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table ra_server_principals add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table ra_ui_application add foreign key (registration_authority_key) references registration_authority(registration_authority_key);
alter table security_question_answers add foreign key (person_id) references person(person_id);
alter table security_question_answers add foreign key (userid) references userid(userid);
alter table service_log add foreign key (web_service_key) references web_service(web_service_key);
alter table user_comments add foreign key (person_id) references person(person_id);
alter table user_comments add foreign key (userid) references userid(userid);
alter table user_comments add foreign key (data_type_key) references data_types(data_type_key);
alter table userid add foreign key (person_id) references person(person_id);
alter table userid_policy_status add foreign key (person_id) references person(person_id);
alter table userid_policy_status add foreign key (userid) references userid(userid);
alter table ui_screen_fields add constraint ui_screen_fields_pk primary key (ui_screen_name, ui_field_name);
alter table application_properties add constraint appprop_rauiapp_fk foreign key ( ui_application_key) references ui_applications ( ui_application_key);
alter table ra_application_properties add foreign key ( ra_application_key) references ra_applications ( ra_application_key);
alter table ra_applications add foreign key ( registration_authority_key) references registration_authority ( registration_authority_key);
alter table ra_applications add foreign key ( ui_application_key) references ui_applications ( ui_application_key);
alter table ra_screen_fields add foreign key ( ra_screen_key) references ra_screens ( ra_screen_key);
alter table ra_screen_fields add foreign key ( ui_screen_name, ui_field_name) references ui_screen_fields ( ui_screen_name, ui_field_name);
alter table ra_screens add foreign key ( ra_application_key) references ra_applications ( ra_application_key);
alter table security_question_answers add foreign key ( sec_quest_key) references security_questions ( sec_quest_key);
alter table security_question_answers add foreign key ( userid, person_id) references userid ( userid, person_id);
alter table ui_log add foreign key ( ui_application_key) references ui_applications ( ui_application_key);
alter table ui_screen_fields add foreign key ( ui_field_type) references ui_field_types ( ui_field_type);
alter table ui_screens add foreign key ( ui_application_key) references ui_applications ( ui_application_key);
alter table cpr_access_groups add constraint cag_spkey_group_uk unique ( ra_server_principal_key , access_group );
alter table cpr_access_groups add constraint cag_rasrvrprinc_fk foreign key ( ra_server_principal_key) references ra_server_principals ( ra_server_principal_key);
alter table web_service_access add constraint wsa_cag_fk foreign key ( cpr_access_groups_key) references cpr_access_groups ( cpr_access_groups_key);
alter table web_service_access add constraint wsa_websrvc_fk foreign key ( web_service_key) references web_service ( web_service_key);
alter table server_principal_ip add constraint spi_raserverprinc_fk foreign key ( ra_server_principal_key ) references ra_server_principals ( ra_server_principal_key);
alter table message_consumer add constraint mec_consumer_UK unique (consumer);
alter table message_consumer_mapping add constraint mcm_mec_fk foreign key ( message_consumer_key) references message_consumer ( message_consumer_key);
alter table message_consumer_mapping add constraint mcm_services_fk foreign key ( service_key) references services ( service_key);
alter table message_consumer_mapping add constraint mcm_websrvc_fk foreign key ( web_service_key) references web_service ( web_service_key);
alter table user_service_status add constraint USERSRVCSTAT_SERVICES_FK foreign key ( service_key) references services ( service_key);
alter table user_service_status add constraint USERSRVCSTAT_userid_FK foreign key ( userid, person_id) references userid ( userid, person_id);
alter table user_service_status add constraint usersrvcstat_mec_fk foreign key ( message_consumer_key) references message_consumer ( message_consumer_key);
alter table mc_warning_notifications add constraint mcw_eventtrig_fk foreign key ( event_trigger_key) references event_triggers ( event_trigger_key);
alter table mc_warning_notifications add constraint mcw_mec_fk foreign key ( message_consumer_key) references message_consumer ( message_consumer_key);
alter table change_notifications
    add constraint cno_consumer_chngnottype_UK UNIQUE ( message_consumer_key , change_notification_types_key ) ;
alter table change_notifications add constraint cno_cnt_fk foreign key ( change_notification_types_key) references change_notification_types ( change_notification_types_key);
alter table change_notifications add constraint cno_mec_fk foreign key ( message_consumer_key) references message_consumer ( message_consumer_key);
alter table message_log add constraint msglog_mec_fk foreign key ( message_consumer_key) references message_consumer ( message_consumer_key);
alter table message_log add constraint msglog_websrvc_fk foreign key ( web_service_key) references web_service ( web_service_key);
alter table message_log add constraint msglog_srv_fk foreign key ( service_key ) references services (service_key);
alter table message_log_history add constraint msghistlog_message_log_FK foreign key ( message_log_key) references message_log ( message_log_key);
