<?xml version="1.0" encoding="UTF-8"?>
<project name="IdentityProvisioning" default="dist" xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<property name="src.dir" value="src"/>
	<property name="build.dir" value="build"/>
	<property name="services.dir" value="${build.dir}/services"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="dist.dir" value="dist"/>
	<property name="jar.dir" value="${dist.dir}/lib"/>
	<property name="lib.dir" value="build-jars" />
	<property name="javadoc.dir" value="javadoc" />
	<property name="jar.file" value="${ant.project.name}.war"/>
	<property name="web.dir" value="WebContent/WEB-INF/lib" />
	<property name="core.file" value="cpr_core.jar"/>
	<property name="wsdl.dir" value="WebContent/wsdl"/>
    <property name="ivy.install.version" value="2.3.0"/>
    <property name="ivy.jar.dir" value="${basedir}/ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

	<path id="classpath.build">
		<fileset dir="${lib.dir}" includes="*.jar" />
		<path refid="lib.path.id" />
	</path>
		
	<path id="classpath.test">
		<path refid="classpath.build" />
		<pathelement path="${classes.dir}" />
	</path>
		
    <target name="download-ivy" depends="init" unless="skip.download">
    	<mkdir dir="${ivy.jar.dir}"/>
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
    	<path id="ivy.lib.path">
        	<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="get_depends" depends="install-ivy" description="--> resolve dependencies, compile and run the project">
        <ivy:retrieve type="jar,bundle" sync="true" pathId="lib.path.id" />
    </target>

	<target name="init" depends="clean">
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${services.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<copy file="../cpr_core/dist/lib/${core.file}" todir="${lib.dir}" />
	</target>
	
	<target name="compile" depends="get_depends">
		<javac srcdir="src" destdir="${classes.dir}" includeantruntime="false">
			<classpath refid="classpath.build" />
		</javac>
		<javadoc packagenames="edu.psu.iam.cpr.ip.*"
		           sourcepath="src"
		           destdir="${javadoc.dir}"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="${ant.project.name} User Interface JavaDoc">
			<classpath refid="classpath.build" />
		    <tag name="package" scope="all" description="Package:"/>
		    <tag name="lastrevision" scope="all" description="Last Revision:"/>
		</javadoc>
	</target>
			
 	
	<target name="dist" depends="compile">
		<mkdir dir="${jar.dir}" />
		<copy todir="${web.dir}">
			<fileset dir="lib" />
		</copy>
		<copy file="../cpr_core/dist/lib/${core.file}" todir="${web.dir}" />

	    <copy todir="${classes.dir}" >
	      <fileset dir="${src.dir}">
	        <include name="ui_properties.txt"/>
	      	<include name="struts.xml"/>
	      	<include name="log4j.properties"/>
	      </fileset>
	    </copy>
		<war destfile="${jar.dir}/${jar.file}" webxml="WebContent/WEB-INF/web.xml">
			<fileset dir="WebContent" />
			<lib dir="WebContent/WEB-INF/lib" />
			<classes dir="${classes.dir}" />
			
		</war>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${web.dir}" />
		<delete dir="${lib.dir}" />
	</target>	
</project>